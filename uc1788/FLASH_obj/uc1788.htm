<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\FLASH_obj\uc1788.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\FLASH_obj\uc1788.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Thu Aug 28 18:59:46 2014
<BR><P>
<H3>Maximum Stack Usage =       2176 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
Equipment_Task &rArr; Read_ConfigFile &rArr; yaffs_open &rArr; yaffs_open_reldir &rArr; yaffs_open_sharing_reldir &rArr; yaffs_create_file &rArr; yaffs_create_obj &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[7bb]">__user_initial_stackheap</a>
 <LI><a href="#[212]">OS_CPU_SR_Save</a>
 <LI><a href="#[214]">OS_CPU_SR_Restore</a>
 <LI><a href="#[232]">OSStartHighRdy</a>
 <LI><a href="#[218]">OSCtxSw</a>
 <LI><a href="#[22e]">OSIntCtxSw</a>
 <LI><a href="#[18]">OS_CPU_PendSVHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[11]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">NMI_Handler</a><BR>
 <LI><a href="#[12]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">HardFault_Handler</a><BR>
 <LI><a href="#[13]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">MemManage_Handler</a><BR>
 <LI><a href="#[14]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">BusFault_Handler</a><BR>
 <LI><a href="#[15]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">UsageFault_Handler</a><BR>
 <LI><a href="#[16]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">SVC_Handler</a><BR>
 <LI><a href="#[17]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">DebugMon_Handler</a><BR>
 <LI><a href="#[2f]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2f]">ADC_IRQHandler</a><BR>
 <LI><a href="#[516]">netconn_drain</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[516]">netconn_drain</a><BR>
 <LI><a href="#[53e]">lwip_sendto</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[53f]">lwip_send</a><BR>
 <LI><a href="#[8e7]">_DeleteAllChildren</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[825]">WM_DeleteWindow</a><BR>
 <LI><a href="#[8ec]">_Findx1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8ec]">_Findx1</a><BR>
 <LI><a href="#[8eb]">_Findx0</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8eb]">_Findx0</a><BR>
 <LI><a href="#[8ea]">_Findy1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8ea]">_Findy1</a><BR>
 <LI><a href="#[8f5]">_PaintTransChildren</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8f5]">_PaintTransChildren</a><BR>
 <LI><a href="#[8b7]">WM__UpdateChildPositions</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8d7]">WM_ResizeWindow</a><BR>
 <LI><a href="#[979]">_MoveDescendents</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[979]">_MoveDescendents</a><BR>
 <LI><a href="#[8d1]">_GetDialogItem</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8d1]">_GetDialogItem</a><BR>
 <LI><a href="#[3bc]">yaffs_summary_write</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2eb]">yaffs_wr_chunk_tags_nand</a><BR>
 <LI><a href="#[324]">yaffs_gc_block</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[31d]">yaffs_generic_obj_del</a><BR>
 <LI><a href="#[30e]">yaffs_verify_dir</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[30d]">yaffs_verify_obj_in_dir</a><BR>
 <LI><a href="#[30b]">yaffs_soft_del_worker</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[30b]">yaffs_soft_del_worker</a><BR>
 <LI><a href="#[33f]">yaffs_prune_worker</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[33f]">yaffs_prune_worker</a><BR>
 <LI><a href="#[41c]">yaffsfs_FollowLink</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[41e]">yaffsfs_FindObject</a><BR>
 <LI><a href="#[9bc]">WM__ForEachDesc</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[975]">WM_ForEachDesc</a><BR>
 <LI><a href="#[3ee]">yaffs2_checkpt_tnode_worker</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3ee]">yaffs2_checkpt_tnode_worker</a><BR>
 <LI><a href="#[378]">yaffs_del_dir_contents</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[378]">yaffs_del_dir_contents</a><BR>
 <LI><a href="#[3b6]">yaffs_qsort</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3b6]">yaffs_qsort</a><BR>
 <LI><a href="#[980]">WM_InvalidateWindowDescs</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[980]">WM_InvalidateWindowDescs</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2f]">ADC_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[30]">BOD_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[92f]">BUTTON_Callback</a> from button.o(.text) referenced from button.o(.text)
 <LI><a href="#[c9]">BUTTON_CreateIndirect</a> from button_createindirect.o(.text) referenced 32 times from user_browstestpoint.o(.constdata)
 <LI><a href="#[14]">BusFault_Handler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[3b]">CANActivity_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[32]">CAN_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[672]">ClientTest</a> from tcp_test.o(.text) referenced from tcp_test.o(.text)
 <LI><a href="#[33]">DMA_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[cb]">DROPDOWN_CreateIndirect</a> from dropdown_createindirect.o(.text) referenced 9 times from user_setconnect.o(.constdata)
 <LI><a href="#[17]">DebugMon_Handler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[ca]">EDIT_CreateIndirect</a> from edit_createindirect.o(.text) referenced 26 times from user_setaddr.o(.constdata)
 <LI><a href="#[ce]">EDIT__Callback</a> from edit.o(.text) referenced from edit.o(.text)
 <LI><a href="#[41]">EEPROM_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[2b]">EINT0_IRQHandler</a> from user_key.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[2c]">EINT1_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[2d]">EINT2_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[2e]">EINT3_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[35]">ENET_IRQHandler</a> from lpc177x_8x_emac.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[8f]">Equipment_Task</a> from equipmentlist.o(.text) referenced from user_main.o(.text)
 <LI><a href="#[c7]">FRAMEWIN_CreateIndirect</a> from framewin_createindirect.o(.text) referenced 11 times from user_browstestpoint.o(.constdata)
 <LI><a href="#[d0]">FRAMEWIN__cbClient</a> from framewin.o(.text) referenced from framewin.o(.text)
 <LI><a href="#[3f]">GPIO_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[102]">GUIMONO_DispChar</a> from guicharm.o(.text) referenced 2 times from f6x8.o(.constdata)
 <LI><a href="#[103]">GUIMONO_GetCharDistX</a> from guicharm.o(.text) referenced 2 times from f6x8.o(.constdata)
 <LI><a href="#[104]">GUIMONO_GetFontInfo</a> from guicharm.o(.text) referenced 2 times from f6x8.o(.constdata)
 <LI><a href="#[105]">GUIMONO_IsInFont</a> from guicharm.o(.text) referenced 2 times from f6x8.o(.constdata)
 <LI><a href="#[e1]">GUIPROP_DispChar</a> from guicharp.o(.text) referenced from hzk16.o(.constdata)
 <LI><a href="#[e2]">GUIPROP_GetCharDistX</a> from guicharp.o(.text) referenced from hzk16.o(.constdata)
 <LI><a href="#[e3]">GUIPROP_GetFontInfo</a> from guicharp.o(.text) referenced from hzk16.o(.constdata)
 <LI><a href="#[e4]">GUIPROP_IsInFont</a> from guicharp.o(.text) referenced from hzk16.o(.constdata)
 <LI><a href="#[106]">GUI_MEMDEV__Color2Index</a> from guidev.o(.text) referenced from guidev_16.o(.constdata)
 <LI><a href="#[108]">GUI_MEMDEV__GetIndexMask</a> from guidev.o(.text) referenced from guidev_16.o(.constdata)
 <LI><a href="#[10e]">GUI_MEMDEV__GetRect</a> from guidev.o(.text) referenced from guidev_16.o(.constdata)
 <LI><a href="#[107]">GUI_MEMDEV__Index2Color</a> from guidev.o(.text) referenced from guidev_16.o(.constdata)
 <LI><a href="#[112]">GUI_USAGE_BM_AddHLine</a> from guidev_usagebm.o(.text) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[111]">GUI_USAGE_BM_AddPixel</a> from guidev_usagebm.o(.text) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[113]">GUI_USAGE_BM_Clear</a> from guidev_usagebm.o(.text) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[115]">GUI_USAGE_BM_GetNextDirty</a> from guidev_usagebm.o(.text) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[12]">HardFault_Handler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[24]">I2C0_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[25]">I2C1_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[26]">I2C2_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[34]">I2S_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[d9]">LCD_DrawHLine</a> from lcd.o(.text) referenced from guicore.o(.constdata)
 <LI><a href="#[da]">LCD_DrawPixel</a> from lcd.o(.text) referenced from guicore.o(.constdata)
 <LI><a href="#[3e]">LCD_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[ec]">LCD_L0_Color2Index</a> from lcd_l0_generic.o(.text) referenced from lcd_api.o(.constdata)
 <LI><a href="#[ef]">LCD_L0_DrawBitmap</a> from lpc177x_8x_lcd.o(.text) referenced from lcd_api.o(.constdata)
 <LI><a href="#[f0]">LCD_L0_DrawHLine</a> from lpc177x_8x_lcd.o(.text) referenced from lcd_api.o(.constdata)
 <LI><a href="#[f1]">LCD_L0_DrawVLine</a> from lpc177x_8x_lcd.o(.text) referenced from lcd_api.o(.constdata)
 <LI><a href="#[f2]">LCD_L0_FillRect</a> from lpc177x_8x_lcd.o(.text) referenced from lcd_api.o(.constdata)
 <LI><a href="#[ee]">LCD_L0_GetIndexMask</a> from lcd_l0_generic.o(.text) referenced from lcd_api.o(.constdata)
 <LI><a href="#[f3]">LCD_L0_GetPixelIndex</a> from lpc177x_8x_lcd.o(.text) referenced from lcd_api.o(.constdata)
 <LI><a href="#[f4]">LCD_L0_GetRect</a> from lcd_l0_generic.o(.text) referenced from lcd_api.o(.constdata)
 <LI><a href="#[ed]">LCD_L0_Index2Color</a> from lcd_l0_generic.o(.text) referenced from lcd_api.o(.constdata)
 <LI><a href="#[f7]">LCD_L0_SetLUTEntry</a> from lpc177x_8x_lcd.o(.text) referenced from lcd_api.o(.constdata)
 <LI><a href="#[f5]">LCD_L0_SetPixelIndex</a> from lpc177x_8x_lcd.o(.text) referenced from lcd_api.o(.constdata)
 <LI><a href="#[f6]">LCD_L0_XorPixel</a> from lpc177x_8x_lcd.o(.text) referenced from lcd_api.o(.constdata)
 <LI><a href="#[cc]">LISTVIEW_CreateIndirect</a> from listview_createindirect.o(.text) referenced from user_testio.o(.constdata)
 <LI><a href="#[36]">MCI_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[37]">MCPWM_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[13]">MemManage_Handler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[91]">Menu_Task</a> from user_menu.o(.text) referenced from user_main.o(.text)
 <LI><a href="#[11]">NMI_Handler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[46]">OSTaskSwHook</a> from os_cpu_c.o(.text) referenced from os_cpu_a.o(.text)
 <LI><a href="#[44]">OSTmr_Task</a> from os_tmr.o(.text) referenced from os_tmr.o(.text)
 <LI><a href="#[18]">OS_CPU_PendSVHandler</a> from os_cpu_a.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[19]">OS_CPU_SysTickHandler</a> from os_cpu_c.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[21c]">OS_TaskIdle</a> from os_core.o(.text) referenced from os_core.o(.text)
 <LI><a href="#[45]">OS_TaskReturn</a> from os_task.o(.text) referenced from os_cpu_c.o(.text)
 <LI><a href="#[29]">PLL0_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[39]">PLL1_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[40]">PWM0_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[23]">PWM1_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[38]">QEI_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[c8]">RADIO_CreateIndirect</a> from radio_createindirect.o(.text) referenced 11 times from user_browstestpoint.o(.constdata)
 <LI><a href="#[2a]">RTC_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[10]">Reset_Handler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[27]">SSP0_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[28]">SSP1_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[3d]">SSP2_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[16]">SVC_Handler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[674]">ServerTest</a> from tcp_test.o(.text) referenced from tcp_test.o(.text)
 <LI><a href="#[42]">SystemInit</a> from system_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(.text)
 <LI><a href="#[1b]">TIMER0_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[1c]">TIMER1_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[1d]">TIMER2_IRQHandler</a> from user_key.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[1e]">TIMER3_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[92]">TaskStart</a> from user_main.o(.text) referenced from user_main.o(.text)
 <LI><a href="#[1f]">UART0_IRQHandler</a> from com_uart.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[20]">UART1_IRQHandler</a> from com_uart.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[21]">UART2_IRQHandler</a> from com_uart.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[22]">UART3_IRQHandler</a> from com_uart.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[3c]">UART4_IRQHandler</a> from com_uart.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[3a]">USBActivity_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[31]">USB_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[90]">UartRcv_Task</a> from task_uartrcv.o(.text) referenced from user_main.o(.text)
 <LI><a href="#[15]">UsageFault_Handler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[1a]">WDT_IRQHandler</a> from startup_lpc177x_8x.o(.text) referenced from startup_lpc177x_8x.o(RESET)
 <LI><a href="#[f8]">WIDGET_EFFECT_3D_DrawUp</a> from widget_effect_3d.o(.text) referenced from widget_effect_3d.o(.constdata)
 <LI><a href="#[e7]">_CalcSizeOfChar</a> from gui_uc_encodenone.o(.text) referenced from gui_uc_encodenone.o(.constdata)
 <LI><a href="#[cd]">_DROPDOWN_Callback</a> from dropdown.o(.text) referenced from dropdown.o(.text)
 <LI><a href="#[eb]">_DispLine_SJIS</a> from guiencjs.o(.text) referenced from guiencjs.o(.constdata)
 <LI><a href="#[109]">_DrawBitmap</a> from guidev_16.o(.text) referenced from guidev_16.o(.constdata)
 <LI><a href="#[db]">_DrawBitmap_RLE4</a> from lcdrle4.o(.text) referenced from lcdrle4.o(.constdata)
 <LI><a href="#[10a]">_DrawHLine</a> from guidev_16.o(.text) referenced from guidev_16.o(.constdata)
 <LI><a href="#[10b]">_DrawVLine</a> from guidev_16.o(.text) referenced from guidev_16.o(.constdata)
 <LI><a href="#[e8]">_Encode</a> from gui_uc_encodenone.o(.text) referenced from gui_uc_encodenone.o(.constdata)
 <LI><a href="#[cf]">_FRAMEWIN_Callback</a> from framewin.o(.text) referenced from framewin.o(.text)
 <LI><a href="#[10c]">_FillRect</a> from guidev_16.o(.text) referenced from guidev_16.o(.constdata)
 <LI><a href="#[114]">_GUI_USAGE_BM_Delete</a> from guidev_usagebm.o(.text) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[e5]">_GetCharCode</a> from gui_uc_encodenone.o(.text) referenced from gui_uc_encodenone.o(.constdata)
 <LI><a href="#[e6]">_GetCharSize</a> from gui_uc_encodenone.o(.text) referenced from gui_uc_encodenone.o(.constdata)
 <LI><a href="#[e9]">_GetLineDistX_SJIS</a> from guiencjs.o(.text) referenced from guiencjs.o(.constdata)
 <LI><a href="#[ea]">_GetLineLen_SJIS</a> from guiencjs.o(.text) referenced from guiencjs.o(.constdata)
 <LI><a href="#[10d]">_GetPixelIndex</a> from guidev_16.o(.text) referenced from guidev_16.o(.constdata)
 <LI><a href="#[d1]">_HEADER_Callback</a> from header.o(.text) referenced from header.o(.text)
 <LI><a href="#[d5]">_LISTBOX_Callback</a> from listbox.o(.text) referenced from listbox.o(.text)
 <LI><a href="#[9f]">_LISTVIEW_Callback</a> from listview.o(.text) referenced from listview.o(.text)
 <LI><a href="#[a0]">_MENU_Callback</a> from menu.o(.text) referenced from menu.o(.text)
 <LI><a href="#[d2]">_PROGBAR_Callback</a> from progbar.o(.text) referenced from progbar.o(.text)
 <LI><a href="#[d6]">_RADIO_Callback</a> from radio.o(.text) referenced from radio.o(.text)
 <LI><a href="#[d8]">_SCROLLBAR_Callback</a> from scrollbar.o(.text) referenced from scrollbar.o(.text)
 <LI><a href="#[10f]">_SetPixelIndex</a> from guidev_16.o(.text) referenced from guidev_16.o(.constdata)
 <LI><a href="#[dd]">_WIDGET_EFFECT_3D1L_DrawDown</a> from widget_effect_3d1l.o(.text) referenced from widget_effect_3d1l.o(.constdata)
 <LI><a href="#[df]">_WIDGET_EFFECT_3D1L_DrawDownRect</a> from widget_effect_3d1l.o(.text) referenced from widget_effect_3d1l.o(.constdata)
 <LI><a href="#[dc]">_WIDGET_EFFECT_3D1L_DrawUp</a> from widget_effect_3d1l.o(.text) referenced from widget_effect_3d1l.o(.constdata)
 <LI><a href="#[de]">_WIDGET_EFFECT_3D1L_DrawUpRect</a> from widget_effect_3d1l.o(.text) referenced from widget_effect_3d1l.o(.constdata)
 <LI><a href="#[e0]">_WIDGET_EFFECT_3D1L_GetRect</a> from widget_effect_3d1l.o(.text) referenced from widget_effect_3d1l.o(.constdata)
 <LI><a href="#[f9]">_WIDGET_EFFECT_3D_DrawDown</a> from widget_effect_3d.o(.text) referenced from widget_effect_3d.o(.constdata)
 <LI><a href="#[fb]">_WIDGET_EFFECT_3D_DrawDownRect</a> from widget_effect_3d.o(.text) referenced from widget_effect_3d.o(.constdata)
 <LI><a href="#[fa]">_WIDGET_EFFECT_3D_DrawUpRect</a> from widget_effect_3d.o(.text) referenced from widget_effect_3d.o(.constdata)
 <LI><a href="#[fc]">_WIDGET_EFFECT_3D_GetRect</a> from widget_effect_3d.o(.text) referenced from widget_effect_3d.o(.constdata)
 <LI><a href="#[fe]">_WIDGET_EFFECT_None_DrawDown</a> from widget_effect_none.o(.text) referenced from widget_effect_none.o(.constdata)
 <LI><a href="#[100]">_WIDGET_EFFECT_None_DrawDownRect</a> from widget_effect_none.o(.text) referenced from widget_effect_none.o(.constdata)
 <LI><a href="#[fd]">_WIDGET_EFFECT_None_DrawUp</a> from widget_effect_none.o(.text) referenced from widget_effect_none.o(.constdata)
 <LI><a href="#[ff]">_WIDGET_EFFECT_None_DrawUpRect</a> from widget_effect_none.o(.text) referenced from widget_effect_none.o(.constdata)
 <LI><a href="#[101]">_WIDGET_EFFECT_None_GetRect</a> from widget_effect_none.o(.text) referenced from widget_effect_none.o(.constdata)
 <LI><a href="#[110]">_XorPixel</a> from guidev_16.o(.text) referenced from guidev_16.o(.constdata)
 <LI><a href="#[116]">__main</a> from __main.o(!!!main) referenced from startup_lpc177x_8x.o(.text)
 <LI><a href="#[9d]">_cbBrowsTestpoint</a> from user_browstestpoint.o(.text) referenced from user_menu.o(.text)
 <LI><a href="#[93]">_cbDispBackpower</a> from user_dispbackpower.o(.text) referenced from user_menu.o(.text)
 <LI><a href="#[94]">_cbDispConnect</a> from user_dispconnect.o(.text) referenced from user_menu.o(.text)
 <LI><a href="#[d7]">_cbInvalidateOne</a> from wm_bringtotop.o(.text) referenced from wm_bringtotop.o(.text)
 <LI><a href="#[d3]">_cbPaintMemDev</a> from wm.o(.text) referenced from wm.o(.text)
 <LI><a href="#[9e]">_cbReversiWin</a> from user_menu.o(.text) referenced from user_menu.o(.text)
 <LI><a href="#[95]">_cbSetAddr</a> from user_setaddr.o(.text) referenced from user_menu.o(.text)
 <LI><a href="#[96]">_cbSetConnect</a> from user_setconnect.o(.text) referenced from user_menu.o(.text)
 <LI><a href="#[99]">_cbSetPassword</a> from user_setpassword.o(.text) referenced from user_menu.o(.text)
 <LI><a href="#[97]">_cbSetTime</a> from user_settime.o(.text) referenced from user_menu.o(.text)
 <LI><a href="#[98]">_cbSetType</a> from user_settype.o(.text) referenced from user_menu.o(.text)
 <LI><a href="#[9b]">_cbTestIO</a> from user_testio.o(.text) referenced from user_menu.o(.text)
 <LI><a href="#[9a]">_cbTestRS485</a> from user_testrs485.o(.text) referenced from user_menu.o(.text)
 <LI><a href="#[9c]">_cbTestSerial</a> from user_testserial.o(.text) referenced from user_menu.o(.text)
 <LI><a href="#[ac]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[b0]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[af]">_sbackspace</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[b2]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[ae]">_sgetc</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[ad]">_sputc</a> from _sputc.o(.text) referenced from __2sprintf.o(.text)
 <LI><a href="#[6c]">accept_function</a> from api_msg.o(.text) referenced from api_msg.o(.text)
 <LI><a href="#[7b]">arp_timer</a> from timers.o(.text) referenced from timers.o(.text)
 <LI><a href="#[7f]">atentry_get_object_def</a> from mib2.o(.text) referenced from mib2.o(.text)
 <LI><a href="#[80]">atentry_get_value</a> from mib2.o(.text) referenced from mib2.o(.text)
 <LI><a href="#[d4]">cbBackWin</a> from wm.o(.text) referenced from wm.o(.text)
 <LI><a href="#[74]">dns_recv</a> from dns.o(.text) referenced from dns.o(.text)
 <LI><a href="#[7d]">dns_timer</a> from timers.o(.text) referenced from timers.o(.text)
 <LI><a href="#[5b]">do_bind</a> from api_msg.o(.text) referenced from api_lib.o(.text)
 <LI><a href="#[62]">do_close</a> from api_msg.o(.text) referenced from api_lib.o(.text)
 <LI><a href="#[5c]">do_connect</a> from api_msg.o(.text) referenced from api_lib.o(.text)
 <LI><a href="#[6b]">do_connected</a> from api_msg.o(.text) referenced from api_msg.o(.text)
 <LI><a href="#[59]">do_delconn</a> from api_msg.o(.text) referenced from api_lib.o(.text)
 <LI><a href="#[5d]">do_disconnect</a> from api_msg.o(.text) referenced from api_lib.o(.text)
 <LI><a href="#[6d]">do_dns_found</a> from api_msg.o(.text) referenced from api_msg.o(.text)
 <LI><a href="#[5a]">do_getaddr</a> from api_msg.o(.text) referenced from api_lib.o(.text)
 <LI><a href="#[64]">do_gethostbyname</a> from api_msg.o(.text) referenced from api_lib.o(.text)
 <LI><a href="#[63]">do_join_leave_group</a> from api_msg.o(.text) referenced from api_lib.o(.text)
 <LI><a href="#[5e]">do_listen</a> from api_msg.o(.text) referenced from api_lib.o(.text)
 <LI><a href="#[58]">do_newconn</a> from api_msg.o(.text) referenced from api_lib.o(.text)
 <LI><a href="#[5f]">do_recv</a> from api_msg.o(.text) referenced from api_lib.o(.text)
 <LI><a href="#[60]">do_send</a> from api_msg.o(.text) referenced from api_lib.o(.text)
 <LI><a href="#[61]">do_write</a> from api_msg.o(.text) referenced from api_lib.o(.text)
 <LI><a href="#[67]">err_tcp</a> from api_msg.o(.text) referenced 2 times from api_msg.o(.text)
 <LI><a href="#[8b]">etharp_output</a> from etharp.o(.text) referenced from ethernetif.o(.text)
 <LI><a href="#[8e]">ethernetif_init</a> from ethernetif.o(.text) referenced from user_main.o(.text)
 <LI><a href="#[8a]">ethernetif_input</a> from ethernetif.o(.text) referenced from ethernetif.o(.text)
 <LI><a href="#[6e]">event_callback</a> from sockets.o(.text) referenced 3 times from sockets.o(.text)
 <LI><a href="#[b1]">fputc</a> from jlink_putc.o(.text) referenced from _printf_char_file.o(.text)
 <LI><a href="#[a9]">getShowInfo_Accumulate</a> from sensor_operation.o(.text) referenced from equipmentlist.o(.text)
 <LI><a href="#[a5]">getShowInfo_Analogue</a> from sensor_operation.o(.text) referenced from equipmentlist.o(.text)
 <LI><a href="#[a7]">getShowInfo_Switch</a> from sensor_operation.o(.text) referenced from equipmentlist.o(.text)
 <LI><a href="#[ab]">getShowInfo_Tristate</a> from sensor_operation.o(.text) referenced from equipmentlist.o(.text)
 <LI><a href="#[a3]">getUploadInfo</a> from sensor_operation.o(.text) referenced from equipmentlist.o(.text)
 <LI><a href="#[bc]">icmp_get_object_def</a> from mib2.o(.text) referenced from mib2.o(.constdata)
 <LI><a href="#[bd]">icmp_get_value</a> from mib2.o(.text) referenced from mib2.o(.constdata)
 <LI><a href="#[e]">ifentry_get_object_def</a> from mib2.o(.text) referenced 2 times from mib2.o(.data)
 <LI><a href="#[f]">ifentry_get_value</a> from mib2.o(.text) referenced 2 times from mib2.o(.data)
 <LI><a href="#[7c]">igmp_timer</a> from timers.o(.text) referenced from timers.o(.text)
 <LI><a href="#[c1]">interfaces_get_object_def</a> from mib2.o(.text) referenced from mib2.o(.constdata)
 <LI><a href="#[c2]">interfaces_get_value</a> from mib2.o(.text) referenced from mib2.o(.constdata)
 <LI><a href="#[83]">ip_addrentry_get_object_def</a> from mib2.o(.text) referenced from mib2.o(.text)
 <LI><a href="#[84]">ip_addrentry_get_value</a> from mib2.o(.text) referenced from mib2.o(.text)
 <LI><a href="#[be]">ip_get_object_def</a> from mib2.o(.text) referenced from mib2.o(.constdata)
 <LI><a href="#[bf]">ip_get_value</a> from mib2.o(.text) referenced from mib2.o(.constdata)
 <LI><a href="#[81]">ip_ntomentry_get_object_def</a> from mib2.o(.text) referenced from mib2.o(.text)
 <LI><a href="#[82]">ip_ntomentry_get_value</a> from mib2.o(.text) referenced from mib2.o(.text)
 <LI><a href="#[7a]">ip_reass_timer</a> from timers.o(.text) referenced from timers.o(.text)
 <LI><a href="#[85]">ip_rteentry_get_object_def</a> from mib2.o(.text) referenced from mib2.o(.text)
 <LI><a href="#[86]">ip_rteentry_get_value</a> from mib2.o(.text) referenced from mib2.o(.text)
 <LI><a href="#[c0]">ip_set_test</a> from mib2.o(.text) referenced from mib2.o(.constdata)
 <LI><a href="#[7e]">ipfrag_free_pbuf_custom</a> from ip_frag.o(.text) referenced from ip_frag.o(.text)
 <LI><a href="#[b3]">isspace</a> from isspace.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[8c]">low_level_output</a> from ethernetif.o(.text) referenced from ethernetif.o(.text)
 <LI><a href="#[6f]">lwip_getsockopt_internal</a> from sockets.o(.text) referenced from sockets.o(.text)
 <LI><a href="#[70]">lwip_setsockopt_internal</a> from sockets.o(.text) referenced from sockets.o(.text)
 <LI><a href="#[73]">mem_free</a> from mem.o(.text) referenced from tcpip.o(.text)
 <LI><a href="#[578]">netif_loop_output</a> from netif.o(.text) referenced from netif.o(.text)
 <LI><a href="#[76]">netif_loopif_init</a> from netif.o(.text) referenced from netif.o(.text)
 <LI><a href="#[574]">netif_poll</a> from netif.o(.text) referenced from netif.o(.text)
 <LI><a href="#[a]">noleafs_get_object_def</a> from mib2.o(.text) referenced 18 times from mib2.o(.constdata)
 <LI><a href="#[a]">noleafs_get_object_def</a> from mib2.o(.text) referenced 26 times from mib2.o(.data)
 <LI><a href="#[a]">noleafs_get_object_def</a> from mib2.o(.text) referenced from mib_structs.o(.text)
 <LI><a href="#[b]">noleafs_get_value</a> from mib2.o(.text) referenced 18 times from mib2.o(.constdata)
 <LI><a href="#[b]">noleafs_get_value</a> from mib2.o(.text) referenced 26 times from mib2.o(.data)
 <LI><a href="#[b]">noleafs_get_value</a> from mib2.o(.text) referenced from mib_structs.o(.text)
 <LI><a href="#[c]">noleafs_set_test</a> from mib2.o(.text) referenced 22 times from mib2.o(.constdata)
 <LI><a href="#[c]">noleafs_set_test</a> from mib2.o(.text) referenced 28 times from mib2.o(.data)
 <LI><a href="#[c]">noleafs_set_test</a> from mib2.o(.text) referenced 5 times from mib_structs.o(.text)
 <LI><a href="#[d]">noleafs_set_value</a> from mib2.o(.text) referenced 23 times from mib2.o(.constdata)
 <LI><a href="#[d]">noleafs_set_value</a> from mib2.o(.text) referenced 28 times from mib2.o(.data)
 <LI><a href="#[d]">noleafs_set_value</a> from mib2.o(.text) referenced 5 times from mib_structs.o(.text)
 <LI><a href="#[72]">pbuf_free_int</a> from tcpip.o(.text) referenced from tcpip.o(.text)
 <LI><a href="#[77]">pbuf_free_ooseq_callback</a> from pbuf.o(.text) referenced from pbuf.o(.text)
 <LI><a href="#[66]">poll_tcp</a> from api_msg.o(.text) referenced 2 times from api_msg.o(.text)
 <LI><a href="#[69]">recv_raw</a> from api_msg.o(.text) referenced from api_msg.o(.text)
 <LI><a href="#[68]">recv_tcp</a> from api_msg.o(.text) referenced from api_msg.o(.text)
 <LI><a href="#[6a]">recv_udp</a> from api_msg.o(.text) referenced from api_msg.o(.text)
 <LI><a href="#[65]">sent_tcp</a> from api_msg.o(.text) referenced 2 times from api_msg.o(.text)
 <LI><a href="#[a8]">setConfig_Accumulate</a> from sensor_operation.o(.text) referenced from equipmentlist.o(.text)
 <LI><a href="#[a4]">setConfig_Analogue</a> from sensor_operation.o(.text) referenced from equipmentlist.o(.text)
 <LI><a href="#[a6]">setConfig_Switch</a> from sensor_operation.o(.text) referenced from equipmentlist.o(.text)
 <LI><a href="#[aa]">setConfig_Tristate</a> from sensor_operation.o(.text) referenced from equipmentlist.o(.text)
 <LI><a href="#[a1]">setUpload</a> from sensor_operation.o(.text) referenced from equipmentlist.o(.text)
 <LI><a href="#[a2]">showAllInfo</a> from sensor_operation.o(.text) referenced from equipmentlist.o(.text)
 <LI><a href="#[b4]">snmp_get_object_def</a> from mib2.o(.text) referenced from mib2.o(.constdata)
 <LI><a href="#[b5]">snmp_get_value</a> from mib2.o(.text) referenced from mib2.o(.constdata)
 <LI><a href="#[89]">snmp_recv</a> from msg_in.o(.text) referenced from msg_in.o(.text)
 <LI><a href="#[b6]">snmp_set_test</a> from mib2.o(.text) referenced from mib2.o(.constdata)
 <LI><a href="#[b7]">snmp_set_value</a> from mib2.o(.text) referenced from mib2.o(.constdata)
 <LI><a href="#[c3]">system_get_object_def</a> from mib2.o(.text) referenced from mib2.o(.constdata)
 <LI><a href="#[c4]">system_get_value</a> from mib2.o(.text) referenced from mib2.o(.constdata)
 <LI><a href="#[c5]">system_set_test</a> from mib2.o(.text) referenced from mib2.o(.constdata)
 <LI><a href="#[c6]">system_set_value</a> from mib2.o(.text) referenced from mib2.o(.constdata)
 <LI><a href="#[8d]">task_Key</a> from user_key.o(.text) referenced from user_key.o(.text)
 <LI><a href="#[78]">tcp_accept_null</a> from tcp.o(.text) referenced from tcp.o(.text)
 <LI><a href="#[ba]">tcp_get_object_def</a> from mib2.o(.text) referenced from mib2.o(.constdata)
 <LI><a href="#[bb]">tcp_get_value</a> from mib2.o(.text) referenced from mib2.o(.constdata)
 <LI><a href="#[5b2]">tcp_recv_null</a> from tcp.o(.text) referenced from tcp.o(.text)
 <LI><a href="#[694]">tcpip_init_done</a> from user_main.o(.text) referenced from user_main.o(.text)
 <LI><a href="#[75]">tcpip_input</a> from tcpip.o(.text) referenced 2 times from netif.o(.text)
 <LI><a href="#[79]">tcpip_tcp_timer</a> from timers.o(.text) referenced from timers.o(.text)
 <LI><a href="#[71]">tcpip_thread</a> from tcpip.o(.text) referenced from tcpip.o(.text)
 <LI><a href="#[b8]">udp_get_object_def</a> from mib2.o(.text) referenced from mib2.o(.constdata)
 <LI><a href="#[b9]">udp_get_value</a> from mib2.o(.text) referenced from mib2.o(.constdata)
 <LI><a href="#[87]">udpentry_get_object_def</a> from mib2.o(.text) referenced from mib2.o(.text)
 <LI><a href="#[88]">udpentry_get_value</a> from mib2.o(.text) referenced from mib2.o(.text)
 <LI><a href="#[56]">yaffs2_ybicmp</a> from yaffs_yaffs2.o(.text) referenced from yaffs_yaffs2.o(.text)
 <LI><a href="#[4b]">yaffs_nand_drv_CheckBad</a> from yaffs_nand_drv.o(.text) referenced from yaffs_nand_drv.o(.text)
 <LI><a href="#[4d]">yaffs_nand_drv_Deinitialise</a> from yaffs_nand_drv.o(.text) referenced from yaffs_nand_drv.o(.text)
 <LI><a href="#[49]">yaffs_nand_drv_EraseBlock</a> from yaffs_nand_drv.o(.text) referenced from yaffs_nand_drv.o(.text)
 <LI><a href="#[4c]">yaffs_nand_drv_Initialise</a> from yaffs_nand_drv.o(.text) referenced from yaffs_nand_drv.o(.text)
 <LI><a href="#[4a]">yaffs_nand_drv_MarkBad</a> from yaffs_nand_drv.o(.text) referenced from yaffs_nand_drv.o(.text)
 <LI><a href="#[48]">yaffs_nand_drv_ReadChunk</a> from yaffs_nand_drv.o(.text) referenced from yaffs_nand_drv.o(.text)
 <LI><a href="#[47]">yaffs_nand_drv_WriteChunk</a> from yaffs_nand_drv.o(.text) referenced from yaffs_nand_drv.o(.text)
 <LI><a href="#[51]">yaffs_tags_compat_mark_bad</a> from yaffs_tagscompat.o(.text) referenced from yaffs_tagscompat.o(.text)
 <LI><a href="#[50]">yaffs_tags_compat_query_block</a> from yaffs_tagscompat.o(.text) referenced from yaffs_tagscompat.o(.text)
 <LI><a href="#[4f]">yaffs_tags_compat_rd</a> from yaffs_tagscompat.o(.text) referenced from yaffs_tagscompat.o(.text)
 <LI><a href="#[4e]">yaffs_tags_compat_wr</a> from yaffs_tagscompat.o(.text) referenced from yaffs_tagscompat.o(.text)
 <LI><a href="#[55]">yaffs_tags_marshall_mark_bad</a> from yaffs_tagsmarshall.o(.text) referenced from yaffs_tagsmarshall.o(.text)
 <LI><a href="#[54]">yaffs_tags_marshall_query_block</a> from yaffs_tagsmarshall.o(.text) referenced from yaffs_tagsmarshall.o(.text)
 <LI><a href="#[53]">yaffs_tags_marshall_read</a> from yaffs_tagsmarshall.o(.text) referenced from yaffs_tagsmarshall.o(.text)
 <LI><a href="#[52]">yaffs_tags_marshall_write</a> from yaffs_tagsmarshall.o(.text) referenced from yaffs_tagsmarshall.o(.text)
 <LI><a href="#[57]">yaffsfs_RemoveObjectCallback</a> from yaffsfs.o(.text) referenced from yaffsfs.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[116]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[117]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[119]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[9f0]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[9f1]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[9f2]"></a>__decompress</STRONG> (Thumb, 100 bytes, Stack size unknown bytes, __dclz77c.o(!!dclz77c), UNUSED)

<P><STRONG><a name="[9f3]"></a>__decompress2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dclz77c.o(!!dclz77c), UNUSED)

<P><STRONG><a name="[11a]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[9f4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[11b]"></a>_printf_p</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_p.o(.ARM.Collect$$_printf_percent$$00000002))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_p &rArr; _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
</UL>

<P><STRONG><a name="[790]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[11d]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[9f5]"></a>_printf_ll</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007))

<P><STRONG><a name="[11f]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[121]"></a>_printf_u</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_u &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[122]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[124]"></a>_printf_lld</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lld &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[126]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[9f6]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[134]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[9f7]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[128]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[9f8]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[12a]"></a>__rt_lib_init_rand_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000B))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_rand_2 &rArr; _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[9f9]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[12c]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))
<BR><BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[9fa]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[9fb]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[12e]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000010))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[9fc]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[9fd]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[12f]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[9fe]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[9ff]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[a00]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[a01]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[a02]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[a03]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[a04]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[a05]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[a06]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[a07]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[a08]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000031))

<P><STRONG><a name="[a09]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[a0a]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[139]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[a0b]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[a0c]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[a0d]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[a0e]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[a0f]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[a10]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[118]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[a11]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[131]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[133]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[a12]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[135]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; GUI_Init &rArr; WM_Init &rArr; WM_CreateWindow &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[a13]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[795]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[138]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[a14]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[13a]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[5f1]"></a>rand</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, rand.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_start_timer
</UL>

<P><STRONG><a name="[10]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[a15]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, maybetermalloc1.o(.emb_text), UNUSED)

<P><STRONG><a name="[11]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[13c]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[13d]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[2f]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>CANActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>EEPROM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>EINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>GPIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>LCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>MCI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>PLL0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>PLL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>PWM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SSP2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>USBActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc177x_8x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[7bb]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_lpc177x_8x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[13f]"></a>lwip_htons</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, def.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_raw
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_arp_input
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_oos_insert_segment
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_fin
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_send
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_recv
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getaddrname
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerTest
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClientTest
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_input
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if_opt
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo_partial
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
</UL>

<P><STRONG><a name="[13e]"></a>lwip_ntohs</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, def.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lwip_ntohs
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
</UL>
<BR>[Called By]<UL><LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_parseopt
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_oos_insert_segment
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_fin
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_connect
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_bind
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_chain_frag_into_datagram_and_validate
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
</UL>

<P><STRONG><a name="[141]"></a>lwip_htonl</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, def.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohl
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_aton
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_netmask_valid
</UL>

<P><STRONG><a name="[140]"></a>lwip_ntohl</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, def.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lwip_ntohl
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
</UL>
<BR>[Called By]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_recv
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>

<P><STRONG><a name="[a16]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[2]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[1]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[142]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 664 bytes, Stack size 12 bytes, system_lpc177x_8x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_SetCLKDiv
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[42]"></a>SystemInit</STRONG> (Thumb, 206 bytes, Stack size 8 bytes, system_lpc177x_8x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = SystemInit &rArr; SDRAMInit &rArr; TIM_Init &rArr; converUSecToVal &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAMInit
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIni
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_Init
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(.text)
</UL>
<P><STRONG><a name="[146]"></a>CLKPWR_SetCLKDiv</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, lpc177x_8x_clkpwr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CLKPWR_SetCLKDiv &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_PwrOn
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_Init
</UL>

<P><STRONG><a name="[148]"></a>CLKPWR_GetCLK</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, lpc177x_8x_clkpwr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SetClock
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_set_divisors
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_Init
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_Init
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPClock
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSSPclock
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_PwrOn
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_NS2CLK
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_SDRAM_REFRESH
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_Init
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14c]"></a>CLKPWR_ConfigPPWR</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lpc177x_8x_clkpwr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DeInit
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DeInit
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_Init
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_DeInit
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_Init
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Init
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_DeInit
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Init
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_DeInit
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Deinit
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_PwrOn
</UL>

<P><STRONG><a name="[a17]"></a>CLKPWR_Sleep</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lpc177x_8x_clkpwr.o(.text), UNUSED)

<P><STRONG><a name="[a18]"></a>CLKPWR_DeepSleep</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lpc177x_8x_clkpwr.o(.text), UNUSED)

<P><STRONG><a name="[a19]"></a>CLKPWR_PowerDown</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lpc177x_8x_clkpwr.o(.text), UNUSED)

<P><STRONG><a name="[a1a]"></a>CLKPWR_DeepPowerDown</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lpc177x_8x_clkpwr.o(.text), UNUSED)

<P><STRONG><a name="[147]"></a>EMC_SDRAM_REFRESH</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, lpc177x_8x_emc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_GetCLK
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[14a]"></a>EMC_NS2CLK</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, lpc177x_8x_emc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_GetCLK
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[14b]"></a>EMC_PwrOn</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lpc177x_8x_emc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EMC_PwrOn &rArr; CLKPWR_SetCLKDiv &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_ConfigPPWR
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_GetCLK
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_SetCLKDiv
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StaticMem_Init
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DynMem_Init
</UL>

<P><STRONG><a name="[158]"></a>EMC_DynMemConfigAM</STRONG> (Thumb, 710 bytes, Stack size 40 bytes, lpc177x_8x_emc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EMC_DynMemConfigAM
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DynMem_Init
</UL>

<P><STRONG><a name="[157]"></a>EMC_DynMemConfigMD</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, lpc177x_8x_emc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DynMem_Init
</UL>

<P><STRONG><a name="[156]"></a>EMC_DynMemCAS</STRONG> (Thumb, 212 bytes, Stack size 0 bytes, lpc177x_8x_emc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DynMem_Init
</UL>

<P><STRONG><a name="[155]"></a>EMC_DynMemRAS</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, lpc177x_8x_emc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DynMem_Init
</UL>

<P><STRONG><a name="[154]"></a>EMC_SetDynMemoryParameter</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, lpc177x_8x_emc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DynMem_Init
</UL>

<P><STRONG><a name="[153]"></a>EMC_DynCtrlClockControl</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lpc177x_8x_emc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DynMem_Init
</UL>

<P><STRONG><a name="[152]"></a>EMC_DynCtrlMMC</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lpc177x_8x_emc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DynMem_Init
</UL>

<P><STRONG><a name="[151]"></a>EMC_DynCtrlClockEnable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lpc177x_8x_emc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DynMem_Init
</UL>

<P><STRONG><a name="[150]"></a>EMC_DynCtrlPowerDownMode</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lpc177x_8x_emc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DynMem_Init
</UL>

<P><STRONG><a name="[14f]"></a>EMC_DynCtrlSelfRefresh</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lpc177x_8x_emc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DynMem_Init
</UL>

<P><STRONG><a name="[14e]"></a>EMC_ConfigEndianMode</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lpc177x_8x_emc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DynMem_Init
</UL>

<P><STRONG><a name="[14d]"></a>DynMem_Init</STRONG> (Thumb, 286 bytes, Stack size 24 bytes, lpc177x_8x_emc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DynMem_Init &rArr; EMC_DynMemConfigAM
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_ConfigEndianMode
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_DynCtrlSelfRefresh
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_DynCtrlPowerDownMode
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_DynCtrlClockEnable
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_DynCtrlMMC
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_DynCtrlClockControl
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_SetDynMemoryParameter
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_DynMemRAS
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_DynMemCAS
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_DynMemConfigMD
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_DynMemConfigAM
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_PwrOn
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAMInit
</UL>

<P><STRONG><a name="[15e]"></a>EMC_SetStaMemoryParameter</STRONG> (Thumb, 386 bytes, Stack size 8 bytes, lpc177x_8x_emc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EMC_SetStaMemoryParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StaticMem_Init
</UL>

<P><STRONG><a name="[15d]"></a>EMC_StaMemConfigEW</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, lpc177x_8x_emc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StaticMem_Init
</UL>

<P><STRONG><a name="[15c]"></a>EMC_StaMemConfigPB</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, lpc177x_8x_emc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StaticMem_Init
</UL>

<P><STRONG><a name="[15b]"></a>EMC_StaMemConfigPM</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, lpc177x_8x_emc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StaticMem_Init
</UL>

<P><STRONG><a name="[15a]"></a>EMC_StaMemConfigMW</STRONG> (Thumb, 186 bytes, Stack size 8 bytes, lpc177x_8x_emc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EMC_StaMemConfigMW
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StaticMem_Init
</UL>

<P><STRONG><a name="[159]"></a>StaticMem_Init</STRONG> (Thumb, 310 bytes, Stack size 16 bytes, lpc177x_8x_emc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = StaticMem_Init &rArr; EMC_PwrOn &rArr; CLKPWR_SetCLKDiv &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_StaMemConfigMW
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_StaMemConfigPM
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_StaMemConfigPB
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_StaMemConfigEW
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_SetStaMemoryParameter
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_PwrOn
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_Init
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASHInit
</UL>

<P><STRONG><a name="[144]"></a>EMC_Init</STRONG> (Thumb, 272 bytes, Stack size 8 bytes, lpc177x_8x_emc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = EMC_Init &rArr; PINSEL_ConfigPin &rArr; PIN_GetPointer
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_ConfigPin
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_GetCLK
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_SetCLKDiv
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[1e2]"></a>EMC_DynCtrlSDRAMInit</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lpc177x_8x_emc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAMInit
</UL>

<P><STRONG><a name="[1e3]"></a>EMC_DynMemConfigB</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, lpc177x_8x_emc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAMInit
</UL>

<P><STRONG><a name="[a1b]"></a>EMC_DynMemConfigP</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, lpc177x_8x_emc.o(.text), UNUSED)

<P><STRONG><a name="[a1c]"></a>EMC_StaticExtendedWait</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lpc177x_8x_emc.o(.text), UNUSED)

<P><STRONG><a name="[a1d]"></a>EMC_StaMemConfigPC</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, lpc177x_8x_emc.o(.text), UNUSED)

<P><STRONG><a name="[a1e]"></a>EMC_StaMemConfigB</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, lpc177x_8x_emc.o(.text), UNUSED)

<P><STRONG><a name="[a1f]"></a>EMC_StaMemConfigpP</STRONG> (Thumb, 224 bytes, Stack size 0 bytes, lpc177x_8x_emc.o(.text), UNUSED)

<P><STRONG><a name="[161]"></a>GPIO_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_ConfigPPWR
</UL>

<P><STRONG><a name="[162]"></a>GPIO_Deinit</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_ConfigPPWR
</UL>

<P><STRONG><a name="[160]"></a>GPIO_SetDir</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, lpc177x_8x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_SetDir
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDBackLightDark
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDBackLightBright
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDBackLightOFF
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDBackLightON
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_SetDir
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIni
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_Init
</UL>

<P><STRONG><a name="[164]"></a>GPIO_SetValue</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lpc177x_8x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_SetValue
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT21L16S2W_Read
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_SetValue
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutputValue
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIni
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P128_Read
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Logo
</UL>

<P><STRONG><a name="[165]"></a>GPIO_ClearValue</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lpc177x_8x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_ClearValue
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT21L16S2W_Read
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_ClearValue
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutputValue
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIni
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P128_Read
</UL>

<P><STRONG><a name="[166]"></a>GPIO_OutputValue</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDBackLightDark
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDBackLightBright
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDBackLightOFF
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDBackLightON
</UL>

<P><STRONG><a name="[167]"></a>GPIO_ReadValue</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_ReadValue
</UL>

<P><STRONG><a name="[16d]"></a>GPIO_IntCmd</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_IntCmd
</UL>

<P><STRONG><a name="[16f]"></a>GPIO_GetIntStatus</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_GetIntStatus
</UL>

<P><STRONG><a name="[171]"></a>GPIO_ClearInt</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_ClearInt
</UL>

<P><STRONG><a name="[168]"></a>FIO_SetDir</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
</UL>

<P><STRONG><a name="[169]"></a>FIO_SetValue</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>

<P><STRONG><a name="[16a]"></a>FIO_ClearValue</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
</UL>

<P><STRONG><a name="[16b]"></a>FIO_ReadValue</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadValue
</UL>

<P><STRONG><a name="[16c]"></a>FIO_IntCmd</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_IntCmd
</UL>

<P><STRONG><a name="[16e]"></a>FIO_GetIntStatus</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetIntStatus
</UL>

<P><STRONG><a name="[170]"></a>FIO_ClearInt</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearInt
</UL>

<P><STRONG><a name="[172]"></a>FIO_SetMask</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPointer
</UL>

<P><STRONG><a name="[173]"></a>FIO_HalfWordSetDir</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_HalfWordGetPointer
</UL>

<P><STRONG><a name="[175]"></a>FIO_HalfWordSetMask</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_HalfWordGetPointer
</UL>

<P><STRONG><a name="[176]"></a>FIO_HalfWordSetValue</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_HalfWordGetPointer
</UL>

<P><STRONG><a name="[177]"></a>FIO_HalfWordClearValue</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_HalfWordGetPointer
</UL>

<P><STRONG><a name="[178]"></a>FIO_HalfWordReadValue</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_HalfWordGetPointer
</UL>

<P><STRONG><a name="[179]"></a>FIO_ByteSetDir</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_ByteGetPointer
</UL>

<P><STRONG><a name="[17b]"></a>FIO_ByteSetMask</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_ByteGetPointer
</UL>

<P><STRONG><a name="[17c]"></a>FIO_ByteSetValue</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_ByteGetPointer
</UL>

<P><STRONG><a name="[17d]"></a>FIO_ByteClearValue</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_ByteGetPointer
</UL>

<P><STRONG><a name="[17e]"></a>FIO_ByteReadValue</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_ByteGetPointer
</UL>

<P><STRONG><a name="[17f]"></a>PINSEL_GetPinType</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, lpc177x_8x_pinsel.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_SetFilter
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_DacEnable
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_SetAnalogPinMode
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_SetOpenDrainMode
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_SetI2CMode
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_SetI2CFilter
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_SetSlewMode
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_SetInvertInput
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_SetHysMode
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_SetPinMode
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_ConfigPin
</UL>

<P><STRONG><a name="[15f]"></a>PINSEL_ConfigPin</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, lpc177x_8x_pinsel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PINSEL_ConfigPin &rArr; PIN_GetPointer
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_GetPinType
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_GetPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_Init
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIni
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_Init
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPC_Uart_Init
</UL>

<P><STRONG><a name="[181]"></a>PINSEL_SetPinMode</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, lpc177x_8x_pinsel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_GetPinType
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_GetPointer
</UL>

<P><STRONG><a name="[182]"></a>PINSEL_SetHysMode</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lpc177x_8x_pinsel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_GetPinType
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_GetPointer
</UL>

<P><STRONG><a name="[183]"></a>PINSEL_SetInvertInput</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, lpc177x_8x_pinsel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_GetPinType
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_GetPointer
</UL>

<P><STRONG><a name="[184]"></a>PINSEL_SetSlewMode</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lpc177x_8x_pinsel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_GetPinType
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_GetPointer
</UL>

<P><STRONG><a name="[185]"></a>PINSEL_SetI2CFilter</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, lpc177x_8x_pinsel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_GetPinType
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_GetPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_SetI2CMode
</UL>

<P><STRONG><a name="[186]"></a>PINSEL_SetI2CMode</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, lpc177x_8x_pinsel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_SetI2CFilter
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_GetPinType
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_GetPointer
</UL>

<P><STRONG><a name="[187]"></a>PINSEL_SetOpenDrainMode</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, lpc177x_8x_pinsel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_GetPinType
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_GetPointer
</UL>

<P><STRONG><a name="[188]"></a>PINSEL_SetAnalogPinMode</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, lpc177x_8x_pinsel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_GetPinType
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_GetPointer
</UL>

<P><STRONG><a name="[189]"></a>PINSEL_DacEnable</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, lpc177x_8x_pinsel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_GetPinType
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_GetPointer
</UL>

<P><STRONG><a name="[18a]"></a>PINSEL_SetFilter</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, lpc177x_8x_pinsel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_GetPinType
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_GetPointer
</UL>

<P><STRONG><a name="[18b]"></a>RTC_Init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lpc177x_8x_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_ConfigPPWR
</UL>
<BR>[Called By]<UL><LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Time_Init
</UL>

<P><STRONG><a name="[18c]"></a>RTC_DeInit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lpc177x_8x_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_ConfigPPWR
</UL>

<P><STRONG><a name="[697]"></a>RTC_ResetClockTickCounter</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lpc177x_8x_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Time_Init
</UL>

<P><STRONG><a name="[698]"></a>RTC_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lpc177x_8x_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Time_Init
</UL>

<P><STRONG><a name="[a20]"></a>RTC_CntIncrIntConfig</STRONG> (Thumb, 202 bytes, Stack size 0 bytes, lpc177x_8x_rtc.o(.text), UNUSED)

<P><STRONG><a name="[a21]"></a>RTC_AlarmIntConfig</STRONG> (Thumb, 202 bytes, Stack size 0 bytes, lpc177x_8x_rtc.o(.text), UNUSED)

<P><STRONG><a name="[69a]"></a>RTC_SetTime</STRONG> (Thumb, 228 bytes, Stack size 8 bytes, lpc177x_8x_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_SetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetTime
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Time_Init
</UL>

<P><STRONG><a name="[a22]"></a>RTC_GetTime</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, lpc177x_8x_rtc.o(.text), UNUSED)

<P><STRONG><a name="[a23]"></a>RTC_SetFullTime</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, lpc177x_8x_rtc.o(.text), UNUSED)

<P><STRONG><a name="[6b0]"></a>RTC_GetFullTime</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, lpc177x_8x_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainDisplayStatus
</UL>

<P><STRONG><a name="[a24]"></a>RTC_SetAlarmTime</STRONG> (Thumb, 232 bytes, Stack size 8 bytes, lpc177x_8x_rtc.o(.text), UNUSED)

<P><STRONG><a name="[a25]"></a>RTC_GetAlarmTime</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, lpc177x_8x_rtc.o(.text), UNUSED)

<P><STRONG><a name="[a26]"></a>RTC_SetFullAlarmTime</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, lpc177x_8x_rtc.o(.text), UNUSED)

<P><STRONG><a name="[a27]"></a>RTC_GetFullAlarmTime</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, lpc177x_8x_rtc.o(.text), UNUSED)

<P><STRONG><a name="[a28]"></a>RTC_GetIntPending</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lpc177x_8x_rtc.o(.text), UNUSED)

<P><STRONG><a name="[a29]"></a>RTC_ClearIntPending</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lpc177x_8x_rtc.o(.text), UNUSED)

<P><STRONG><a name="[699]"></a>RTC_CalibCounterCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lpc177x_8x_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Time_Init
</UL>

<P><STRONG><a name="[a2a]"></a>RTC_CalibConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lpc177x_8x_rtc.o(.text), UNUSED)

<P><STRONG><a name="[a2b]"></a>RTC_WriteGPREG</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lpc177x_8x_rtc.o(.text), UNUSED)

<P><STRONG><a name="[a2c]"></a>RTC_ReadGPREG</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lpc177x_8x_rtc.o(.text), UNUSED)

<P><STRONG><a name="[18e]"></a>SSP_Init</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, lpc177x_8x_ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SSP_Init &rArr; setSSPclock
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setSSPclock
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_ConfigPPWR
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT21L16S2W_SSP_Init
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P128_SSP_Init
</UL>

<P><STRONG><a name="[18f]"></a>SSP_DeInit</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lpc177x_8x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_ConfigPPWR
</UL>

<P><STRONG><a name="[192]"></a>SSP_GetDataSize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lpc177x_8x_ssp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_ReadWrite
</UL>

<P><STRONG><a name="[1f9]"></a>SSP_ConfigStructInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lpc177x_8x_ssp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT21L16S2W_SSP_Init
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P128_SSP_Init
</UL>

<P><STRONG><a name="[1fa]"></a>SSP_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lpc177x_8x_ssp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT21L16S2W_SSP_Init
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P128_SSP_Init
</UL>

<P><STRONG><a name="[a2d]"></a>SSP_LoopBackCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lpc177x_8x_ssp.o(.text), UNUSED)

<P><STRONG><a name="[a2e]"></a>SSP_SlaveOutputCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lpc177x_8x_ssp.o(.text), UNUSED)

<P><STRONG><a name="[193]"></a>SSP_SendData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lpc177x_8x_ssp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_ReadWrite
</UL>

<P><STRONG><a name="[191]"></a>SSP_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lpc177x_8x_ssp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_ReadWrite
</UL>

<P><STRONG><a name="[190]"></a>SSP_ReadWrite</STRONG> (Thumb, 538 bytes, Stack size 48 bytes, lpc177x_8x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_ReceiveData
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_SendData
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_GetDataSize
</UL>

<P><STRONG><a name="[a2f]"></a>SSP_GetStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lpc177x_8x_ssp.o(.text), UNUSED)

<P><STRONG><a name="[a30]"></a>SSP_IntConfig</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lpc177x_8x_ssp.o(.text), UNUSED)

<P><STRONG><a name="[a31]"></a>SSP_GetRawIntStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lpc177x_8x_ssp.o(.text), UNUSED)

<P><STRONG><a name="[a32]"></a>SSP_GetRawIntStatusReg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lpc177x_8x_ssp.o(.text), UNUSED)

<P><STRONG><a name="[a33]"></a>SSP_GetIntStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lpc177x_8x_ssp.o(.text), UNUSED)

<P><STRONG><a name="[a34]"></a>SSP_ClearIntPending</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lpc177x_8x_ssp.o(.text), UNUSED)

<P><STRONG><a name="[a35]"></a>SSP_DMACmd</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lpc177x_8x_ssp.o(.text), UNUSED)

<P><STRONG><a name="[679]"></a>TIM_GetIntStatus</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lpc177x_8x_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_GetIntStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
</UL>

<P><STRONG><a name="[a36]"></a>TIM_GetIntCaptureStatus</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, lpc177x_8x_timer.o(.text), UNUSED)

<P><STRONG><a name="[67a]"></a>TIM_ClearIntPending</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lpc177x_8x_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
</UL>

<P><STRONG><a name="[a37]"></a>TIM_ClearIntCapturePending</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lpc177x_8x_timer.o(.text), UNUSED)

<P><STRONG><a name="[a38]"></a>TIM_ConfigStructInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lpc177x_8x_timer.o(.text), UNUSED)

<P><STRONG><a name="[196]"></a>TIM_Init</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, lpc177x_8x_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = TIM_Init &rArr; converUSecToVal &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;converPtrToTimeNum
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;converUSecToVal
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_ConfigPPWR
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_Init
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASHInit
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAMInit
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInit
</UL>

<P><STRONG><a name="[198]"></a>TIM_DeInit</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, lpc177x_8x_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_ConfigPPWR
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAMInit
</UL>

<P><STRONG><a name="[19b]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lpc177x_8x_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Waitus
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInit
</UL>

<P><STRONG><a name="[19c]"></a>TIM_ResetCounter</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lpc177x_8x_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Waitus
</UL>

<P><STRONG><a name="[19a]"></a>TIM_ConfigMatch</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, lpc177x_8x_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_ConfigMatch
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Waitus
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInit
</UL>

<P><STRONG><a name="[a39]"></a>TIM_UpdateMatchValue</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lpc177x_8x_timer.o(.text), UNUSED)

<P><STRONG><a name="[a3a]"></a>TIM_ConfigCapture</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, lpc177x_8x_timer.o(.text), UNUSED)

<P><STRONG><a name="[a3b]"></a>TIM_GetCaptureValue</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lpc177x_8x_timer.o(.text), UNUSED)

<P><STRONG><a name="[199]"></a>TIM_Waitus</STRONG> (Thumb, 86 bytes, Stack size 20 bytes, lpc177x_8x_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TIM_Waitus &rArr; TIM_ConfigMatch
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ConfigMatch
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ResetCounter
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_WaitForReady
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Waitms
</UL>

<P><STRONG><a name="[19d]"></a>TIM_Waitms</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lpc177x_8x_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TIM_Waitms &rArr; TIM_Waitus &rArr; TIM_ConfigMatch
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Waitus
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_Reset
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_Init
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASHInit
</UL>

<P><STRONG><a name="[1a1]"></a>rx_descr_init</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, lpc177x_8x_emac.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_Init
</UL>

<P><STRONG><a name="[1a2]"></a>tx_descr_init</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, lpc177x_8x_emac.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_Init
</UL>

<P><STRONG><a name="[1a0]"></a>setEmacAddr</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lpc177x_8x_emac.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_Init
</UL>

<P><STRONG><a name="[a3c]"></a>EMAC_Write_PHY</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lpc177x_8x_emac.o(.text), UNUSED)

<P><STRONG><a name="[a3d]"></a>EMAC_Read_PHY</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, lpc177x_8x_emac.o(.text), UNUSED)

<P><STRONG><a name="[a3e]"></a>EMAC_SetFullDuplexMode</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, lpc177x_8x_emac.o(.text), UNUSED)

<P><STRONG><a name="[a3f]"></a>EMAC_SetPHYSpeed</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lpc177x_8x_emac.o(.text), UNUSED)

<P><STRONG><a name="[1a5]"></a>EMAC_RxEnable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lpc177x_8x_emac.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_Init
</UL>

<P><STRONG><a name="[1a4]"></a>EMAC_TxEnable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lpc177x_8x_emac.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_Init
</UL>

<P><STRONG><a name="[1a3]"></a>EMAC_IntCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lpc177x_8x_emac.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_frame_ready
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_Init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_input
</UL>

<P><STRONG><a name="[19e]"></a>EMAC_Init</STRONG> (Thumb, 348 bytes, Stack size 16 bytes, lpc177x_8x_emac.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_IntCmd
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_TxEnable
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_RxEnable
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setEmacAddr
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_descr_init
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_descr_init
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_ConfigPin
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_ConfigPPWR
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_GetCLK
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[1a6]"></a>EMAC_DeInit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lpc177x_8x_emac.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_ConfigPPWR
</UL>

<P><STRONG><a name="[a40]"></a>EMAC_TxDisable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lpc177x_8x_emac.o(.text), UNUSED)

<P><STRONG><a name="[a41]"></a>EMAC_RxDisable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lpc177x_8x_emac.o(.text), UNUSED)

<P><STRONG><a name="[1a8]"></a>EMAC_GetBufferSts</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, lpc177x_8x_emac.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EMAC_GetBufferSts
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_AllocTxBuff
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_input
</UL>

<P><STRONG><a name="[1a7]"></a>EMAC_AllocTxBuff</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, lpc177x_8x_emac.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_GetBufferSts
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_WritePacketBuffer
</UL>

<P><STRONG><a name="[1aa]"></a>EMAC_UpdateTxProduceIndex</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lpc177x_8x_emac.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_WritePacketBuffer
</UL>

<P><STRONG><a name="[1ac]"></a>EMAC_GetTxFrameStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lpc177x_8x_emac.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENET_IRQHandler
</UL>

<P><STRONG><a name="[1a9]"></a>EMAC_WritePacketBuffer</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, lpc177x_8x_emac.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_UpdateTxProduceIndex
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_AllocTxBuff
</UL>

<P><STRONG><a name="[1ab]"></a>EMAC_GetRxFrameStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lpc177x_8x_emac.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENET_IRQHandler
</UL>

<P><STRONG><a name="[66c]"></a>EMAC_GetRxFrameSize</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lpc177x_8x_emac.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_input
</UL>

<P><STRONG><a name="[66d]"></a>EMAC_GetRxBuffer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lpc177x_8x_emac.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_input
</UL>

<P><STRONG><a name="[66e]"></a>EMAC_UpdateRxConsumeIndex</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lpc177x_8x_emac.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_input
</UL>

<P><STRONG><a name="[35]"></a>ENET_IRQHandler</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, lpc177x_8x_emac.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = ENET_IRQHandler &rArr; ethernetif_frame_ready &rArr; sys_sem_signal &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_frame_ready
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_GetRxFrameStatus
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_GetTxFrameStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[1af]"></a>EMAC_CRCCalc</STRONG> (Thumb, 142 bytes, Stack size 28 bytes, lpc177x_8x_emac.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_SetHashFilter
</UL>

<P><STRONG><a name="[1ae]"></a>EMAC_SetHashFilter</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, lpc177x_8x_emac.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_CRCCalc
</UL>

<P><STRONG><a name="[a42]"></a>EMAC_SetFilterMode</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, lpc177x_8x_emac.o(.text), UNUSED)

<P><STRONG><a name="[a43]"></a>EMAC_GetWoLStatus</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lpc177x_8x_emac.o(.text), UNUSED)

<P><STRONG><a name="[a44]"></a>EMAC_IntGetStatus</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lpc177x_8x_emac.o(.text), UNUSED)

<P><STRONG><a name="[a45]"></a>delay_Ns</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lpc177x_8x_lcd.o(.text), UNUSED)

<P><STRONG><a name="[f5]"></a>LCD_L0_SetPixelIndex</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, lpc177x_8x_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LCD_L0_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_DrawVLine
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_DrawHLine
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_XorPixel
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBitLine16BPP
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_api.o(.constdata)
</UL>
<P><STRONG><a name="[f3]"></a>LCD_L0_GetPixelIndex</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lpc177x_8x_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_L0_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_XorPixel
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_api.o(.constdata)
</UL>
<P><STRONG><a name="[f6]"></a>LCD_L0_XorPixel</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lpc177x_8x_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LCD_L0_XorPixel &rArr; LCD_L0_SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_GetPixelIndex
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_DrawVLine
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_api.o(.constdata)
</UL>
<P><STRONG><a name="[f0]"></a>LCD_L0_DrawHLine</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lpc177x_8x_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LCD_L0_DrawHLine &rArr; LCD_L0_XorPixel &rArr; LCD_L0_SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_XorPixel
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_api.o(.constdata)
</UL>
<P><STRONG><a name="[f1]"></a>LCD_L0_DrawVLine</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lpc177x_8x_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LCD_L0_DrawVLine &rArr; LCD_L0_XorPixel &rArr; LCD_L0_SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_XorPixel
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_SetPixelIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_api.o(.constdata)
</UL>
<P><STRONG><a name="[f2]"></a>LCD_L0_FillRect</STRONG> (Thumb, 30 bytes, Stack size 20 bytes, lpc177x_8x_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_L0_FillRect &rArr; LCD_L0_DrawHLine &rArr; LCD_L0_XorPixel &rArr; LCD_L0_SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_api.o(.constdata)
</UL>
<P><STRONG><a name="[ef]"></a>LCD_L0_DrawBitmap</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, lpc177x_8x_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LCD_L0_DrawBitmap &rArr; _DrawBitLine4BPP &rArr; LCD_L0_SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawBitLine16BPP
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_api.o(.constdata)
</UL>
<P><STRONG><a name="[a46]"></a>LCD_L0_SetOrg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lpc177x_8x_lcd.o(.text), UNUSED)

<P><STRONG><a name="[81a]"></a>LCD_L0_On</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lpc177x_8x_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_L0_On
</UL>
<BR>[Called By]<UL><LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init (via Veneer)
</UL>

<P><STRONG><a name="[a47]"></a>LCD_L0_Off</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lpc177x_8x_lcd.o(.text), UNUSED)

<P><STRONG><a name="[1b5]"></a>LCDBackLightON</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lpc177x_8x_lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutputValue
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
</UL>

<P><STRONG><a name="[1b6]"></a>LCDBackLightOFF</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lpc177x_8x_lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutputValue
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
</UL>

<P><STRONG><a name="[1b7]"></a>LCDBackLightBright</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lpc177x_8x_lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutputValue
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
</UL>

<P><STRONG><a name="[1b8]"></a>LCDBackLightDark</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lpc177x_8x_lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutputValue
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
</UL>

<P><STRONG><a name="[1b9]"></a>LCD_L0_Init</STRONG> (Thumb, 336 bytes, Stack size 16 bytes, lpc177x_8x_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_L0_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_ConfigPPWR
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_GetCLK
</UL>
<BR>[Called By]<UL><LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init (via Veneer)
</UL>

<P><STRONG><a name="[f7]"></a>LCD_L0_SetLUTEntry</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lpc177x_8x_lcd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcd_api.o(.constdata)
</UL>
<P><STRONG><a name="[1bb]"></a>UART_Init</STRONG> (Thumb, 510 bytes, Stack size 16 bytes, lpc177x_8x_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = UART_Init &rArr; uart_set_divisors &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_set_divisors
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_ConfigPPWR
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Baudrate_Config
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPC_Uart_Init
</UL>

<P><STRONG><a name="[1bd]"></a>UART_TxCmd</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, lpc177x_8x_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DeInit
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPC_Uart_Init
</UL>

<P><STRONG><a name="[1bc]"></a>UART_DeInit</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, lpc177x_8x_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxCmd
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_ConfigPPWR
</UL>

<P><STRONG><a name="[a48]"></a>UART_ConfigStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lpc177x_8x_uart.o(.text), UNUSED)

<P><STRONG><a name="[1bf]"></a>UART_SendByte</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lpc177x_8x_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Send_Struct
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Send_Struct
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[1c1]"></a>UART_ReceiveByte</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lpc177x_8x_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[1be]"></a>UART_Send</STRONG> (Thumb, 176 bytes, Stack size 52 bytes, lpc177x_8x_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RS485Send
</UL>

<P><STRONG><a name="[1c0]"></a>UART_Receive</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, lpc177x_8x_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveByte
</UL>

<P><STRONG><a name="[a49]"></a>UART_ForceBreak</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, lpc177x_8x_uart.o(.text), UNUSED)

<P><STRONG><a name="[1fe]"></a>UART_IntConfig</STRONG> (Thumb, 154 bytes, Stack size 20 bytes, lpc177x_8x_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_IntConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Send_Struct
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Send_Struct
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPC_Uart_Init
</UL>

<P><STRONG><a name="[204]"></a>UART_GetLineStatus</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lpc177x_8x_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[203]"></a>UART_GetIntId</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, lpc177x_8x_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[a4a]"></a>UART_CheckBusy</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, lpc177x_8x_uart.o(.text), UNUSED)

<P><STRONG><a name="[1fd]"></a>UART_FIFOConfig</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, lpc177x_8x_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_FIFOConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPC_Uart_Init
</UL>

<P><STRONG><a name="[a4b]"></a>UART_FIFOConfigStructInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lpc177x_8x_uart.o(.text), UNUSED)

<P><STRONG><a name="[1c2]"></a>UART_ABCmd</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, lpc177x_8x_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_pointer
</UL>

<P><STRONG><a name="[1c4]"></a>UART_ABClearIntPending</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lpc177x_8x_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_pointer
</UL>

<P><STRONG><a name="[a4c]"></a>UART_IrDAInvtInputCmd</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, lpc177x_8x_uart.o(.text), UNUSED)

<P><STRONG><a name="[a4d]"></a>UART_IrDACmd</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lpc177x_8x_uart.o(.text), UNUSED)

<P><STRONG><a name="[a4e]"></a>UART_IrDAPulseDivConfig</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, lpc177x_8x_uart.o(.text), UNUSED)

<P><STRONG><a name="[a4f]"></a>UART_FullModemForcePinState</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, lpc177x_8x_uart.o(.text), UNUSED)

<P><STRONG><a name="[a50]"></a>UART_FullModemConfigMode</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, lpc177x_8x_uart.o(.text), UNUSED)

<P><STRONG><a name="[a51]"></a>UART_FullModemGetStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lpc177x_8x_uart.o(.text), UNUSED)

<P><STRONG><a name="[1c5]"></a>UART_RS485Config</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, lpc177x_8x_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART_RS485Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_pointer
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPC_Uart_Init
</UL>

<P><STRONG><a name="[1c6]"></a>UART_RS485ReceiverCmd</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, lpc177x_8x_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_RS485ReceiverCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_pointer
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPC_Uart_Init
</UL>

<P><STRONG><a name="[1c7]"></a>UART_RS485Send</STRONG> (Thumb, 190 bytes, Stack size 64 bytes, lpc177x_8x_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_get_pointer
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RS485SendData
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RS485SendSlvAddr
</UL>

<P><STRONG><a name="[1c8]"></a>UART_RS485SendSlvAddr</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, lpc177x_8x_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RS485Send
</UL>

<P><STRONG><a name="[1c9]"></a>UART_RS485SendData</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lpc177x_8x_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RS485Send
</UL>

<P><STRONG><a name="[67c]"></a>EXTI_Init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lpc177x_8x_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInit
</UL>

<P><STRONG><a name="[a52]"></a>EXTI_DeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lpc177x_8x_exti.o(.text), UNUSED)

<P><STRONG><a name="[1cc]"></a>EXTI_SetPolarity</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lpc177x_8x_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Config
</UL>

<P><STRONG><a name="[1cb]"></a>EXTI_SetMode</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lpc177x_8x_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Config
</UL>

<P><STRONG><a name="[1ca]"></a>EXTI_Config</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lpc177x_8x_exti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_SetMode
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_SetPolarity
</UL>
<BR>[Called By]<UL><LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInit
</UL>

<P><STRONG><a name="[678]"></a>EXTI_ClearEXTIFlag</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lpc177x_8x_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT0_IRQHandler
</UL>

<P><STRONG><a name="[1ce]"></a>I2C_Init</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, lpc177x_8x_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_Init &rArr; I2C_SetClock
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SetClock
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetPointer
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_ConfigPPWR
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_24c02_Init
</UL>

<P><STRONG><a name="[1d0]"></a>I2C_DeInit</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lpc177x_8x_i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetPointer
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_ConfigPPWR
</UL>

<P><STRONG><a name="[1d1]"></a>I2C_Cmd</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, lpc177x_8x_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_24c02_Init
</UL>

<P><STRONG><a name="[1d8]"></a>I2C_IntCmd</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, lpc177x_8x_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = I2C_IntCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SlaveTransferData
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterTransferData
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SlaveHandler
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterHandler
</UL>

<P><STRONG><a name="[1d2]"></a>I2C_MasterHanleStates</STRONG> (Thumb, 390 bytes, Stack size 40 bytes, lpc177x_8x_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_MasterHanleStates
</UL>
<BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetByte
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendByte
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterTransferData
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterHandler
</UL>

<P><STRONG><a name="[1d6]"></a>I2C_SlaveHanleStates</STRONG> (Thumb, 348 bytes, Stack size 32 bytes, lpc177x_8x_i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SlaveTransferData
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SlaveHandler
</UL>

<P><STRONG><a name="[1d7]"></a>I2C_MasterHandler</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, lpc177x_8x_i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterHanleStates
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IntCmd
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetPointer
</UL>

<P><STRONG><a name="[1d9]"></a>I2C_SlaveHandler</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, lpc177x_8x_i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SlaveHanleStates
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IntCmd
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetPointer
</UL>

<P><STRONG><a name="[1da]"></a>I2C_MasterTransferData</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, lpc177x_8x_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = I2C_MasterTransferData &rArr; I2C_MasterHanleStates
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterHanleStates
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IntCmd
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_ReadDataOnePage
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteDataOnePage
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_ReadData
</UL>

<P><STRONG><a name="[1dc]"></a>I2C_SlaveTransferData</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, lpc177x_8x_i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SlaveHanleStates
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IntCmd
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetPointer
</UL>

<P><STRONG><a name="[1dd]"></a>I2C_SetOwnSlaveAddr</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, lpc177x_8x_i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetPointer
</UL>

<P><STRONG><a name="[1de]"></a>I2C_MonitorModeConfig</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lpc177x_8x_i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetPointer
</UL>

<P><STRONG><a name="[1df]"></a>I2C_MonitorModeCmd</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lpc177x_8x_i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetPointer
</UL>

<P><STRONG><a name="[1e0]"></a>I2C_MonitorGetDatabuffer</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, lpc177x_8x_i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetPointer
</UL>

<P><STRONG><a name="[1e1]"></a>I2C_MonitorHandler</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lpc177x_8x_i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetPointer
</UL>

<P><STRONG><a name="[a53]"></a>I2C_MasterTransferComplete</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lpc177x_8x_i2c.o(.text), UNUSED)

<P><STRONG><a name="[a54]"></a>I2C_SlaveTransferComplete</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lpc177x_8x_i2c.o(.text), UNUSED)

<P><STRONG><a name="[145]"></a>SDRAMInit</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, sdram_mt48lc8m32lfb5.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = SDRAMInit &rArr; TIM_Init &rArr; converUSecToVal &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Init
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_DynMemConfigB
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_DynCtrlSDRAMInit
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DynMem_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[1e6]"></a>delay</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, norflash_sst39vf1601.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASHErase
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASHCheckID
</UL>

<P><STRONG><a name="[1e4]"></a>NORFLASHInit</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, norflash_sst39vf1601.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = NORFLASHInit &rArr; TIM_Init &rArr; converUSecToVal &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Waitms
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Init
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StaticMem_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[1e9]"></a>ToggleBitCheck</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, norflash_sst39vf1601.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASHWriteWord
</UL>

<P><STRONG><a name="[1e5]"></a>NORFLASHCheckID</STRONG> (Thumb, 82 bytes, Stack size 12 bytes, norflash_sst39vf1601.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>

<P><STRONG><a name="[1e7]"></a>NORFLASHErase</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, norflash_sst39vf1601.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>

<P><STRONG><a name="[1e8]"></a>NORFLASHWriteWord</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, norflash_sst39vf1601.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToggleBitCheck
</UL>

<P><STRONG><a name="[1ea]"></a>NandFlash_WaitForReady</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, nandflash_k9f4g08u0b.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = NandFlash_WaitForReady &rArr; TIM_Waitus &rArr; TIM_ConfigMatch
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Waitus
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_PageProgramWithSpare
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_PageReadWithSpare
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_PageProgram
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_ReadFromAddr
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_BlockErase
</UL>

<P><STRONG><a name="[1eb]"></a>NandFlash_Init</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, nandflash_k9f4g08u0b.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = NandFlash_Init &rArr; TIM_Init &rArr; converUSecToVal &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Waitms
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Init
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StaticMem_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[1ec]"></a>NandFlash_Reset</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, nandflash_k9f4g08u0b.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Waitms
</UL>

<P><STRONG><a name="[1ee]"></a>NandFlash_ReadStatus</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, nandflash_k9f4g08u0b.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NandFlash_ReadStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_PageProgramWithSpare
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_PageProgram
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_BlockErase
</UL>

<P><STRONG><a name="[a55]"></a>NandFlash_ReadId</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, nandflash_k9f4g08u0b.o(.text), UNUSED)

<P><STRONG><a name="[1ed]"></a>NandFlash_BlockErase</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, nandflash_k9f4g08u0b.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = NandFlash_BlockErase &rArr; NandFlash_WaitForReady &rArr; TIM_Waitus &rArr; TIM_ConfigMatch
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_ReadStatus
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_WaitForReady
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_nand_drv_EraseBlock
</UL>

<P><STRONG><a name="[1ef]"></a>NandFlash_ReadFromAddr</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, nandflash_k9f4g08u0b.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = NandFlash_ReadFromAddr &rArr; NandFlash_WaitForReady &rArr; TIM_Waitus &rArr; TIM_ConfigMatch
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_WaitForReady
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_PageReadFromAddr
</UL>

<P><STRONG><a name="[1f0]"></a>NandFlash_PageReadFromAddr</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, nandflash_k9f4g08u0b.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = NandFlash_PageReadFromAddr &rArr; NandFlash_ReadFromAddr &rArr; NandFlash_WaitForReady &rArr; TIM_Waitus &rArr; TIM_ConfigMatch
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_ReadFromAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_PageReadFromBeginning
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_ValidBlockCheck
</UL>

<P><STRONG><a name="[1f1]"></a>NandFlash_ValidBlockCheck</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, nandflash_k9f4g08u0b.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = NandFlash_ValidBlockCheck &rArr; NandFlash_PageReadFromAddr &rArr; NandFlash_ReadFromAddr &rArr; NandFlash_WaitForReady &rArr; TIM_Waitus &rArr; TIM_ConfigMatch
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_PageReadFromAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_nand_drv_CheckBad
</UL>

<P><STRONG><a name="[1f2]"></a>NandFlash_PageProgram</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, nandflash_k9f4g08u0b.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_ReadStatus
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_WaitForReady
</UL>

<P><STRONG><a name="[1f3]"></a>NandFlash_PageReadFromBeginning</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, nandflash_k9f4g08u0b.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_PageReadFromAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_PageRead
</UL>

<P><STRONG><a name="[1f4]"></a>NandFlash_PageRead</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, nandflash_k9f4g08u0b.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_PageReadFromBeginning
</UL>

<P><STRONG><a name="[1f5]"></a>NandFlash_PageReadWithSpare</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, nandflash_k9f4g08u0b.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = NandFlash_PageReadWithSpare &rArr; NandFlash_WaitForReady &rArr; TIM_Waitus &rArr; TIM_ConfigMatch
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_WaitForReady
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_nand_drv_MarkBad
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_nand_drv_ReadChunk
</UL>

<P><STRONG><a name="[1f6]"></a>NandFlash_PageProgramWithSpare</STRONG> (Thumb, 214 bytes, Stack size 40 bytes, nandflash_k9f4g08u0b.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = NandFlash_PageProgramWithSpare &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_ReadStatus
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_WaitForReady
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_nand_drv_WriteChunk
</UL>

<P><STRONG><a name="[1f8]"></a>GT21L16S2W_SSP_Init</STRONG> (Thumb, 30 bytes, Stack size 32 bytes, ssp_gt21l16s2w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GT21L16S2W_SSP_Init &rArr; SSP_Init &rArr; setSSPclock
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Cmd
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_ConfigStructInit
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1fb]"></a>GT21L16S2W_Read</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, ssp_gt21l16s2w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GT21L16S2W_Read &rArr; GPIO_ClearValue
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar (via Veneer)
</UL>

<P><STRONG><a name="[143]"></a>GPIOIni</STRONG> (Thumb, 944 bytes, Stack size 8 bytes, gpioconfig.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIOIni &rArr; PINSEL_ConfigPin &rArr; PIN_GetPointer
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_ConfigPin
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[1fc]"></a>LPC_Uart_Init</STRONG> (Thumb, 780 bytes, Stack size 40 bytes, com_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = LPC_Uart_Init &rArr; UART_Init &rArr; uart_set_divisors &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RS485ReceiverCmd
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RS485Config
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_FIFOConfig
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IntConfig
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxCmd
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_ConfigPin
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[201]"></a>RS485_Baudrate_Config</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, com_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[20]"></a>UART1_IRQHandler</STRONG> (Thumb, 422 bytes, Stack size 16 bytes, com_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = UART1_IRQHandler &rArr; UART_IntConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetIntId
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetLineStatus
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IntConfig
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveByte
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendByte
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>UART0_IRQHandler</STRONG> (Thumb, 366 bytes, Stack size 16 bytes, com_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = UART0_IRQHandler &rArr; UART_IntConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetIntId
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetLineStatus
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IntConfig
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveByte
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendByte
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>UART2_IRQHandler</STRONG> (Thumb, 366 bytes, Stack size 16 bytes, com_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = UART2_IRQHandler &rArr; UART_IntConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetIntId
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetLineStatus
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IntConfig
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveByte
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendByte
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>UART3_IRQHandler</STRONG> (Thumb, 462 bytes, Stack size 16 bytes, com_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = UART3_IRQHandler &rArr; UART_IntConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetIntId
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetLineStatus
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IntConfig
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveByte
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendByte
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>UART4_IRQHandler</STRONG> (Thumb, 366 bytes, Stack size 16 bytes, com_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = UART4_IRQHandler &rArr; UART_IntConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetIntId
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetLineStatus
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IntConfig
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveByte
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendByte
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[206]"></a>Uart1_Send_Struct</STRONG> (Thumb, 156 bytes, Stack size 8 bytes, com_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Uart1_Send_Struct &rArr; UART_IntConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IntConfig
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartRcv_Task
</UL>

<P><STRONG><a name="[207]"></a>Uart1_Get_Struct</STRONG> (Thumb, 246 bytes, Stack size 152 bytes, com_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Uart1_Get_Struct &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartRcv_Task
</UL>

<P><STRONG><a name="[208]"></a>RS485Send_Struct</STRONG> (Thumb, 532 bytes, Stack size 16 bytes, com_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RS485Send_Struct &rArr; UART_IntConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IntConfig
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTestRS485
</UL>

<P><STRONG><a name="[209]"></a>RS485_Get_Struct</STRONG> (Thumb, 374 bytes, Stack size 152 bytes, com_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[20b]"></a>M25P128_SSP_Init</STRONG> (Thumb, 30 bytes, Stack size 32 bytes, ssp_m25p128.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = M25P128_SSP_Init &rArr; SSP_Init &rArr; setSSPclock
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Cmd
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_ConfigStructInit
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20c]"></a>M25P128_Read</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, ssp_m25p128.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
</UL>

<P><STRONG><a name="[20d]"></a>EEPROM_24c02_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, eeprom_st24c02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = EEPROM_24c02_Init &rArr; I2C_Init &rArr; I2C_SetClock
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[20e]"></a>EEPROM_ReadData</STRONG> (Thumb, 54 bytes, Stack size 64 bytes, eeprom_st24c02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = EEPROM_ReadData &rArr; I2C_MasterTransferData &rArr; I2C_MasterHanleStates
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterTransferData
</UL>
<BR>[Called By]<UL><LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_ReadStruct
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_ReadRati
</UL>

<P><STRONG><a name="[20f]"></a>EEPROM_WriteDataOnePage</STRONG> (Thumb, 76 bytes, Stack size 80 bytes, eeprom_st24c02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = EEPROM_WriteDataOnePage &rArr; I2C_MasterTransferData &rArr; I2C_MasterHanleStates
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterTransferData
</UL>
<BR>[Called By]<UL><LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteStruct
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteRati
</UL>

<P><STRONG><a name="[210]"></a>EEPROM_ReadDataOnePage</STRONG> (Thumb, 54 bytes, Stack size 64 bytes, eeprom_st24c02.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterTransferData
</UL>

<P><STRONG><a name="[213]"></a>OS_StrLen</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrNameGet
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameGet
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemNameGet
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagNameGet
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventNameGet
</UL>

<P><STRONG><a name="[211]"></a>OSEventNameGet</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StrLen
</UL>

<P><STRONG><a name="[215]"></a>OSEventNameSet</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSEventNameSet
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Init
</UL>

<P><STRONG><a name="[21b]"></a>OS_EventTaskRemoveMulti</STRONG> (Thumb, 60 bytes, Stack size 20 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OS_EventTaskRemoveMulti
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventPendMulti
</UL>

<P><STRONG><a name="[216]"></a>OS_Sched</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSCtxSw
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SchedNew
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyResume
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskChangePrio
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPendAbort
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemDel
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostOpt
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostFront
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPendAbort
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQDel
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPost
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPend
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagDel
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventPendMulti
</UL>

<P><STRONG><a name="[21a]"></a>OS_EventTaskWaitMulti</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventPendMulti
</UL>

<P><STRONG><a name="[219]"></a>OSEventPendMulti</STRONG> (Thumb, 692 bytes, Stack size 64 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskWaitMulti
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRemoveMulti
</UL>

<P><STRONG><a name="[21c]"></a>OS_TaskIdle</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OS_TaskIdle &rArr; OSTaskIdleHook
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskIdleHook
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_core.o(.text)
</UL>
<P><STRONG><a name="[222]"></a>OS_MemClr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_QInit
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemInit
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagInit
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Init
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTCBList
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitEventList
</UL>

<P><STRONG><a name="[224]"></a>OSInit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = OSInit &rArr; OSTmr_Init &rArr; OSTmr_InitTask &rArr; OSTaskCreateExt &rArr; OS_TCBInit &rArr; OSTaskCreateHook
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_QInit
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemInit
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagInit
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Init
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInitHookEnd
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInitHookBegin
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSDebugInit
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitMisc
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitRdyList
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTCBList
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitEventList
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskIdle
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[202]"></a>OSIntEnter</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[205]"></a>OSIntExit</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OSIntExit
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntCtxSw
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SchedNew
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickHandler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_IRQHandler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT0_IRQHandler
</UL>

<P><STRONG><a name="[22f]"></a>OSSchedLock</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OSSchedLock
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrStop
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrStart
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrStateGet
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrRemainGet
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrNameGet
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrDel
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrCreate
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Task
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
</UL>

<P><STRONG><a name="[230]"></a>OSSchedUnlock</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrStop
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrStart
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrStateGet
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrRemainGet
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrNameGet
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrDel
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrCreate
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Task
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
</UL>

<P><STRONG><a name="[231]"></a>OSStart</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OSStart
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStartHighRdy
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SchedNew
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[233]"></a>OSTimeTick</STRONG> (Thumb, 334 bytes, Stack size 16 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = OSTimeTick &rArr; OSTimeTickHook &rArr; OSTmrSignal &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTickHook
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickHandler
</UL>

<P><STRONG><a name="[a56]"></a>OSVersion</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, os_core.o(.text), UNUSED)

<P><STRONG><a name="[267]"></a>OS_Dummy</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[236]"></a>OS_EventTaskRemove</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_EventTaskRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
</UL>

<P><STRONG><a name="[235]"></a>OS_EventTaskRdy</STRONG> (Thumb, 132 bytes, Stack size 36 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRemove
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRemoveMulti
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPendAbort
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemDel
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostOpt
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostFront
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPendAbort
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQDel
</UL>

<P><STRONG><a name="[254]"></a>OS_EventTaskWait</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_EventTaskWait
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
</UL>

<P><STRONG><a name="[250]"></a>OS_EventWaitListInit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
</UL>

<P><STRONG><a name="[26e]"></a>OS_MemCopy</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskQuery
</UL>

<P><STRONG><a name="[237]"></a>OS_TaskStatStkChk</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, os_core.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkChk
</UL>

<P><STRONG><a name="[239]"></a>OS_TCBInit</STRONG> (Thumb, 310 bytes, Stack size 40 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = OS_TCBInit &rArr; OSTaskCreateHook
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateHook
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTCBInitHook
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>

<P><STRONG><a name="[23c]"></a>OSFlagAccept</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>

<P><STRONG><a name="[23d]"></a>OSFlagCreate</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>

<P><STRONG><a name="[23f]"></a>OS_FlagUnlink</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, os_flag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OS_FlagUnlink
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPend
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagTaskRdy
</UL>

<P><STRONG><a name="[240]"></a>OSFlagDel</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagTaskRdy
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[241]"></a>OSFlagNameGet</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StrLen
</UL>

<P><STRONG><a name="[242]"></a>OSFlagNameSet</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>

<P><STRONG><a name="[243]"></a>OSFlagPend</STRONG> (Thumb, 614 bytes, Stack size 72 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagUnlink
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagBlock
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[245]"></a>OSFlagPendGetFlagsRdy</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>

<P><STRONG><a name="[246]"></a>OSFlagPost</STRONG> (Thumb, 320 bytes, Stack size 48 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagTaskRdy
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[247]"></a>OSFlagQuery</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>

<P><STRONG><a name="[228]"></a>OS_FlagInit</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, os_flag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OS_FlagInit
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[248]"></a>OSMemCreate</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, os_mem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>

<P><STRONG><a name="[249]"></a>OSMemGet</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, os_mem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>

<P><STRONG><a name="[24a]"></a>OSMemNameGet</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, os_mem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StrLen
</UL>

<P><STRONG><a name="[24b]"></a>OSMemNameSet</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, os_mem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>

<P><STRONG><a name="[24c]"></a>OSMemPut</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, os_mem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>

<P><STRONG><a name="[24d]"></a>OSMemQuery</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, os_mem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>

<P><STRONG><a name="[229]"></a>OS_MemInit</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, os_mem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OS_MemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[24e]"></a>OSQAccept</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>

<P><STRONG><a name="[24f]"></a>OSQCreate</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, os_q.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSQCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventWaitListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStart
</UL>

<P><STRONG><a name="[251]"></a>OSQDel</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[252]"></a>OSQFlush</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>

<P><STRONG><a name="[253]"></a>OSQPend</STRONG> (Thumb, 278 bytes, Stack size 32 bytes, os_q.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = OSQPend &rArr; OS_EventTaskWait
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskWait
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRemove
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_Key
</UL>

<P><STRONG><a name="[255]"></a>OSQPendAbort</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[256]"></a>OSQPost</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, os_q.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT0_IRQHandler
</UL>

<P><STRONG><a name="[257]"></a>OSQPostFront</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[258]"></a>OSQPostOpt</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[259]"></a>OSQQuery</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, os_q.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>

<P><STRONG><a name="[22a]"></a>OS_QInit</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, os_q.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OS_QInit
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[25a]"></a>OSSemAccept</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, os_sem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>

<P><STRONG><a name="[25b]"></a>OSSemCreate</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, os_sem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventWaitListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_InitOS
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Init
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_new
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_LockInit
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStart
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initTestpoint
</UL>

<P><STRONG><a name="[25c]"></a>OSSemDel</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, os_sem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = OSSemDel &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_free
</UL>

<P><STRONG><a name="[25d]"></a>OSSemPend</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, os_sem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = OSSemPend &rArr; OS_EventTaskWait
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskWait
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRemove
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Lock
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Task
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintTestIO
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbReversiWin
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartRcv_Task
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Task
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStart
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateEquipmentList
</UL>

<P><STRONG><a name="[25e]"></a>OSSemPendAbort</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, os_sem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[25f]"></a>OSSemPost</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, os_sem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Unlock
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrSignal
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintTestIO
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbReversiWin
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartRcv_Task
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Equipment_Task
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_init_done
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateEquipmentList
</UL>

<P><STRONG><a name="[260]"></a>OSSemQuery</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, os_sem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_trywait
</UL>

<P><STRONG><a name="[261]"></a>OSSemSet</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, os_sem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSSemSet
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_trywait
</UL>

<P><STRONG><a name="[262]"></a>OSTaskChangePrio</STRONG> (Thumb, 396 bytes, Stack size 64 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[263]"></a>OSTaskCreate</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, os_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = OSTaskCreate &rArr; OS_TCBInit &rArr; OSTaskCreateHook
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkInit
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStart
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_KeyTaskCreate
</UL>

<P><STRONG><a name="[265]"></a>OS_TaskStkClr</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, os_task.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>

<P><STRONG><a name="[21f]"></a>OSTaskCreateExt</STRONG> (Thumb, 170 bytes, Stack size 56 bytes, os_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = OSTaskCreateExt &rArr; OS_TCBInit &rArr; OSTaskCreateHook
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkInit
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStkClr
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_InitTask
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskIdle
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_thread_new
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCPTest
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_init
</UL>

<P><STRONG><a name="[266]"></a>OSTaskDel</STRONG> (Thumb, 352 bytes, Stack size 24 bytes, os_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44 + Unknown Stack Size
<LI>Call Chain = OSTaskDel &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelHook
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagUnlink
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRemove
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Dummy
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRemoveMulti
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskReturn
</UL>

<P><STRONG><a name="[269]"></a>OSTaskDelReq</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>

<P><STRONG><a name="[26a]"></a>OSTaskNameGet</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StrLen
</UL>

<P><STRONG><a name="[220]"></a>OSTaskNameSet</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, os_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSTaskNameSet
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_InitTask
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskIdle
</UL>

<P><STRONG><a name="[26b]"></a>OSTaskResume</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[238]"></a>OSTaskStkChk</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStatStkChk
</UL>

<P><STRONG><a name="[26c]"></a>OSTaskSuspend</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, os_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = OSTaskSuspend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStart
</UL>

<P><STRONG><a name="[26d]"></a>OSTaskQuery</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemCopy
</UL>

<P><STRONG><a name="[26f]"></a>OSTaskRegGet</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>

<P><STRONG><a name="[270]"></a>OSTaskRegGetID</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>

<P><STRONG><a name="[271]"></a>OSTaskRegSet</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, os_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>

<P><STRONG><a name="[45]"></a>OS_TaskReturn</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, os_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = OS_TaskReturn &rArr; OSTaskDel &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskReturnHook
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_cpu_c.o(.text)
</UL>
<P><STRONG><a name="[273]"></a>OSTimeDly</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, os_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>
<BR>[Called By]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_ExecIdle
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteStruct
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartRcv_Task
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Equipment_Task
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_Key
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteRati
</UL>

<P><STRONG><a name="[274]"></a>OSTimeDlyHMSM</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, os_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = OSTimeDlyHMSM &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_sleep
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClientTest
</UL>

<P><STRONG><a name="[275]"></a>OSTimeDlyResume</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, os_time.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[276]"></a>OSTimeGet</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, os_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_ms
</UL>

<P><STRONG><a name="[277]"></a>OSTimeSet</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, os_time.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
</UL>

<P><STRONG><a name="[278]"></a>OSTmrCreate</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, os_tmr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Alloc
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>

<P><STRONG><a name="[27a]"></a>OSTmrDel</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, os_tmr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Unlink
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Free
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>

<P><STRONG><a name="[27d]"></a>OSTmrNameGet</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, os_tmr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StrLen
</UL>

<P><STRONG><a name="[27e]"></a>OSTmrRemainGet</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, os_tmr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>

<P><STRONG><a name="[27f]"></a>OSTmrStateGet</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, os_tmr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>

<P><STRONG><a name="[280]"></a>OSTmrStart</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, os_tmr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Link
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Unlink
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>

<P><STRONG><a name="[282]"></a>OSTmrStop</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, os_tmr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Unlink
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>

<P><STRONG><a name="[283]"></a>OSTmrSignal</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, os_tmr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = OSTmrSignal &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTickHook
</UL>

<P><STRONG><a name="[22b]"></a>OSTmr_Init</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, os_tmr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = OSTmr_Init &rArr; OSTmr_InitTask &rArr; OSTaskCreateExt &rArr; OS_TCBInit &rArr; OSTaskCreateHook
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_InitTask
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventNameSet
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[225]"></a>OSInitHookBegin</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, os_cpu_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[22c]"></a>OSInitHookEnd</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_cpu_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[23b]"></a>OSTaskCreateHook</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTaskCreateHook
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskCreateHook
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
</UL>

<P><STRONG><a name="[268]"></a>OSTaskDelHook</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTaskDelHook
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskDelHook
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[21d]"></a>OSTaskIdleHook</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTaskIdleHook
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskIdleHook
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskIdle
</UL>

<P><STRONG><a name="[272]"></a>OSTaskReturnHook</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTaskReturnHook
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskReturnHook
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskReturn
</UL>

<P><STRONG><a name="[289]"></a>OSTaskStatHook</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, os_cpu_c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskStatHook
</UL>

<P><STRONG><a name="[264]"></a>OSTaskStkInit</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OSTaskStkInit
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>

<P><STRONG><a name="[46]"></a>OSTaskSwHook</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTaskSwHook
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TaskSwHook
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_cpu_a.o(.text)
</UL>
<P><STRONG><a name="[23a]"></a>OSTCBInitHook</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTCBInitHook
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TCBInitHook
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
</UL>

<P><STRONG><a name="[234]"></a>OSTimeTickHook</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = OSTimeTickHook &rArr; OSTmrSignal &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_TimeTickHook
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
</UL>

<P><STRONG><a name="[19]"></a>OS_CPU_SysTickHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, os_cpu_c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = OS_CPU_SysTickHandler &rArr; OSTimeTick &rArr; OSTimeTickHook &rArr; OSTmrSignal &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[69f]"></a>OS_CPU_SysTickInit</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, os_cpu_c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[212]"></a>OS_CPU_SR_Save</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickHandler
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeSet
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyResume
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskRegSet
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskRegGetID
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskRegGet
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskQuery
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameGet
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelReq
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskChangePrio
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemSet
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemQuery
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPendAbort
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemDel
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemAccept
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQQuery
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostOpt
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostFront
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPendAbort
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQFlush
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQDel
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQAccept
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemQuery
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemPut
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemNameSet
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemNameGet
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemGet
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemCreate
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagQuery
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPost
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPendGetFlagsRdy
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPend
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagNameSet
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagNameGet
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagDel
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagCreate
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagAccept
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkChk
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameSet
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskIdle
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventPendMulti
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventNameSet
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventNameGet
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT0_IRQHandler
</UL>

<P><STRONG><a name="[214]"></a>OS_CPU_SR_Restore</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickHandler
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeSet
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyResume
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskRegSet
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskRegGetID
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskRegGet
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskQuery
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameGet
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelReq
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskChangePrio
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemSet
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemQuery
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPendAbort
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemDel
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemAccept
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQQuery
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostOpt
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPostFront
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPendAbort
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQFlush
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQDel
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQAccept
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemQuery
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemPut
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemNameSet
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemNameGet
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemGet
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMemCreate
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagQuery
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPost
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPendGetFlagsRdy
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPend
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagNameSet
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagNameGet
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagDel
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagCreate
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagAccept
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkChk
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameSet
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskIdle
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventPendMulti
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventNameSet
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventNameGet
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT0_IRQHandler
</UL>

<P><STRONG><a name="[232]"></a>OSStartHighRdy</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
</UL>

<P><STRONG><a name="[218]"></a>OSCtxSw</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[22e]"></a>OSIntCtxSw</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>

<P><STRONG><a name="[18]"></a>OS_CPU_PendSVHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[22d]"></a>OSDebugInit</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, os_dbg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[28e]"></a>GUI_X_GetTime</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, gui_x_ucos-ii.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = GUI_X_GetTime &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime (via Veneer)
</UL>

<P><STRONG><a name="[28f]"></a>GUI_X_Delay</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gui_x_ucos-ii.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = GUI_X_Delay &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay (via Veneer)
</UL>

<P><STRONG><a name="[290]"></a>GUI_X_ExecIdle</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, gui_x_ucos-ii.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[826]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog (via Veneer)
</UL>

<P><STRONG><a name="[291]"></a>GUI_X_InitOS</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui_x_ucos-ii.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = GUI_X_InitOS &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init (via Veneer)
</UL>

<P><STRONG><a name="[292]"></a>GUI_X_Lock</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui_x_ucos-ii.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = GUI_X_Lock &rArr; OSSemPend &rArr; OS_EventTaskWait
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Called By]<UL><LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock (via Veneer)
</UL>

<P><STRONG><a name="[293]"></a>GUI_X_Unlock</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gui_x_ucos-ii.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock (via Veneer)
</UL>

<P><STRONG><a name="[812]"></a>GUI_X_GetTaskId</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_x_ucos-ii.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock (via Veneer)
<LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTaskNo (via Veneer)
</UL>

<P><STRONG><a name="[294]"></a>GUI_X_Init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui_x_ucos-ii.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = GUI_X_Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init (via Veneer)
</UL>

<P><STRONG><a name="[a57]"></a>GUI_X_GetKey</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x_ucos-ii.o(.text), UNUSED)

<P><STRONG><a name="[a58]"></a>GUI_X_WaitKey</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x_ucos-ii.o(.text), UNUSED)

<P><STRONG><a name="[a59]"></a>GUI_X_StoreKey</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x_ucos-ii.o(.text), UNUSED)

<P><STRONG><a name="[a5a]"></a>GUI_X_Log</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x_ucos-ii.o(.text), UNUSED)

<P><STRONG><a name="[a5b]"></a>GUI_X_Warn</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x_ucos-ii.o(.text), UNUSED)

<P><STRONG><a name="[a5c]"></a>GUI_X_ErrorOut</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x_ucos-ii.o(.text), UNUSED)

<P><STRONG><a name="[a5d]"></a>GetKey</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_x_ucos-ii.o(.text), UNUSED)

<P><STRONG><a name="[29d]"></a>yaffs_alloc_raw_tnode</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, yaffs_allocator.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = yaffs_alloc_raw_tnode &rArr; yaffs_create_tnodes &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_tnodes
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_tnode
</UL>

<P><STRONG><a name="[29e]"></a>yaffs_free_raw_tnode</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, yaffs_allocator.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = yaffs_free_raw_tnode &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_free_tnode
</UL>

<P><STRONG><a name="[2a3]"></a>yaffs_alloc_raw_obj</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, yaffs_allocator.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = yaffs_alloc_raw_obj &rArr; yaffs_create_free_objs &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_free_objs
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_empty
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_alloc_empty_obj
</UL>

<P><STRONG><a name="[2a5]"></a>yaffs_free_raw_obj</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, yaffs_allocator.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = yaffs_free_raw_obj &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_add
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_free_obj
</UL>

<P><STRONG><a name="[2a6]"></a>yaffs_deinit_raw_tnodes_and_objs</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, yaffs_allocator.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = yaffs_deinit_raw_tnodes_and_objs &rArr; yaffs_deinit_raw_objs &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_free
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinit_raw_objs
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinit_raw_tnodes
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinit_tnodes_and_objs
</UL>

<P><STRONG><a name="[2a7]"></a>yaffs_init_raw_tnodes_and_objs</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, yaffs_allocator.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = yaffs_init_raw_tnodes_and_objs &rArr; yaffs_init_raw_objs &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_malloc
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_init_raw_objs
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_init_raw_tnodes
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_init_tnodes_and_objs
</UL>

<P><STRONG><a name="[318]"></a>yaffs_load_attribs</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, yaffs_attribs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_obj_details_loaded
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_chunk
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs1_scan
</UL>

<P><STRONG><a name="[32e]"></a>yaffs_load_attribs_oh</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, yaffs_attribs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
</UL>

<P><STRONG><a name="[2aa]"></a>yaffs_load_current_time</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, yaffs_attribs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = yaffs_load_current_time
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CurrentTime
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_parent
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_new_obj
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_attribs_init
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_flush_file
</UL>

<P><STRONG><a name="[2ac]"></a>yaffs_attribs_init</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, yaffs_attribs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = yaffs_attribs_init &rArr; yaffs_load_current_time
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_load_current_time
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_obj
</UL>

<P><STRONG><a name="[2b0]"></a>yaffs_set_attribs</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, yaffs_attribs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_resize_file
</UL>

<P><STRONG><a name="[2b3]"></a>yaffs_get_attribs</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, yaffs_attribs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_file_size
</UL>

<P><STRONG><a name="[2b7]"></a>yaffs_verify_chunk_bit_id</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, yaffs_bitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = yaffs_verify_chunk_bit_id &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_chunk_bit
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_set_chunk_bit
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_clear_chunk_bit
</UL>

<P><STRONG><a name="[2b8]"></a>yaffs_clear_chunk_bits</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, yaffs_bitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = yaffs_clear_chunk_bits &rArr; yaffs_block_bits &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_block_bits
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_backwards
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs1_scan
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_block_became_dirty
</UL>

<P><STRONG><a name="[2ba]"></a>yaffs_clear_chunk_bit</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, yaffs_bitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = yaffs_clear_chunk_bit &rArr; yaffs_verify_chunk_bit_id &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_chunk_bit_id
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_block_bits
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_gc
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chunk_del
</UL>

<P><STRONG><a name="[2bb]"></a>yaffs_set_chunk_bit</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, yaffs_bitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = yaffs_set_chunk_bit &rArr; yaffs_verify_chunk_bit_id &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_chunk_bit_id
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_block_bits
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_alloc_chunk
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_chunk
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_read
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_write
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs1_scan
</UL>

<P><STRONG><a name="[2bc]"></a>yaffs_check_chunk_bit</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, yaffs_bitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = yaffs_check_chunk_bit &rArr; yaffs_verify_chunk_bit_id &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_chunk_bit_id
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_block_bits
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_block
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_chunk_in_group
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_obj
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_gc
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chunk_del
</UL>

<P><STRONG><a name="[2bd]"></a>yaffs_still_some_chunks</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, yaffs_bitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = yaffs_still_some_chunks &rArr; yaffs_block_bits &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_block_bits
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_block
</UL>

<P><STRONG><a name="[2be]"></a>yaffs_count_chunk_bits</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, yaffs_bitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = yaffs_count_chunk_bits &rArr; yaffs_block_bits &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_hweight8
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_block_bits
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_blk
</UL>

<P><STRONG><a name="[2ca]"></a>yaffs2_checkpt_open</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, yaffs_checkptrw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = yaffs2_checkpt_open &rArr; yaffs_checkpt_erase &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_checkpt_erase
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_space_ok
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_init_chunk_hdr
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_malloc
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_data
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_wr_checkpt_data
</UL>

<P><STRONG><a name="[3f6]"></a>yaffs2_get_checkpt_sum</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, yaffs_checkptrw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = yaffs2_get_checkpt_sum
</UL>
<BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_sum
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_wr_checkpt_sum
</UL>

<P><STRONG><a name="[2cc]"></a>yaffs2_checkpt_wr</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, yaffs_checkptrw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = yaffs2_checkpt_wr &rArr; yaffs2_checkpt_flush_buffer &rArr; yaffs2_checkpt_find_erased_block &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_flush_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_wr_checkpt_sum
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_wr_checkpt_objs
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_wr_checkpt_tnodes
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_tnode_worker
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_wr_checkpt_dev
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_wr_checkpt_validity_marker
</UL>

<P><STRONG><a name="[2cd]"></a>yaffs2_checkpt_rd</STRONG> (Thumb, 312 bytes, Stack size 112 bytes, yaffs_checkptrw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = yaffs2_checkpt_rd &rArr; yaffs2_checkpt_find_block &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_find_block
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_check_chunk_hdr
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_chunk_offset
</UL>
<BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_sum
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_objs
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_tnodes
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_dev
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_validity_marker
</UL>

<P><STRONG><a name="[2ce]"></a>yaffs_checkpt_close</STRONG> (Thumb, 224 bytes, Stack size 16 bytes, yaffs_checkptrw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = yaffs_checkpt_close &rArr; yaffs2_checkpt_flush_buffer &rArr; yaffs2_checkpt_find_erased_block &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_flush_buffer
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_free
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_data
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_wr_checkpt_data
</UL>

<P><STRONG><a name="[2cf]"></a>yaffs2_checkpt_invalidate_stream</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, yaffs_checkptrw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = yaffs2_checkpt_invalidate_stream &rArr; yaffs_checkpt_erase &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_checkpt_erase
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_invalidate
</UL>

<P><STRONG><a name="[3a8]"></a>yaffs_ecc_calc</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, yaffs_ecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = yaffs_ecc_calc
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_compat_wr
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_chunk_nand
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_nand_drv_ReadChunk
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_nand_drv_WriteChunk
</UL>

<P><STRONG><a name="[2d2]"></a>yaffs_ecc_correct</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, yaffs_ecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = yaffs_ecc_correct
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_hweight8
</UL>
<BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_chunk_nand
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_nand_drv_ReadChunk
</UL>

<P><STRONG><a name="[3b1]"></a>yaffs_ecc_calc_other</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, yaffs_ecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = yaffs_ecc_calc_other
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unpack_tags2
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_pack_tags2
</UL>

<P><STRONG><a name="[2d3]"></a>yaffs_ecc_correct_other</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, yaffs_ecc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = yaffs_ecc_correct_other &rArr; yaffs_hweight32
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_hweight32
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_hweight8
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unpack_tags2
</UL>

<P><STRONG><a name="[2d7]"></a>yaffs_addr_to_chunk</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = yaffs_addr_to_chunk
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_prune_chunks
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_file
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_file_wr
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_file_rd
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_resize_file_down
</UL>

<P><STRONG><a name="[2db]"></a>yaffs_get_temp_buffer</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = yaffs_get_temp_buffer &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_malloc
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_xattrib_fetch
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_block
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_obj_details_loaded
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_chunk_written
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_chunk_erased
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_retire_block
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_obj
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_marshall_read
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_read
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_write
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_backwards
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_handle_hole
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs1_scan
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_file_wr
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_file_rd
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_resize_file_down
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_obj_name
</UL>

<P><STRONG><a name="[2dc]"></a>yaffs_release_temp_buffer</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = yaffs_release_temp_buffer &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_free
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_xattrib_fetch
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_block
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_obj_details_loaded
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_chunk_written
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_chunk_erased
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_retire_block
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_obj
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_marshall_read
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_read
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_write
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_backwards
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_handle_hole
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs1_scan
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_file_wr
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_file_rd
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_resize_file_down
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_obj_name
</UL>

<P><STRONG><a name="[2dd]"></a>yaffs_handle_chunk_error</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_handle_chunk_wr_error
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_chunk_tags_nand
</UL>

<P><STRONG><a name="[2ee]"></a>yaffs_skip_rest_of_block</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, yaffs_guts.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_write_new_chunk
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_handle_chunk_wr_error
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_add
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_backwards
</UL>

<P><STRONG><a name="[2e6]"></a>yaffs_check_ff</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, yaffs_guts.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_chunk_erased
</UL>

<P><STRONG><a name="[2e7]"></a>yaffs_block_became_dirty</STRONG> (Thumb, 838 bytes, Stack size 24 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = yaffs_block_became_dirty &rArr; yaffs_check_chunk_erased &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_chunk_erased
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_retire_block
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_clear_chunk_bits
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_skip_verification
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_erase_block
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_clear_oldest_dirty_seq
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_invalidate
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_block
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_backwards
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs1_scan
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chunk_del
</UL>

<P><STRONG><a name="[2e9]"></a>yaffs_chunk_del</STRONG> (Thumb, 332 bytes, Stack size 104 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = yaffs_chunk_del &rArr; yaffs_wr_chunk_tags_nand &rArr; yaffs_summary_add &rArr; yaffs_summary_write &rArr;  yaffs_wr_chunk_tags_nand (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_handle_chunk_update
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_chunk_bit
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_clear_chunk_bit
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_wr_chunk_tags_nand
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_update_oldest_dirty_seq
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_block_became_dirty
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_prune_chunks
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_wr_data_obj
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_process_chunk
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_generic_obj_del
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_write_new_chunk
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_handle_chunk_wr_error
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_chunk
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs1_scan
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_put_chunk_in_file
</UL>

<P><STRONG><a name="[a5e]"></a>yaffs_root</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_guts.o(.text), UNUSED)

<P><STRONG><a name="[a5f]"></a>yaffs_lost_n_found</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_guts.o(.text), UNUSED)

<P><STRONG><a name="[2f1]"></a>yaffs_check_alloc_available</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = yaffs_check_alloc_available &rArr; yaffs_calc_checkpt_blocks_required
</UL>
<BR>[Calls]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_calc_checkpt_blocks_required
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_alloc_chunk
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_handle_hole
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_file_wr
</UL>

<P><STRONG><a name="[2fb]"></a>yaffs_set_obj_name</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = yaffs_set_obj_name &rArr; yaffs_fix_null_name &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fix_null_name
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_calc_name_sum
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_obj
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_change_obj_name
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_set_obj_name_from_oh
</UL>

<P><STRONG><a name="[2fd]"></a>yaffs_set_obj_name_from_oh</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = yaffs_set_obj_name_from_oh &rArr; yaffs_set_obj_name &rArr; yaffs_fix_null_name &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_set_obj_name
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_obj_details_loaded
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_chunk
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs1_scan
</UL>

<P><STRONG><a name="[346]"></a>yaffs_max_file_size</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, yaffs_guts.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_new_obj
</UL>

<P><STRONG><a name="[2fe]"></a>yaffs_get_tnode</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = yaffs_get_tnode &rArr; yaffs_alloc_raw_tnode &rArr; yaffs_create_tnodes &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_alloc_raw_tnode
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_new_obj
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_tnodes
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_add_find_tnode_0
</UL>

<P><STRONG><a name="[306]"></a>yaffs_get_group_base</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = yaffs_get_group_base
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_soft_del_worker
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_del_file_chunk
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_file
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_put_chunk_in_file
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_chunk_in_file
</UL>

<P><STRONG><a name="[305]"></a>yaffs_find_tnode_0</STRONG> (Thumb, 250 bytes, Stack size 20 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = yaffs_find_tnode_0
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_del_file_chunk
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_file
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_chunk_in_file
</UL>

<P><STRONG><a name="[301]"></a>yaffs_add_find_tnode_0</STRONG> (Thumb, 294 bytes, Stack size 56 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = yaffs_add_find_tnode_0 &rArr; yaffs_get_tnode &rArr; yaffs_alloc_raw_tnode &rArr; yaffs_create_tnodes &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_free_tnode
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_tnode
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_tnodes
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_put_chunk_in_file
</UL>

<P><STRONG><a name="[304]"></a>yaffs_find_chunk_in_file</STRONG> (Thumb, 82 bytes, Stack size 112 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = yaffs_find_chunk_in_file &rArr; yaffs_find_chunk_in_group &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_chunk_in_group
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_tnode_0
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_group_base
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_data_obj
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_wr_data_obj
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_process_chunk
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_put_chunk_in_file
</UL>

<P><STRONG><a name="[309]"></a>yaffs_put_chunk_in_file</STRONG> (Thumb, 280 bytes, Stack size 184 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = yaffs_put_chunk_in_file &rArr; yaffs_chunk_del &rArr; yaffs_wr_chunk_tags_nand &rArr; yaffs_summary_add &rArr; yaffs_summary_write &rArr;  yaffs_wr_chunk_tags_nand (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_load_tnode_0
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_chunk_tags_nand
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_chunk_in_file
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_add_find_tnode_0
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_group_base
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chunk_del
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_wr_data_obj
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_process_chunk
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_chunk
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs1_scan
</UL>

<P><STRONG><a name="[30f]"></a>yaffs_add_obj_to_dir</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 576 + Unknown Stack Size
<LI>Call Chain = yaffs_add_obj_to_dir &rArr; yaffs_remove_obj_from_dir &rArr; yaffs_verify_obj_in_dir &rArr; yaffs_verify_obj &rArr; yaffs_verify_file &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_remove_obj_from_dir
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_add
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_obj_in_dir
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_dir
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_initial_dir
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fix_hanging_objs
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlink_worker
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_empty_dir_to_dir
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_obj
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_alloc_empty_obj
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_change_obj_name
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_chunk
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_obj_to_obj
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs1_scan
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_handle_shadowed_obj
</UL>

<P><STRONG><a name="[322]"></a>yaffs_oh_size_load</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_guts.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_process_chunk
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
</UL>

<P><STRONG><a name="[316]"></a>yaffs_clone_str</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = yaffs_clone_str &rArr; yaffsfs_malloc &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_malloc
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_obj
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_obj_details_loaded
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_chunk
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs1_scan
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_symlink_alias
</UL>

<P><STRONG><a name="[320]"></a>yaffs_find_by_number</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = yaffs_find_by_number
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_hash_fn
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_block
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_process_chunk
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs1_scan
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_link_fixup
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_handle_shadowed_obj
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_or_create_by_number
</UL>

<P><STRONG><a name="[2b2]"></a>yaffs_update_oh</STRONG> (Thumb, 636 bytes, Stack size 480 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1416 + Unknown Stack Size
<LI>Call Chain = yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_gc
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_obj_details_loaded
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_load_oh_from_name
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_apply_xattrib_mod
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_obj_cache_dirty
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_write_new_chunk
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_load_attribs_oh
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_oh
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_chunk_tags_nand
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_oh_size_load
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chunk_del
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_release_temp_buffer
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_temp_buffer
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_xattrib_mod
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_obj
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_parent
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_change_obj_name
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_resize_file
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_set_attribs
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_handle_hole
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs1_scan
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_flush_file
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_dirty_dirs
</UL>

<P><STRONG><a name="[331]"></a>yaffs_get_obj_name</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = yaffs_get_obj_name &rArr; yaffs_check_obj_details_loaded &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_load_name_from_oh
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_obj_details_loaded
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fix_null_name
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_chunk_tags_nand
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_release_temp_buffer
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_temp_buffer
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlink_worker
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_readdir_no_lock
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_by_name
</UL>

<P><STRONG><a name="[332]"></a>yaffs_find_by_name</STRONG> (Thumb, 326 bytes, Stack size 280 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 680 + Unknown Stack Size
<LI>Call Chain = yaffs_find_by_name &rArr; yaffs_get_obj_name &rArr; yaffs_check_obj_details_loaded &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_obj_details_loaded
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_calc_name_sum
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_obj_name
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_obj
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_change_obj_name
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mkdir_reldir
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindObject
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoFindDirectory
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rename_obj
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlinker
</UL>

<P><STRONG><a name="[338]"></a>yaffs_flush_whole_cache</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1184 + Unknown Stack Size
<LI>Call Chain = yaffs_flush_whole_cache &rArr; yaffs_flush_file_cache &rArr; yaffs_wr_data_obj &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_flush_file_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_format_common
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unmount2_common
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_remount_common
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_sync_common
</UL>

<P><STRONG><a name="[33d]"></a>yaffs_handle_defered_free</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, yaffs_guts.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_free_obj
</UL>

<P><STRONG><a name="[349]"></a>yaffs_find_or_create_by_number</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = yaffs_find_or_create_by_number &rArr; yaffs_new_obj &rArr; yaffs_alloc_empty_obj &rArr; yaffs_add_obj_to_dir &rArr; yaffs_remove_obj_from_dir &rArr; yaffs_verify_obj_in_dir &rArr; yaffs_verify_obj &rArr; yaffs_verify_file &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_new_obj
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_by_number
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_chunk
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_objs
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_obj_to_obj
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs1_scan
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_handle_shadowed_obj
</UL>

<P><STRONG><a name="[34b]"></a>yaffs_update_dirty_dirs</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, yaffs_guts.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_empty
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[34e]"></a>yaffs_is_non_empty_dir</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = yaffs_is_non_empty_dir
</UL>
<BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_empty
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlink_worker
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_dir
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rename_reldir
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rename_obj
</UL>

<P><STRONG><a name="[352]"></a>yaffs_resize_file_down</STRONG> (Thumb, 128 bytes, Stack size 48 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168 + Unknown Stack Size
<LI>Call Chain = yaffs_resize_file_down &rArr; yaffs_wr_data_obj &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_prune_chunks
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_data_obj
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_prune_tree
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_wr_data_obj
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_release_temp_buffer
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_temp_buffer
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_addr_to_chunk
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_resize_file
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_handle_hole
</UL>

<P><STRONG><a name="[2b1]"></a>yaffs_resize_file</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1544 + Unknown Stack Size
<LI>Call Chain = yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_flush_file_cache
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_gc
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_invalidate_whole_cache
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_handle_hole
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_resize_file_down
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_file
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlink_file_if_needed
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_set_attribs
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_ftruncate
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_truncate_reldir
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open_sharing_reldir
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_retype_obj
</UL>

<P><STRONG><a name="[356]"></a>yaffs_del_obj</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1608 + Unknown Stack Size
<LI>Call Chain = yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_file
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_dir
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_symlink
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_link
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_generic_obj_del
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_empty
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_strip_deleted_objs
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_obj
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_ReleaseInode
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs1_scan
</UL>

<P><STRONG><a name="[358]"></a>yaffs_create_file</STRONG> (Thumb, 48 bytes, Stack size 48 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1704 + Unknown Stack Size
<LI>Call Chain = yaffs_create_file &rArr; yaffs_create_obj &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open_sharing_reldir
</UL>

<P><STRONG><a name="[359]"></a>yaffs_create_dir</STRONG> (Thumb, 48 bytes, Stack size 48 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1704 + Unknown Stack Size
<LI>Call Chain = yaffs_create_dir &rArr; yaffs_create_obj &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mkdir_reldir
</UL>

<P><STRONG><a name="[35a]"></a>yaffs_create_special</STRONG> (Thumb, 48 bytes, Stack size 48 bytes, yaffs_guts.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_obj
</UL>

<P><STRONG><a name="[35b]"></a>yaffs_create_symlink</STRONG> (Thumb, 48 bytes, Stack size 48 bytes, yaffs_guts.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_symlink_reldir
</UL>

<P><STRONG><a name="[2ae]"></a>yaffs_get_equivalent_obj</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = yaffs_get_equivalent_obj &rArr; yaffs_check_obj_details_loaded &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_obj_details_loaded
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_file_size
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_readdir_no_lock
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoChMod
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoUtime
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoStat
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FollowLink
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindObject
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_GetInodeIdForObject
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindInodeIdForObject
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_symlink_alias
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_obj_type
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_obj_inode
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_obj_length
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_link_obj
</UL>

<P><STRONG><a name="[35c]"></a>yaffs_link_obj</STRONG> (Thumb, 54 bytes, Stack size 40 bytes, yaffs_guts.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_obj
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_equivalent_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_link_reldir
</UL>

<P><STRONG><a name="[35f]"></a>yaffs_bg_gc</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, yaffs_guts.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_gc
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[364]"></a>yaffs_set_xattrib</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, yaffs_guts.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_xattrib_mod
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fsetxattr
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_setxattr_reldir
</UL>

<P><STRONG><a name="[365]"></a>yaffs_remove_xattrib</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, yaffs_guts.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_xattrib_mod
</UL>
<BR>[Called By]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fremovexattr
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_removexattr_reldir
</UL>

<P><STRONG><a name="[366]"></a>yaffs_get_xattrib</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, yaffs_guts.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_xattrib_fetch
</UL>
<BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fgetxattr
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_getxattr_reldir
</UL>

<P><STRONG><a name="[367]"></a>yaffs_list_xattrib</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, yaffs_guts.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_xattrib_fetch
</UL>
<BR>[Called By]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_flistxattr
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_listxattr_reldir
</UL>

<P><STRONG><a name="[368]"></a>yaffs_file_rd</STRONG> (Thumb, 260 bytes, Stack size 72 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1264 + Unknown Stack Size
<LI>Call Chain = yaffs_file_rd &rArr; yaffs_grab_chunk_cache &rArr; yaffs_flush_file_cache &rArr; yaffs_wr_data_obj &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_data_obj
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_use_cache
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_chunk_cache
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_grab_chunk_cache
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_release_temp_buffer
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_temp_buffer
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_addr_to_chunk
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_do_read
</UL>

<P><STRONG><a name="[36a]"></a>yaffs_do_file_wr</STRONG> (Thumb, 622 bytes, Stack size 104 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1296 + Unknown Stack Size
<LI>Call Chain = yaffs_do_file_wr &rArr; yaffs_grab_chunk_cache &rArr; yaffs_flush_file_cache &rArr; yaffs_wr_data_obj &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_data_obj
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_invalidate_chunk_cache
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_use_cache
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_chunk_cache
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_grab_chunk_cache
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_wr_data_obj
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_alloc_available
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_release_temp_buffer
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_temp_buffer
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_addr_to_chunk
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_handle_hole
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_wr_file
</UL>

<P><STRONG><a name="[36b]"></a>yaffs_wr_file</STRONG> (Thumb, 46 bytes, Stack size 40 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1544 + Unknown Stack Size
<LI>Call Chain = yaffs_wr_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_handle_hole
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_file_wr
</UL>
<BR>[Called By]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_do_write
</UL>

<P><STRONG><a name="[36c]"></a>yaffs_flush_file</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1440 + Unknown Stack Size
<LI>Call Chain = yaffs_flush_file &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_flush_file_cache
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_load_current_time
</UL>
<BR>[Called By]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_close
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoChMod
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoUtime
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_Dofsync
</UL>

<P><STRONG><a name="[36e]"></a>yaffs_retype_obj</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1560 + Unknown Stack Size
<LI>Call Chain = yaffs_retype_obj &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_empty_dir_to_dir
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_free_tnode
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_empty
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_resize_file
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_free
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_chunk
</UL>

<P><STRONG><a name="[371]"></a>yaffs_unlinker</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, yaffs_guts.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlink_obj
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_by_name
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoUnlink_reldir
</UL>

<P><STRONG><a name="[372]"></a>yaffs_rename_obj</STRONG> (Thumb, 252 bytes, Stack size 48 bytes, yaffs_guts.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlink_obj
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_parent
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_change_obj_name
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_is_non_empty_dir
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_by_name
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rename_reldir
</UL>

<P><STRONG><a name="[373]"></a>yaffs_handle_shadowed_obj</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 664 + Unknown Stack Size
<LI>Call Chain = yaffs_handle_shadowed_obj &rArr; yaffs_find_or_create_by_number &rArr; yaffs_new_obj &rArr; yaffs_alloc_empty_obj &rArr; yaffs_add_obj_to_dir &rArr; yaffs_remove_obj_from_dir &rArr; yaffs_verify_obj_in_dir &rArr; yaffs_verify_obj &rArr; yaffs_verify_file &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_or_create_by_number
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_by_number
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_add_obj_to_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_chunk
</UL>

<P><STRONG><a name="[374]"></a>yaffs_link_fixup</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = yaffs_link_fixup &rArr; yaffs_find_by_number
</UL>
<BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_add
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_by_number
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_objs
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_backwards
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs1_scan
</UL>

<P><STRONG><a name="[37a]"></a>yaffs_get_obj_length</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = yaffs_get_obj_length &rArr; yaffs_get_equivalent_obj &rArr; yaffs_check_obj_details_loaded &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_equivalent_obj
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_lseek
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoStat
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_do_write
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_do_read
</UL>

<P><STRONG><a name="[445]"></a>yaffs_get_obj_link_count</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, yaffs_guts.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoStat
</UL>

<P><STRONG><a name="[37b]"></a>yaffs_get_obj_inode</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, yaffs_guts.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_equivalent_obj
</UL>

<P><STRONG><a name="[37c]"></a>yaffs_get_obj_type</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, yaffs_guts.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_equivalent_obj
</UL>

<P><STRONG><a name="[37d]"></a>yaffs_get_symlink_alias</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, yaffs_guts.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_equivalent_obj
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_clone_str
</UL>

<P><STRONG><a name="[382]"></a>yaffs_guts_ll_init</STRONG> (Thumb, 340 bytes, Stack size 8 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = yaffs_guts_ll_init &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_dev_fns
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_init_nand
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_initialise
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_format_dev
</UL>

<P><STRONG><a name="[384]"></a>yaffs_guts_format_dev</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = yaffs_guts_format_dev &rArr; yaffs_guts_ll_init &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_query_init_block_state
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_erase_block
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_ll_init
</UL>
<BR>[Called By]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_format_common
</UL>

<P><STRONG><a name="[386]"></a>yaffs_deinitialise</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = yaffs_deinitialise &rArr; yaffs_deinit_tnodes_and_objs &rArr; yaffs_deinit_raw_tnodes_and_objs &rArr; yaffs_deinit_raw_objs &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinit_blocks
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinit_tnodes_and_objs
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_free
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_deinit
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinit_nand
</UL>
<BR>[Called By]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_format_common
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unmount2_common
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_initialise
</UL>

<P><STRONG><a name="[389]"></a>yaffs_guts_initialise</STRONG> (Thumb, 1194 bytes, Stack size 32 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1952 + Unknown Stack Size
<LI>Call Chain = yaffs_guts_initialise &rArr; yaffs_empty_l_n_f &rArr; yaffs_del_dir_contents &rArr;  yaffs_del_dir_contents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_initial_dir
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_empty_l_n_f
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fix_hanging_objs
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_strip_deleted_objs
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_init_blocks
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinit_blocks
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_init_tnodes_and_objs
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_obj_details_loaded
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinit_tnodes_and_objs
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_init_tmp_buffers
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_shifts
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calc_shifts_ceiling
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_malloc
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_free_chunks
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_blocks
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_init
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_backwards
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_restore
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_invalidate
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs1_scan
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinitialise
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_ll_init
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_format_common
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mount_common
</UL>

<P><STRONG><a name="[3de]"></a>yaffs_count_free_chunks</STRONG> (Thumb, 86 bytes, Stack size 12 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = yaffs_count_free_chunks
</UL>
<BR>[Called By]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_free_chunks
</UL>

<P><STRONG><a name="[392]"></a>yaffs_get_n_free_chunks</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, yaffs_guts.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_calc_checkpt_blocks_required
</UL>
<BR>[Called By]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_freespace_common
</UL>

<P><STRONG><a name="[3e1]"></a>yaffs_oh_to_size</STRONG> (Thumb, 44 bytes, Stack size 20 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = yaffs_oh_to_size
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_chunk
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs1_scan
</UL>

<P><STRONG><a name="[a60]"></a>yaffs_count_blocks_by_state</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, yaffs_guts.o(.text), UNUSED)

<P><STRONG><a name="[2bf]"></a>yaffs_hweight8</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, yaffs_hweight.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_hweight32
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_ecc_correct_other
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_ecc_correct
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_count_chunk_bits
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_compat_query_block
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_compat_rd
</UL>

<P><STRONG><a name="[2d4]"></a>yaffs_hweight32</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, yaffs_hweight.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = yaffs_hweight32
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_hweight8
</UL>
<BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_ecc_correct_other
</UL>

<P><STRONG><a name="[397]"></a>yaffs_k9f4g08u0b_install_drv</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, yaffs_k9f4g08u0b.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = yaffs_k9f4g08u0b_install_drv &rArr; yaffs_nand_install_drv &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_nand_install_drv
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_add_device
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_start_up
</UL>

<P><STRONG><a name="[313]"></a>nval_del</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, yaffs_nameval.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = nval_del &rArr; nval_find &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_find
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_apply_xattrib_mod
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_set
</UL>

<P><STRONG><a name="[312]"></a>nval_set</STRONG> (Thumb, 178 bytes, Stack size 48 bytes, yaffs_nameval.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = nval_set &rArr; nval_del &rArr; nval_find &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_used
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_find
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_del
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_apply_xattrib_mod
</UL>

<P><STRONG><a name="[362]"></a>nval_get</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, yaffs_nameval.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_find
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_xattrib_fetch
</UL>

<P><STRONG><a name="[363]"></a>nval_list</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, yaffs_nameval.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_xattrib_fetch
</UL>

<P><STRONG><a name="[314]"></a>nval_hasvalues</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, yaffs_nameval.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nval_hasvalues &rArr; nval_used
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_used
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_xattrib_fetch
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_apply_xattrib_mod
</UL>

<P><STRONG><a name="[2e5]"></a>yaffs_rd_chunk_tags_nand</STRONG> (Thumb, 106 bytes, Stack size 104 bytes, yaffs_nand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_chunk_offset
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_handle_chunk_error
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_xattrib_fetch
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_data_obj
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_process_chunk
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_obj_details_loaded
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_chunk_in_group
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_chunk_written
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_chunk_erased
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_chunk
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_obj
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_file
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_read
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs1_scan
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_obj_name
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_put_chunk_in_file
</UL>

<P><STRONG><a name="[2eb]"></a>yaffs_wr_chunk_tags_nand</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, yaffs_nand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = yaffs_wr_chunk_tags_nand &rArr; yaffs_summary_add &rArr; yaffs_summary_write &rArr;  yaffs_wr_chunk_tags_nand (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_add
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_chunk_offset
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_write_new_chunk
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_write
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chunk_del
</UL>

<P><STRONG><a name="[2e1]"></a>yaffs_mark_bad</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, yaffs_nand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = yaffs_mark_bad
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_retire_block
</UL>

<P><STRONG><a name="[385]"></a>yaffs_query_init_block_state</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, yaffs_nand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = yaffs_query_init_block_state
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_backwards
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs1_scan
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_format_dev
</UL>

<P><STRONG><a name="[2e2]"></a>yaffs_erase_block</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, yaffs_nand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = yaffs_erase_block
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_retire_block
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_format_dev
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_block_became_dirty
</UL>

<P><STRONG><a name="[383]"></a>yaffs_init_nand</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, yaffs_nand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = yaffs_init_nand
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_ll_init
</UL>

<P><STRONG><a name="[388]"></a>yaffs_deinit_nand</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, yaffs_nand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = yaffs_deinit_nand
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinitialise
</UL>

<P><STRONG><a name="[399]"></a>yaffs_nand_install_drv</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, yaffs_nand_drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = yaffs_nand_install_drv &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_k9f4g08u0b_install_drv
</UL>

<P><STRONG><a name="[3ae]"></a>yaffs_pack_tags2_tags_only</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, yaffs_packedtags2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = yaffs_pack_tags2_tags_only &rArr; yaffs_dump_tags2 &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_tags_extra_packable
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_dump_tags2
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_dump_packed_tags2_tags_only
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_marshall_write
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_pack_tags2
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_add
</UL>

<P><STRONG><a name="[3b0]"></a>yaffs_pack_tags2</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, yaffs_packedtags2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = yaffs_pack_tags2 &rArr; yaffs_pack_tags2_tags_only &rArr; yaffs_dump_tags2 &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_ecc_calc_other
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_pack_tags2_tags_only
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_marshall_write
</UL>

<P><STRONG><a name="[3b2]"></a>yaffs_unpack_tags2_tags_only</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, yaffs_packedtags2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = yaffs_unpack_tags2_tags_only &rArr; yaffs_dump_tags2 &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_dump_tags2
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_dump_packed_tags2_tags_only
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_marshall_read
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_fetch
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unpack_tags2
</UL>

<P><STRONG><a name="[3b3]"></a>yaffs_unpack_tags2</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, yaffs_packedtags2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = yaffs_unpack_tags2 &rArr; yaffs_unpack_tags2_tags_only &rArr; yaffs_dump_tags2 &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_ecc_correct_other
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_ecc_calc_other
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unpack_tags2_tags_only
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_dump_tags2
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_dump_packed_tags2
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_marshall_read
</UL>

<P><STRONG><a name="[3b6]"></a>yaffs_qsort</STRONG> (Thumb, 746 bytes, Stack size 80 bytes, yaffs_qsort.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + In Cycle
<LI>Call Chain = yaffs_qsort &rArr;  yaffs_qsort (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_qsort
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;med3
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swapfunc
</UL>
<BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_qsort
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_backwards
</UL>

<P><STRONG><a name="[387]"></a>yaffs_summary_deinit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, yaffs_summary.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = yaffs_summary_deinit &rArr; yaffsfs_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_free
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_init
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinitialise
</UL>

<P><STRONG><a name="[38c]"></a>yaffs_summary_init</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, yaffs_summary.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = yaffs_summary_init &rArr; yaffsfs_malloc &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_malloc
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_clear
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_initialise
</UL>

<P><STRONG><a name="[3be]"></a>yaffs_summary_read</STRONG> (Thumb, 348 bytes, Stack size 152 bytes, yaffs_summary.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = yaffs_summary_read &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_set_chunk_bit
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_sum
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_chunk_tags_nand
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_release_temp_buffer
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_temp_buffer
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_backwards
</UL>

<P><STRONG><a name="[3a3]"></a>yaffs_summary_add</STRONG> (Thumb, 126 bytes, Stack size 48 bytes, yaffs_summary.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = yaffs_summary_add &rArr; yaffs_summary_write &rArr;  yaffs_wr_chunk_tags_nand (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_write
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_clear
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_pack_tags2_tags_only
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_skip_rest_of_block
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_wr_chunk_tags_nand
</UL>

<P><STRONG><a name="[3bf]"></a>yaffs_summary_fetch</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, yaffs_summary.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = yaffs_summary_fetch &rArr; yaffs_unpack_tags2_tags_only &rArr; yaffs_dump_tags2 &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unpack_tags2_tags_only
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_chunk
</UL>

<P><STRONG><a name="[326]"></a>yaffs_summary_gc</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, yaffs_summary.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = yaffs_summary_gc &rArr; yaffs_check_chunk_bit &rArr; yaffs_verify_chunk_bit_id &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_chunk_bit
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_clear_chunk_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_block
</UL>

<P><STRONG><a name="[3c3]"></a>yaffs_calc_tags_ecc</STRONG> (Thumb, 60 bytes, Stack size 20 bytes, yaffs_tagscompat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = yaffs_calc_tags_ecc
</UL>
<BR>[Called By]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_tags_ecc
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_load_tags_to_spare
</UL>

<P><STRONG><a name="[3c2]"></a>yaffs_check_tags_ecc</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, yaffs_tagscompat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = yaffs_check_tags_ecc &rArr; yaffs_calc_tags_ecc
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_calc_tags_ecc
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_tags_from_spare
</UL>

<P><STRONG><a name="[37f]"></a>yaffs_tags_compat_install</STRONG> (Thumb, 358 bytes, Stack size 0 bytes, yaffs_tagscompat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_dev_fns
</UL>

<P><STRONG><a name="[380]"></a>yaffs_tags_marshall_install</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, yaffs_tagsmarshall.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_dev_fns
</UL>

<P><STRONG><a name="[3ce]"></a>yaffsfs_SetError</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, yaffs_ucos_glue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = yaffsfs_SetError
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_set_error
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_n_handles_reldir
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mknod_reldir
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_link_reldir
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_readlink_reldir
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_symlink_reldir
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_readdir_no_lock
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_inodecount_common
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_totalspace_common
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_freespace_common
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_format_common
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unmount2_common
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_remount_common
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_sync_common
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mount_common
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rmdir_reldir
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mkdir_reldir
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fchmod
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chmod_reldir
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_access_reldir
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fremovexattr
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_flistxattr
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fgetxattr
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fsetxattr
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_futime
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_utime_reldir
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fstat
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rename_reldir
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_lseek
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_ftruncate
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_truncate_reldir
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_close
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open_sharing_reldir
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_dup
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_removexattr_reldir
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_listxattr_reldir
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_getxattr_reldir
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_setxattr_reldir
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoUtime
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoStatOrLStat_reldir
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoUnlink_reldir
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_do_write
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_do_read
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_Dofsync
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_opendir_reldir_no_lock
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckNameLength
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_closedir_no_lock
</UL>

<P><STRONG><a name="[4b9]"></a>yaffsfs_GetLastError</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, yaffs_ucos_glue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_error
</UL>

<P><STRONG><a name="[40f]"></a>yaffsfs_CheckMemRegion</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, yaffs_ucos_glue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_n_handles_reldir
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_link_reldir
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_readlink_reldir
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_symlink_reldir
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_inodecount_common
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_totalspace_common
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_freespace_common
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unmount2_common
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_remount_common
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_sync_common
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mount_common
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rmdir_reldir
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mkdir_reldir
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chmod_reldir
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_access_reldir
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fremovexattr
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_flistxattr
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fgetxattr
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fsetxattr
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fstat
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rename_reldir
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_truncate_reldir
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open_sharing_reldir
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_rewinddir_no_lock
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_removexattr_reldir
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_listxattr_reldir
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_getxattr_reldir
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_setxattr_reldir
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoStatOrLStat_reldir
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoUnlink_reldir
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_do_write
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_do_read
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_opendir_reldir_no_lock
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_closedir_no_lock
</UL>

<P><STRONG><a name="[3d0]"></a>yaffsfs_Lock</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, yaffs_ucos_glue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = yaffsfs_Lock &rArr; OSSemPend &rArr; OS_EventTaskWait
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Called By]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_link_reldir
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_readlink_reldir
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_symlink_reldir
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_closedir
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rewinddir_fd
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_readdir_fd
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rewinddir
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_readdir
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_opendir_reldir
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_inodecount_common
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_totalspace_common
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_freespace_common
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_format_common
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unmount2_common
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_remount_common
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_sync_common
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mount_common
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mkdir_reldir
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fchmod
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chmod_reldir
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_access_reldir
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fremovexattr
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_flistxattr
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fgetxattr
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fsetxattr
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_futime
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_utime_reldir
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fstat
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rename_reldir
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_lseek
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_ftruncate
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_truncate_reldir
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_close
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open_sharing_reldir
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_dup
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_removexattr_reldir
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_listxattr_reldir
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_getxattr_reldir
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_setxattr_reldir
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoStatOrLStat_reldir
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoUnlink_reldir
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_do_write
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_do_read
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_Dofsync
</UL>

<P><STRONG><a name="[3d1]"></a>yaffsfs_Unlock</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, yaffs_ucos_glue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = yaffsfs_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_link_reldir
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_readlink_reldir
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_symlink_reldir
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_closedir
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rewinddir_fd
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_readdir_fd
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rewinddir
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_readdir
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_opendir_reldir
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_inodecount_common
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_totalspace_common
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_freespace_common
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_format_common
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unmount2_common
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_remount_common
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_sync_common
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mount_common
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mkdir_reldir
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fchmod
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chmod_reldir
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_access_reldir
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fremovexattr
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_flistxattr
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fgetxattr
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fsetxattr
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_futime
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_utime_reldir
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fstat
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rename_reldir
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_lseek
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_ftruncate
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_truncate_reldir
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_close
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open_sharing_reldir
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_dup
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_removexattr_reldir
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_listxattr_reldir
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_getxattr_reldir
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_setxattr_reldir
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoStatOrLStat_reldir
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoUnlink_reldir
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_do_write
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_do_read
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_Dofsync
</UL>

<P><STRONG><a name="[3d2]"></a>yaffsfs_LockInit</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, yaffs_ucos_glue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = yaffsfs_LockInit &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_OSInitialisation
</UL>

<P><STRONG><a name="[2ab]"></a>yaffsfs_CurrentTime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, yaffs_ucos_glue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_load_current_time
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoUtime
</UL>

<P><STRONG><a name="[29c]"></a>yaffsfs_malloc</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, yaffs_ucos_glue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = yaffsfs_malloc &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_init_blocks
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_init_tmp_buffers
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_open
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_init_raw_tnodes_and_objs
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_free_objs
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_tnodes
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_alt_dir_path
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_init
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_backwards
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs1_scan
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_initialise
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_clone_str
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_temp_buffer
</UL>

<P><STRONG><a name="[299]"></a>yaffsfs_free</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, yaffs_ucos_glue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = yaffsfs_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinit_blocks
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_obj
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_symlink
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_checkpt_close
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinit_raw_tnodes_and_objs
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_free_objs
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinit_raw_objs
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinit_raw_tnodes
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rmdir_reldir
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mkdir_reldir
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rename_reldir
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_deinit
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_backwards
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs1_scan
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinitialise
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_retype_obj
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_release_temp_buffer
</UL>

<P><STRONG><a name="[3d3]"></a>yaffsfs_OSInitialisation</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, yaffs_ucos_glue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = yaffsfs_OSInitialisation &rArr; yaffsfs_LockInit &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_LockInit
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_start_up
</UL>

<P><STRONG><a name="[298]"></a>yaffs_bug_fn</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, yaffs_ucos_glue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_dir_contents
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_wr_data_obj
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_change_obj_name
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_free_obj
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_chunk_bit_id
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_block_bits
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_init_raw_tnodes_and_objs
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinit_raw_tnodes_and_objs
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_free_raw_obj
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_alloc_raw_obj
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_free_raw_tnode
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_alloc_raw_tnode
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_free_objs
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinit_raw_objs
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_init_raw_objs
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_tnodes
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_init_raw_tnodes
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinit_raw_tnodes
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_marshall_read
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_marshall_write
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_nand_drv_MarkBad
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_wr_chunk_tags_nand
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_obj_in_dir
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_dir
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rename_obj
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_file_wr
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_by_name
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_add_obj_to_dir
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_put_chunk_in_file
</UL>

<P><STRONG><a name="[2e8]"></a>yaffs_skip_verification</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, yaffs_verify.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_process_chunk
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_objects
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_obj
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_special
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_symlink
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_link
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_file
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_oh
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_obj_in_dir
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_free_chunks
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_blocks
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_blk
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_block_became_dirty
</UL>

<P><STRONG><a name="[327]"></a>yaffs_verify_blk</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, yaffs_verify.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = yaffs_verify_blk &rArr; yaffs_count_chunk_bits &rArr; yaffs_block_bits &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_count_chunk_bits
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_skip_verification
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_block
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_collected_blk
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_blocks
</UL>

<P><STRONG><a name="[328]"></a>yaffs_verify_collected_blk</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, yaffs_verify.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = yaffs_verify_collected_blk &rArr; yaffs_verify_blk &rArr; yaffs_count_chunk_bits &rArr; yaffs_block_bits &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_blk
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_block
</UL>

<P><STRONG><a name="[391]"></a>yaffs_verify_blocks</STRONG> (Thumb, 322 bytes, Stack size 64 bytes, yaffs_verify.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = yaffs_verify_blocks &rArr; yaffs_verify_blk &rArr; yaffs_count_chunk_bits &rArr; yaffs_block_bits &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_blk
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_skip_verification
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_checkpoint_save
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_restore
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_initialise
</UL>

<P><STRONG><a name="[323]"></a>yaffs_verify_oh</STRONG> (Thumb, 1050 bytes, Stack size 24 bytes, yaffs_verify.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = yaffs_verify_oh &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_skip_verification
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_process_chunk
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_obj
</UL>

<P><STRONG><a name="[3d6]"></a>yaffs_verify_file</STRONG> (Thumb, 216 bytes, Stack size 136 bytes, yaffs_verify.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = yaffs_verify_file &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_skip_nand_verification
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_skip_verification
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_chunk_tags_nand
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_tnode_0
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_group_base
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_addr_to_chunk
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_obj
</UL>

<P><STRONG><a name="[3d8]"></a>yaffs_verify_link</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, yaffs_verify.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = yaffs_verify_link
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_skip_verification
</UL>
<BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_obj
</UL>

<P><STRONG><a name="[3d9]"></a>yaffs_verify_symlink</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, yaffs_verify.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = yaffs_verify_symlink
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_skip_verification
</UL>
<BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_obj
</UL>

<P><STRONG><a name="[3da]"></a>yaffs_verify_special</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, yaffs_verify.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = yaffs_verify_special
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_skip_verification
</UL>
<BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_obj
</UL>

<P><STRONG><a name="[30d]"></a>yaffs_verify_obj_in_dir</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, yaffs_verify.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = yaffs_verify_obj_in_dir &rArr; yaffs_verify_obj &rArr; yaffs_verify_file &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_obj
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_skip_verification
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_remove_obj_from_dir
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_dir
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_add_obj_to_dir
</UL>

<P><STRONG><a name="[30e]"></a>yaffs_verify_dir</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, yaffs_verify.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = yaffs_verify_dir &rArr;  yaffs_verify_obj_in_dir (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_skip_full_verification
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_obj_in_dir
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_remove_obj_from_dir
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_obj
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_add_obj_to_dir
</UL>

<P><STRONG><a name="[3db]"></a>yaffs_verify_obj</STRONG> (Thumb, 852 bytes, Stack size 120 bytes, yaffs_verify.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = yaffs_verify_obj &rArr; yaffs_verify_file &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_chunk_bit
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_special
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_symlink
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_link
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_file
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_skip_nand_verification
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_oh
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_dir
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_skip_verification
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_chunk_tags_nand
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_release_temp_buffer
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_temp_buffer
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_objects
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_obj_in_dir
</UL>

<P><STRONG><a name="[3dd]"></a>yaffs_verify_objects</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, yaffs_verify.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = yaffs_verify_objects &rArr; yaffs_verify_obj &rArr; yaffs_verify_file &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_obj
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_skip_verification
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_checkpoint_save
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_restore
</UL>

<P><STRONG><a name="[390]"></a>yaffs_verify_free_chunks</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, yaffs_verify.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = yaffs_verify_free_chunks &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_skip_verification
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_count_free_chunks
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_checkpoint_save
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_restore
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_initialise
</UL>

<P><STRONG><a name="[336]"></a>yaffs_verify_file_sane</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, yaffs_verify.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_wr_data_obj
</UL>

<P><STRONG><a name="[38f]"></a>yaffs1_scan</STRONG> (Thumb, 1618 bytes, Stack size 168 bytes, yaffs_yaffs1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1776 + Unknown Stack Size
<LI>Call Chain = yaffs1_scan &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_set_chunk_bit
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_clear_chunk_bits
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_load_attribs
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_malloc
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_free
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_add
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_chunk_tags_nand
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_query_init_block_state
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_oh_to_size
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_link_fixup
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_obj
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_or_create_by_number
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_by_number
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_clone_str
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_add_obj_to_dir
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_put_chunk_in_file
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_set_obj_name_from_oh
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chunk_del
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_block_became_dirty
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_release_temp_buffer
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_temp_buffer
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_initialise
</UL>

<P><STRONG><a name="[3e5]"></a>yaffs_calc_oldest_dirty_seq</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = yaffs_calc_oldest_dirty_seq
</UL>
<BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_find_oldest_dirty_seq
</UL>

<P><STRONG><a name="[32b]"></a>yaffs2_find_oldest_dirty_seq</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = yaffs2_find_oldest_dirty_seq &rArr; yaffs_calc_oldest_dirty_seq
</UL>
<BR>[Calls]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_calc_oldest_dirty_seq
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_gc_block
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_block_ok_for_gc
</UL>

<P><STRONG><a name="[2e0]"></a>yaffs2_clear_oldest_dirty_seq</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_retire_block
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_block_became_dirty
</UL>

<P><STRONG><a name="[2ea]"></a>yaffs2_update_oldest_dirty_seq</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = yaffs2_update_oldest_dirty_seq
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_soft_del_chunk
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chunk_del
</UL>

<P><STRONG><a name="[32a]"></a>yaffs_block_ok_for_gc</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = yaffs_block_ok_for_gc &rArr; yaffs2_find_oldest_dirty_seq &rArr; yaffs_calc_oldest_dirty_seq
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_find_oldest_dirty_seq
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_gc_block
</UL>

<P><STRONG><a name="[32d]"></a>yaffs2_find_refresh_block</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = yaffs2_find_refresh_block &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_gc
</UL>

<P><STRONG><a name="[3e6]"></a>yaffs2_checkpt_required</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_wr_checkpt_data
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_calc_checkpt_blocks_required
</UL>

<P><STRONG><a name="[2f2]"></a>yaffs_calc_checkpt_blocks_required</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = yaffs_calc_checkpt_blocks_required
</UL>
<BR>[Calls]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_required
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_gc
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_n_free_chunks
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_alloc_available
</UL>

<P><STRONG><a name="[2df]"></a>yaffs2_checkpt_invalidate</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = yaffs2_checkpt_invalidate &rArr; yaffs2_checkpt_invalidate_stream &rArr; yaffs_checkpt_erase &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_invalidate_stream
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_write_new_chunk
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_retire_block
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_checkpoint_save
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_initialise
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_block_became_dirty
</UL>

<P><STRONG><a name="[3fa]"></a>yaffs_checkpoint_save</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = yaffs_checkpoint_save &rArr; yaffs_verify_objects &rArr; yaffs_verify_obj &rArr; yaffs_verify_file &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_wr_checkpt_data
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_objects
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_free_chunks
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_blocks
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_invalidate
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_format_common
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unmount2_common
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_remount_common
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_sync_common
</UL>

<P><STRONG><a name="[38d]"></a>yaffs2_checkpt_restore</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 768 + Unknown Stack Size
<LI>Call Chain = yaffs2_checkpt_restore &rArr; yaffs2_rd_checkpt_data &rArr; yaffs2_rd_checkpt_objs &rArr; yaffs2_checkpt_obj_to_obj &rArr; yaffs_find_or_create_by_number &rArr; yaffs_new_obj &rArr; yaffs_alloc_empty_obj &rArr; yaffs_add_obj_to_dir &rArr; yaffs_remove_obj_from_dir &rArr; yaffs_verify_obj_in_dir &rArr; yaffs_verify_obj &rArr; yaffs_verify_file &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_data
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_objects
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_free_chunks
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_blocks
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_initialise
</UL>

<P><STRONG><a name="[353]"></a>yaffs2_handle_hole</STRONG> (Thumb, 320 bytes, Stack size 88 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1504 + Unknown Stack Size
<LI>Call Chain = yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_file_wr
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_resize_file_down
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_alloc_available
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_release_temp_buffer
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_temp_buffer
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_resize_file
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_wr_file
</UL>

<P><STRONG><a name="[38e]"></a>yaffs2_scan_backwards</STRONG> (Thumb, 882 bytes, Stack size 104 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1840 + Unknown Stack Size
<LI>Call Chain = yaffs2_scan_backwards &rArr; yaffs2_scan_chunk &rArr; yaffs_retype_obj &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_clear_chunk_bits
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_malloc
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_free
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_chunk
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_read
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_qsort
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_query_init_block_state
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_link_fixup
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_block_became_dirty
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_skip_rest_of_block
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_release_temp_buffer
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_temp_buffer
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_initialise
</UL>

<P><STRONG><a name="[3fe]"></a>yaffs_start_up</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, yaffscfg2k.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = yaffs_start_up &rArr; yaffs_k9f4g08u0b_install_drv &rArr; yaffs_nand_install_drv &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_OSInitialisation
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_k9f4g08u0b_install_drv
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStart
</UL>

<P><STRONG><a name="[a61]"></a>yaffs_set_trace</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffsfs.o(.text), UNUSED)

<P><STRONG><a name="[a62]"></a>yaffs_get_trace</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, yaffsfs.o(.text), UNUSED)

<P><STRONG><a name="[41f]"></a>yaffs_dup</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_NewHandle
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToFileDes
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToPointer
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
</UL>

<P><STRONG><a name="[424]"></a>yaffs_open_sharing_reldir</STRONG> (Thumb, 1046 bytes, Stack size 128 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1832 + Unknown Stack Size
<LI>Call Chain = yaffs_open_sharing_reldir &rArr; yaffs_create_file &rArr; yaffs_create_obj &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_resize_file
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_opendir_reldir_no_lock
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_TooManyObjects
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FollowLink
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindObject
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindDirectory
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_PutHandle
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_NewHandleAndFileDes
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_GetInodeIdForObject
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToFileDes
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_file
</UL>
<BR>[Called By]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open_reldev
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open_reldir
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open_sharing
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open_sharing_reldev
</UL>

<P><STRONG><a name="[426]"></a>yaffs_open_sharing_reldev</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open_sharing_reldir
</UL>

<P><STRONG><a name="[427]"></a>yaffs_open_sharing</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open_sharing_reldir
</UL>

<P><STRONG><a name="[428]"></a>yaffs_open_reldir</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1856 + Unknown Stack Size
<LI>Call Chain = yaffs_open_reldir &rArr; yaffs_open_sharing_reldir &rArr; yaffs_create_file &rArr; yaffs_create_obj &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open_sharing_reldir
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open
</UL>

<P><STRONG><a name="[429]"></a>yaffs_open_reldev</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open_sharing_reldir
</UL>

<P><STRONG><a name="[42a]"></a>yaffs_open</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1872 + Unknown Stack Size
<LI>Call Chain = yaffs_open &rArr; yaffs_open_reldir &rArr; yaffs_open_sharing_reldir &rArr; yaffs_create_file &rArr; yaffs_create_obj &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open_reldir
</UL>
<BR>[Called By]<UL><LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Init
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ConfigFile
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Create
</UL>

<P><STRONG><a name="[42c]"></a>yaffs_fsync</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_Dofsync
</UL>
<BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_flush
</UL>

<P><STRONG><a name="[42d]"></a>yaffs_flush</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fsync
</UL>

<P><STRONG><a name="[42e]"></a>yaffs_fdatasync</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_Dofsync
</UL>

<P><STRONG><a name="[42f]"></a>yaffs_close</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1696 + Unknown Stack Size
<LI>Call Chain = yaffs_close &rArr; yaffsfs_PutHandle &rArr; yaffsfs_PutFileDes &rArr; yaffsfs_PutInode &rArr; yaffsfs_ReleaseInode &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_PutHandle
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToObject
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToFileDes
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToPointer
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_flush_file
</UL>
<BR>[Called By]<UL><LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Init
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Create
</UL>

<P><STRONG><a name="[431]"></a>yaffs_read</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1784 + Unknown Stack Size
<LI>Call Chain = yaffs_read &rArr; yaffsfs_do_read &rArr; yaffsfs_PutHandle &rArr; yaffsfs_PutFileDes &rArr; yaffsfs_PutInode &rArr; yaffsfs_ReleaseInode &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_do_read
</UL>
<BR>[Called By]<UL><LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ConfigFile
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Get_Config_Tristate
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Get_Config_Accumulate
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Get_Config_Switch
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Get_Config_Analogue
</UL>

<P><STRONG><a name="[432]"></a>yaffs_pread</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_do_read
</UL>

<P><STRONG><a name="[434]"></a>yaffs_write</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1784 + Unknown Stack Size
<LI>Call Chain = yaffs_write &rArr; yaffsfs_do_write &rArr; yaffsfs_PutHandle &rArr; yaffsfs_PutFileDes &rArr; yaffsfs_PutInode &rArr; yaffsfs_ReleaseInode &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_do_write
</UL>
<BR>[Called By]<UL><LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Set_Config_Analogue
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Set_Config_Switch
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Set_Config_Accumulate
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Set_Config_Tristate
</UL>

<P><STRONG><a name="[435]"></a>yaffs_pwrite</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_do_write
</UL>

<P><STRONG><a name="[436]"></a>yaffs_truncate_reldir</STRONG> (Thumb, 292 bytes, Stack size 56 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_resize_file
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FollowLink
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindObject
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
</UL>
<BR>[Called By]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_truncate
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_truncate_reldev
</UL>

<P><STRONG><a name="[437]"></a>yaffs_truncate_reldev</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_truncate_reldir
</UL>

<P><STRONG><a name="[438]"></a>yaffs_truncate</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_truncate_reldir
</UL>

<P><STRONG><a name="[439]"></a>yaffs_ftruncate</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_resize_file
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToObject
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToFileDes
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
</UL>

<P><STRONG><a name="[43a]"></a>yaffs_lseek</STRONG> (Thumb, 262 bytes, Stack size 64 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToObject
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToFileDes
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_obj_length
</UL>

<P><STRONG><a name="[43c]"></a>yaffs_unlink_reldir</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoUnlink_reldir
</UL>
<BR>[Called By]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlink
</UL>

<P><STRONG><a name="[43d]"></a>yaffs_unlink_reldev</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoUnlink_reldir
</UL>

<P><STRONG><a name="[43e]"></a>yaffs_unlink</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlink_reldir
</UL>

<P><STRONG><a name="[43f]"></a>yaffs_rename_reldir</STRONG> (Thumb, 560 bytes, Stack size 96 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_free
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rename_dir_over_file
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rename_file_over_dir
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindObject
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindDirectory
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_alt_dir_path
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rename_obj
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_is_non_empty_dir
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rename
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rename_reldev
</UL>

<P><STRONG><a name="[442]"></a>yaffs_rename_reldev</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rename_reldir
</UL>

<P><STRONG><a name="[443]"></a>yaffs_rename</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rename_reldir
</UL>

<P><STRONG><a name="[448]"></a>yaffs_stat_reldir</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoStatOrLStat_reldir
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_stat
</UL>

<P><STRONG><a name="[449]"></a>yaffs_lstat_reldir</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoStatOrLStat_reldir
</UL>
<BR>[Called By]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_lstat
</UL>

<P><STRONG><a name="[44a]"></a>yaffs_stat_reldev</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoStatOrLStat_reldir
</UL>

<P><STRONG><a name="[44b]"></a>yaffs_lstat_reldev</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoStatOrLStat_reldir
</UL>

<P><STRONG><a name="[44c]"></a>yaffs_stat</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_stat_reldir
</UL>

<P><STRONG><a name="[44d]"></a>yaffs_lstat</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_lstat_reldir
</UL>

<P><STRONG><a name="[44e]"></a>yaffs_fstat</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoStat
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToObject
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
</UL>

<P><STRONG><a name="[450]"></a>yaffs_utime_reldir</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoUtime
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindObject
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
</UL>
<BR>[Called By]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_utime
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_utime_reldev
</UL>

<P><STRONG><a name="[451]"></a>yaffs_utime_reldev</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_utime_reldir
</UL>

<P><STRONG><a name="[452]"></a>yaffs_utime</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_utime_reldir
</UL>

<P><STRONG><a name="[453]"></a>yaffs_futime</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoUtime
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToObject
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
</UL>

<P><STRONG><a name="[455]"></a>yaffs_setxattr_reldir</STRONG> (Thumb, 40 bytes, Stack size 40 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_setxattr_reldir
</UL>
<BR>[Called By]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_setxattr
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_setxattr_reldev
</UL>

<P><STRONG><a name="[456]"></a>yaffs_setxattr_reldev</STRONG> (Thumb, 54 bytes, Stack size 40 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_setxattr_reldir
</UL>

<P><STRONG><a name="[457]"></a>yaffs_setxattr</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_setxattr_reldir
</UL>

<P><STRONG><a name="[458]"></a>yaffs_lsetxattr_reldir</STRONG> (Thumb, 40 bytes, Stack size 40 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_setxattr_reldir
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_lsetxattr
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_lsetxattr_reldev
</UL>

<P><STRONG><a name="[459]"></a>yaffs_lsetxattr_reldev</STRONG> (Thumb, 54 bytes, Stack size 40 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_lsetxattr_reldir
</UL>

<P><STRONG><a name="[45a]"></a>yaffs_lsetxattr</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_lsetxattr_reldir
</UL>

<P><STRONG><a name="[45b]"></a>yaffs_fsetxattr</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToObject
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_set_xattrib
</UL>

<P><STRONG><a name="[45d]"></a>yaffs_getxattr_reldir</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_getxattr_reldir
</UL>
<BR>[Called By]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_getxattr
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_getxattr_reldev
</UL>

<P><STRONG><a name="[45e]"></a>yaffs_getxattr_reldev</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_getxattr_reldir
</UL>

<P><STRONG><a name="[45f]"></a>yaffs_getxattr</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_getxattr_reldir
</UL>

<P><STRONG><a name="[460]"></a>yaffs_lgetxattr_reldir</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_getxattr_reldir
</UL>
<BR>[Called By]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_lgetxattr
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_lgetxattr_reldev
</UL>

<P><STRONG><a name="[461]"></a>yaffs_lgetxattr_reldev</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_lgetxattr_reldir
</UL>

<P><STRONG><a name="[462]"></a>yaffs_lgetxattr</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_lgetxattr_reldir
</UL>

<P><STRONG><a name="[463]"></a>yaffs_fgetxattr</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToObject
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_xattrib
</UL>

<P><STRONG><a name="[465]"></a>yaffs_listxattr_reldir</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_listxattr_reldir
</UL>
<BR>[Called By]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_listxattr
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_listxattr_reldev
</UL>

<P><STRONG><a name="[466]"></a>yaffs_listxattr_reldev</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_listxattr_reldir
</UL>

<P><STRONG><a name="[467]"></a>yaffs_listxattr</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_listxattr_reldir
</UL>

<P><STRONG><a name="[468]"></a>yaffs_llistxattr_reldir</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_listxattr_reldir
</UL>
<BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_llistxattr
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_llistxattr_reldev
</UL>

<P><STRONG><a name="[469]"></a>yaffs_llistxattr_reldev</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_llistxattr_reldir
</UL>

<P><STRONG><a name="[46a]"></a>yaffs_llistxattr</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_llistxattr_reldir
</UL>

<P><STRONG><a name="[46b]"></a>yaffs_flistxattr</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToObject
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_list_xattrib
</UL>

<P><STRONG><a name="[46d]"></a>yaffs_removexattr_reldir</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_removexattr_reldir
</UL>
<BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_removexattr
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_removexattr_reldev
</UL>

<P><STRONG><a name="[46e]"></a>yaffs_removexattr_reldev</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_removexattr_reldir
</UL>

<P><STRONG><a name="[46f]"></a>yaffs_removexattr</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_removexattr_reldir
</UL>

<P><STRONG><a name="[470]"></a>yaffs_lremovexattr_reldir</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_removexattr_reldir
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_lremovexattr
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_lremovexattr_reldev
</UL>

<P><STRONG><a name="[471]"></a>yaffs_lremovexattr_reldev</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_lremovexattr_reldir
</UL>

<P><STRONG><a name="[472]"></a>yaffs_lremovexattr</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_lremovexattr_reldir
</UL>

<P><STRONG><a name="[473]"></a>yaffs_fremovexattr</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToObject
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_remove_xattrib
</UL>

<P><STRONG><a name="[475]"></a>yaffs_access_reldir</STRONG> (Thumb, 306 bytes, Stack size 56 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FollowLink
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindObject
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
</UL>
<BR>[Called By]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_access
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_access_reldev
</UL>

<P><STRONG><a name="[476]"></a>yaffs_access_reldev</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_access_reldir
</UL>

<P><STRONG><a name="[477]"></a>yaffs_access</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_access_reldir
</UL>

<P><STRONG><a name="[478]"></a>yaffs_chmod_reldir</STRONG> (Thumb, 226 bytes, Stack size 48 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoChMod
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FollowLink
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindObject
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
</UL>
<BR>[Called By]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chmod
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chmod_reldev
</UL>

<P><STRONG><a name="[479]"></a>yaffs_chmod_reldev</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chmod_reldir
</UL>

<P><STRONG><a name="[47a]"></a>yaffs_chmod</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chmod_reldir
</UL>

<P><STRONG><a name="[47b]"></a>yaffs_fchmod</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoChMod
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToObject
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
</UL>

<P><STRONG><a name="[47c]"></a>yaffs_mkdir_reldir</STRONG> (Thumb, 308 bytes, Stack size 56 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1760 + Unknown Stack Size
<LI>Call Chain = yaffs_mkdir_reldir &rArr; yaffs_create_dir &rArr; yaffs_create_obj &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_free
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_TooManyObjects
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindDirectory
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_alt_dir_path
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_dir
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_by_name
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mkdir
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mkdir_reldev
</UL>

<P><STRONG><a name="[47d]"></a>yaffs_mkdir_reldev</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mkdir_reldir
</UL>

<P><STRONG><a name="[47e]"></a>yaffs_mkdir</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1776 + Unknown Stack Size
<LI>Call Chain = yaffs_mkdir &rArr; yaffs_mkdir_reldir &rArr; yaffs_create_dir &rArr; yaffs_create_obj &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mkdir_reldir
</UL>
<BR>[Called By]<UL><LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Init
</UL>

<P><STRONG><a name="[47f]"></a>yaffs_rmdir_reldir</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_free
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoUnlink_reldir
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_alt_dir_path
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
</UL>
<BR>[Called By]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rmdir
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rmdir_reldev
</UL>

<P><STRONG><a name="[480]"></a>yaffs_rmdir_reldev</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rmdir_reldir
</UL>

<P><STRONG><a name="[481]"></a>yaffs_rmdir</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rmdir_reldir
</UL>

<P><STRONG><a name="[482]"></a>yaffs_getdev</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindDevice
</UL>

<P><STRONG><a name="[483]"></a>yaffs_mount_common</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1984 + Unknown Stack Size
<LI>Call Chain = yaffs_mount_common &rArr; yaffs_guts_initialise &rArr; yaffs_empty_l_n_f &rArr; yaffs_del_dir_contents &rArr;  yaffs_del_dir_contents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindMountPoint
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_InitHandles
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_initialise
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mount
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mount_reldev
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mount2
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mount2_reldev
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mount3
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mount3_reldev
</UL>

<P><STRONG><a name="[484]"></a>yaffs_mount3_reldev</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mount_common
</UL>

<P><STRONG><a name="[485]"></a>yaffs_mount3</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mount_common
</UL>

<P><STRONG><a name="[486]"></a>yaffs_mount2_reldev</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mount_common
</UL>

<P><STRONG><a name="[487]"></a>yaffs_mount2</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mount_common
</UL>

<P><STRONG><a name="[488]"></a>yaffs_mount_reldev</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mount_common
</UL>

<P><STRONG><a name="[489]"></a>yaffs_mount</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1992 + Unknown Stack Size
<LI>Call Chain = yaffs_mount &rArr; yaffs_mount_common &rArr; yaffs_guts_initialise &rArr; yaffs_empty_l_n_f &rArr; yaffs_del_dir_contents &rArr;  yaffs_del_dir_contents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mount_common
</UL>
<BR>[Called By]<UL><LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Init
</UL>

<P><STRONG><a name="[48a]"></a>yaffs_sync_common</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindDevice
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_checkpoint_save
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_flush_whole_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_sync
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_sync_reldev
</UL>

<P><STRONG><a name="[48b]"></a>yaffs_sync_reldev</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_sync_common
</UL>

<P><STRONG><a name="[48c]"></a>yaffs_sync</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_sync_common
</UL>

<P><STRONG><a name="[48e]"></a>yaffs_remount_common</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_IsDevBusy
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindMountPoint
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_checkpoint_save
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_flush_whole_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_remount
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_remount_reldev
</UL>

<P><STRONG><a name="[48f]"></a>yaffs_remount_reldev</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_remount_common
</UL>

<P><STRONG><a name="[490]"></a>yaffs_remount</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_remount_common
</UL>

<P><STRONG><a name="[491]"></a>yaffs_unmount2_common</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_IsDevBusy
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindMountPoint
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_BreakDeviceHandles
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_checkpoint_save
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinitialise
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_flush_whole_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unmount2
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unmount2_reldev
</UL>

<P><STRONG><a name="[492]"></a>yaffs_unmount2_reldev</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unmount2_common
</UL>
<BR>[Called By]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unmount_reldev
</UL>

<P><STRONG><a name="[493]"></a>yaffs_unmount2</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unmount2_common
</UL>
<BR>[Called By]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unmount
</UL>

<P><STRONG><a name="[494]"></a>yaffs_unmount_reldev</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unmount2_reldev
</UL>

<P><STRONG><a name="[495]"></a>yaffs_unmount</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unmount2
</UL>

<P><STRONG><a name="[496]"></a>yaffs_format_common</STRONG> (Thumb, 268 bytes, Stack size 40 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1992 + Unknown Stack Size
<LI>Call Chain = yaffs_format_common &rArr; yaffs_guts_initialise &rArr; yaffs_empty_l_n_f &rArr; yaffs_del_dir_contents &rArr;  yaffs_del_dir_contents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_IsDevBusy
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindMountPoint
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_BreakDeviceHandles
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_checkpoint_save
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_initialise
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinitialise
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_format_dev
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_flush_whole_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_format
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_format_reldev
</UL>

<P><STRONG><a name="[497]"></a>yaffs_format_reldev</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_format_common
</UL>

<P><STRONG><a name="[498]"></a>yaffs_format</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2016 + Unknown Stack Size
<LI>Call Chain = yaffs_format &rArr; yaffs_format_common &rArr; yaffs_guts_initialise &rArr; yaffs_empty_l_n_f &rArr; yaffs_del_dir_contents &rArr;  yaffs_del_dir_contents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_format_common
</UL>
<BR>[Called By]<UL><LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Init
</UL>

<P><STRONG><a name="[499]"></a>yaffs_freespace_common</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindDevice
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_n_free_chunks
</UL>
<BR>[Called By]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_freespace
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_freespace_reldev
</UL>

<P><STRONG><a name="[49a]"></a>yaffs_freespace_reldev</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_freespace_common
</UL>

<P><STRONG><a name="[49b]"></a>yaffs_freespace</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_freespace_common
</UL>

<P><STRONG><a name="[49c]"></a>yaffs_totalspace_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindDevice
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_totalspace
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_totalspace_reldev
</UL>

<P><STRONG><a name="[49d]"></a>yaffs_totalspace_reldev</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_totalspace_common
</UL>

<P><STRONG><a name="[49e]"></a>yaffs_totalspace</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_totalspace_common
</UL>

<P><STRONG><a name="[49f]"></a>yaffs_inodecount_common</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindDevice
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
</UL>
<BR>[Called By]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_inodecount
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_inodecount_reldev
</UL>

<P><STRONG><a name="[4a0]"></a>yaffs_inodecount_reldev</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_inodecount_common
</UL>

<P><STRONG><a name="[4a1]"></a>yaffs_inodecount</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_inodecount_common
</UL>

<P><STRONG><a name="[39a]"></a>yaffs_add_device</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = yaffs_add_device
</UL>
<BR>[Calls]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_add
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_k9f4g08u0b_install_drv
</UL>

<P><STRONG><a name="[4a3]"></a>yaffs_remove_device</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[a63]"></a>yaffs_dev_rewind</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffsfs.o(.text), UNUSED)

<P><STRONG><a name="[a64]"></a>yaffs_next_dev</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, yaffsfs.o(.text), UNUSED)

<P><STRONG><a name="[4a4]"></a>yaffs_opendir_reldir</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_opendir_reldir_no_lock
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_opendir
</UL>

<P><STRONG><a name="[4a5]"></a>yaffs_opendir</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_opendir_reldir
</UL>

<P><STRONG><a name="[4a6]"></a>yaffsfs_readdir_no_lock</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_equivalent_obj
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DirAdvance
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_obj_name
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_readdir_fd
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_readdir
</UL>

<P><STRONG><a name="[4a7]"></a>yaffs_readdir</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_readdir_no_lock
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
</UL>

<P><STRONG><a name="[4a9]"></a>yaffs_rewinddir</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_rewinddir_no_lock
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
</UL>

<P><STRONG><a name="[4aa]"></a>yaffs_readdir_fd</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_readdir_no_lock
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToFileDes
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
</UL>

<P><STRONG><a name="[4ab]"></a>yaffs_rewinddir_fd</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_rewinddir_no_lock
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToFileDes
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
</UL>

<P><STRONG><a name="[4ac]"></a>yaffs_closedir</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_closedir_no_lock
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
</UL>

<P><STRONG><a name="[4ad]"></a>yaffs_symlink_reldir</STRONG> (Thumb, 296 bytes, Stack size 56 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_TooManyObjects
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindObject
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindDirectory
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_symlink
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_symlink
</UL>

<P><STRONG><a name="[4ae]"></a>yaffs_symlink</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_symlink_reldir
</UL>

<P><STRONG><a name="[4af]"></a>yaffs_readlink_reldir</STRONG> (Thumb, 226 bytes, Stack size 56 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindObject
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_readlink
</UL>

<P><STRONG><a name="[4b0]"></a>yaffs_readlink</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_readlink_reldir
</UL>

<P><STRONG><a name="[4b1]"></a>yaffs_link_reldir</STRONG> (Thumb, 376 bytes, Stack size 72 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_TooManyObjects
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindObject
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindDirectory
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckNameLength
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_link_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_link
</UL>

<P><STRONG><a name="[4b2]"></a>yaffs_link</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_link_reldir
</UL>

<P><STRONG><a name="[4b3]"></a>yaffs_mknod_reldir</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
</UL>
<BR>[Called By]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mknod
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mknod_reldev
</UL>

<P><STRONG><a name="[4b4]"></a>yaffs_mknod_reldev</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mknod_reldir
</UL>

<P><STRONG><a name="[4b5]"></a>yaffs_mknod</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mknod_reldir
</UL>

<P><STRONG><a name="[4b6]"></a>yaffs_n_handles_reldir</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindObject
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CountHandles
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
</UL>
<BR>[Called By]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_n_handles
</UL>

<P><STRONG><a name="[4b7]"></a>yaffs_n_handles</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_n_handles_reldir
</UL>

<P><STRONG><a name="[4b8]"></a>yaffs_get_error</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_GetLastError
</UL>

<P><STRONG><a name="[4ba]"></a>yaffs_set_error</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
</UL>

<P><STRONG><a name="[4bc]"></a>yaffs_dump_dev_reldir</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_dump_dev
</UL>

<P><STRONG><a name="[4bb]"></a>yaffs_dump_dev</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_dump_dev_reldir
</UL>

<P><STRONG><a name="[4be]"></a>sys_jiffies</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, sys_arch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_ms
</UL>

<P><STRONG><a name="[4bf]"></a>sys_now</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, sys_arch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = sys_now &rArr; sys_get_ms &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_get_sysuptime
</UL>

<P><STRONG><a name="[4c0]"></a>sys_arch_protect</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, sys_arch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = sys_arch_protect &rArr; OSSchedLock
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_fetch
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_post
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_new
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_free
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_trywait
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_pool_is_empty
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free_ooseq
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_loop_output
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_poll
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_trim
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ioctl
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_selscan
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_callback
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_socket
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_socket
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_connected
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_tcp
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_tcp
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_udp
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_raw
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_join_leave_group
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_write_partly
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_send
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_accept
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_listen_with_backlog
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_disconnect
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_connect
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_bind
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_getaddr
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_close_shutdown
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_ref
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
</UL>

<P><STRONG><a name="[4c1]"></a>sys_arch_unprotect</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, sys_arch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = sys_arch_unprotect &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_fetch
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_post
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_new
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_free
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_trywait
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_pool_is_empty
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free_ooseq
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_loop_output
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_poll
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_trim
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ioctl
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_selscan
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_callback
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_socket
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_socket
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_connected
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_tcp
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_tcp
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_udp
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_raw
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_join_leave_group
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_write_partly
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_send
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_accept
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_listen_with_backlog
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_disconnect
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_connect
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_bind
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_getaddr
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_close_shutdown
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_ref
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
</UL>

<P><STRONG><a name="[566]"></a>sys_init</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, sys_arch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[4c2]"></a>do_sleep</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, sys_arch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
</UL>

<P><STRONG><a name="[4c3]"></a>sys_sem_new</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, sys_arch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = sys_sem_new &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_new
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_init
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_alloc
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_gethostbyname
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_init
</UL>

<P><STRONG><a name="[4c4]"></a>sys_sem_free</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, sys_arch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = sys_sem_free &rArr; OSSemDel &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemDel
</UL>
<BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_free
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_free
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_alloc
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_gethostbyname
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_new_with_proto_and_callback
</UL>

<P><STRONG><a name="[4c5]"></a>sys_arch_sem_wait</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, sys_arch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = sys_arch_sem_wait &rArr; OSSemPend &rArr; OS_EventTaskWait
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_get_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_fetch
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_post
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_malloc
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_trim
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_gethostbyname
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_input
</UL>

<P><STRONG><a name="[4c6]"></a>sys_arch_sem_trywait</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, sys_arch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = sys_arch_sem_trywait &rArr; OSSemQuery
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemSet
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemQuery
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
</UL>

<P><STRONG><a name="[4c7]"></a>sys_sem_signal</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sys_arch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = sys_sem_signal &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_frame_ready
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_fetch
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_post
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_malloc
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_trim
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt_internal
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt_internal
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_callback
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_dns_found
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_connected
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_writemore
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_tcp
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_write
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_send
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_recv
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_newconn
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_listen
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_join_leave_group
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_gethostbyname
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_getaddr
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_disconnect
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_delconn
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_connect
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_bind
</UL>

<P><STRONG><a name="[4c8]"></a>sys_thread_new</STRONG> (Thumb, 70 bytes, Stack size 48 bytes, sys_arch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = sys_thread_new &rArr; OSTaskCreateExt &rArr; OS_TCBInit &rArr; OSTaskCreateHook
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_init
</UL>

<P><STRONG><a name="[4c9]"></a>sys_mbox_free</STRONG> (Thumb, 178 bytes, Stack size 8 bytes, sys_arch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = sys_mbox_free &rArr; sys_sem_free &rArr; OSSemDel &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_free
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
</UL>
<BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_new
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accept_function
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_listen
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_new_with_proto_and_callback
</UL>

<P><STRONG><a name="[4ca]"></a>sys_mbox_new</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, sys_arch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = sys_mbox_new &rArr; sys_mbox_free &rArr; sys_sem_free &rArr; OSSemDel &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_free
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_new
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
</UL>
<BR>[Called By]<UL><LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_init
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_alloc
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_listen
</UL>

<P><STRONG><a name="[4cb]"></a>sys_mbox_post</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, sys_arch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = sys_mbox_post &rArr; sys_sem_signal &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
</UL>
<BR>[Called By]<UL><LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_untimeout
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_timeout
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callback_with_block
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
</UL>

<P><STRONG><a name="[4cc]"></a>sys_mbox_trypost</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, sys_arch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = sys_mbox_trypost &rArr; sys_sem_signal &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_trywait
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
</UL>
<BR>[Called By]<UL><LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_trycallback
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_input
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accept_function
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_tcp
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_tcp
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_udp
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_raw
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callback_with_block
</UL>

<P><STRONG><a name="[4cd]"></a>sys_arch_mbox_fetch</STRONG> (Thumb, 226 bytes, Stack size 24 bytes, sys_arch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = sys_arch_mbox_fetch &rArr; sys_sem_signal &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_tryfetch
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeouts_mbox_fetch
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_accept
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data
</UL>

<P><STRONG><a name="[4ce]"></a>sys_arch_mbox_tryfetch</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, sys_arch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = sys_arch_mbox_tryfetch &rArr; sys_arch_mbox_fetch &rArr; sys_sem_signal &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_fetch
</UL>
<BR>[Called By]<UL><LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
</UL>

<P><STRONG><a name="[4d5]"></a>etharp_tmr</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, etharp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = etharp_tmr &rArr; etharp_free_entry &rArr; snmp_delete_arpidx_tree &rArr; snmp_mib_node_delete &rArr; snmp_mib_ln_free &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_free_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arp_timer
</UL>

<P><STRONG><a name="[4db]"></a>etharp_cleanup_netif</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, etharp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_free_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_down
</UL>

<P><STRONG><a name="[4dc]"></a>etharp_find_addr</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, etharp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = etharp_find_addr &rArr; etharp_find_entry &rArr; etharp_free_entry &rArr; snmp_delete_arpidx_tree &rArr; snmp_mib_node_delete &rArr; snmp_mib_ln_free &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_find_entry
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atentry_get_value
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_ntomentry_get_value
</UL>

<P><STRONG><a name="[4e0]"></a>etharp_request</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, etharp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = etharp_request &rArr; etharp_raw &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_raw
</UL>
<BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output_to_arp_index
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_link_up
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_up
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
</UL>

<P><STRONG><a name="[4e2]"></a>etharp_query</STRONG> (Thumb, 562 bytes, Stack size 40 bytes, etharp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = etharp_query &rArr; etharp_find_entry &rArr; etharp_free_entry &rArr; snmp_delete_arpidx_tree &rArr; snmp_mib_node_delete &rArr; snmp_mib_ln_free &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_send_ip
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_find_entry
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_ref
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output
</UL>

<P><STRONG><a name="[8b]"></a>etharp_output</STRONG> (Thumb, 580 bytes, Stack size 40 bytes, etharp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = etharp_output &rArr; etharp_query &rArr; etharp_find_entry &rArr; etharp_free_entry &rArr; snmp_delete_arpidx_tree &rArr; snmp_mib_node_delete &rArr; snmp_mib_ln_free &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output_to_arp_index
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_send_ip
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ethernetif.o(.text)
</UL>
<P><STRONG><a name="[4e7]"></a>ethernet_input</STRONG> (Thumb, 246 bytes, Stack size 24 bytes, etharp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 800 + Unknown Stack Size
<LI>Call Chain = ethernet_input &rArr; ip_input &rArr; tcp_input &rArr; tcp_listen_input &rArr; tcp_alloc &rArr; tcp_kill_prio &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_arp_input
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_thread
</UL>

<P><STRONG><a name="[4e9]"></a>netconn_new_with_proto_and_callback</STRONG> (Thumb, 212 bytes, Stack size 48 bytes, api_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = netconn_new_with_proto_and_callback &rArr; netconn_alloc &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_free
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_free
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_alloc
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket
</UL>

<P><STRONG><a name="[4ec]"></a>netconn_delete</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, api_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = netconn_delete &rArr; netconn_free &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_free
</UL>
<BR>[Called By]<UL><LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
</UL>

<P><STRONG><a name="[4ee]"></a>netconn_getaddr</STRONG> (Thumb, 144 bytes, Stack size 56 bytes, api_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = netconn_getaddr &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getaddrname
</UL>

<P><STRONG><a name="[4ef]"></a>netconn_bind</STRONG> (Thumb, 92 bytes, Stack size 48 bytes, api_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = netconn_bind &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_bind
</UL>

<P><STRONG><a name="[4f0]"></a>netconn_connect</STRONG> (Thumb, 92 bytes, Stack size 48 bytes, api_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = netconn_connect &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_connect
</UL>

<P><STRONG><a name="[4f1]"></a>netconn_disconnect</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, api_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = netconn_disconnect &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_connect
</UL>

<P><STRONG><a name="[4f2]"></a>netconn_listen_with_backlog</STRONG> (Thumb, 80 bytes, Stack size 48 bytes, api_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = netconn_listen_with_backlog &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_listen
</UL>

<P><STRONG><a name="[4f3]"></a>netconn_accept</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, api_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = netconn_accept &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_fetch
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
</UL>

<P><STRONG><a name="[4f5]"></a>netconn_recv_tcp_pbuf</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, api_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = netconn_recv_tcp_pbuf &rArr; netconn_recv_data &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
</UL>

<P><STRONG><a name="[4f6]"></a>netconn_recv</STRONG> (Thumb, 258 bytes, Stack size 32 bytes, api_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = netconn_recv &rArr; netconn_recv_data &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
</UL>

<P><STRONG><a name="[4f7]"></a>netconn_recved</STRONG> (Thumb, 46 bytes, Stack size 40 bytes, api_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = netconn_recved &rArr; tcpip_apimsg &rArr; sys_mbox_post &rArr; sys_sem_signal &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
</UL>
<BR>[Called By]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
</UL>

<P><STRONG><a name="[4f8]"></a>netconn_send</STRONG> (Thumb, 92 bytes, Stack size 48 bytes, api_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = netconn_send &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_sendto
</UL>

<P><STRONG><a name="[4f9]"></a>netconn_sendto</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, api_lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_send
</UL>

<P><STRONG><a name="[4fa]"></a>netconn_write_partly</STRONG> (Thumb, 432 bytes, Stack size 64 bytes, api_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = netconn_write_partly &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_send
</UL>

<P><STRONG><a name="[4fc]"></a>netconn_close</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, api_lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_close_shutdown
</UL>

<P><STRONG><a name="[4fd]"></a>netconn_shutdown</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, api_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = netconn_shutdown &rArr; netconn_close_shutdown &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_close_shutdown
</UL>
<BR>[Called By]<UL><LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_shutdown
</UL>

<P><STRONG><a name="[4fe]"></a>netconn_join_leave_group</STRONG> (Thumb, 104 bytes, Stack size 56 bytes, api_lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[4ff]"></a>netconn_gethostbyname</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, api_lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_free
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_new
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callback_with_block
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[4ed]"></a>netconn_free</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = netconn_free &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_free
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accept_function
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_delete
</UL>

<P><STRONG><a name="[4ea]"></a>netconn_alloc</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = netconn_alloc &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_new
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_free
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_new
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accept_function
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_new_with_proto_and_callback
</UL>

<P><STRONG><a name="[58]"></a>do_newconn</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 704 + Unknown Stack Size
<LI>Call Chain = do_newconn &rArr; pcb_new &rArr; tcp_new &rArr; tcp_alloc &rArr; tcp_kill_prio &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcb_new
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(.text)
</UL>
<P><STRONG><a name="[59]"></a>do_delconn</STRONG> (Thumb, 624 bytes, Stack size 8 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 672 + Unknown Stack Size
<LI>Call Chain = do_delconn &rArr; netconn_drain &rArr;  netconn_drain (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_remove
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_remove
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(.text)
</UL>
<P><STRONG><a name="[5b]"></a>do_bind</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = do_bind &rArr; udp_bind &rArr; snmp_insert_udpidx_tree &rArr; snmp_mib_node_insert &rArr; snmp_mib_ln_alloc &rArr; memp_malloc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_bind
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_bind
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(.text)
</UL>
<P><STRONG><a name="[5c]"></a>do_connect</STRONG> (Thumb, 226 bytes, Stack size 8 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624 + Unknown Stack Size
<LI>Call Chain = do_connect &rArr; tcp_connect &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_connect
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_connect
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_tcp
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(.text)
</UL>
<P><STRONG><a name="[5d]"></a>do_disconnect</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = do_disconnect &rArr; sys_sem_signal &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_disconnect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(.text)
</UL>
<P><STRONG><a name="[5e]"></a>do_listen</STRONG> (Thumb, 402 bytes, Stack size 16 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = do_listen &rArr; tcp_close &rArr; tcp_close_shutdown &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_new
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_free
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_with_backlog
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_arg
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_accept
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(.text)
</UL>
<P><STRONG><a name="[60]"></a>do_send</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = do_send &rArr; udp_send &rArr; udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_send
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_sendto
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(.text)
</UL>
<P><STRONG><a name="[5f]"></a>do_recv</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = do_recv &rArr; tcp_recved &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recved
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(.text)
</UL>
<P><STRONG><a name="[61]"></a>do_write</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624 + Unknown Stack Size
<LI>Call Chain = do_write &rArr; do_writemore &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_writemore
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(.text)
</UL>
<P><STRONG><a name="[5a]"></a>do_getaddr</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = do_getaddr &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(.text)
</UL>
<P><STRONG><a name="[62]"></a>do_close</STRONG> (Thumb, 188 bytes, Stack size 8 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 672 + Unknown Stack Size
<LI>Call Chain = do_close &rArr; netconn_drain &rArr;  netconn_drain (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(.text)
</UL>
<P><STRONG><a name="[63]"></a>do_join_leave_group</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = do_join_leave_group &rArr; igmp_leavegroup &rArr; igmp_send &rArr; igmp_ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_leavegroup
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_joingroup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(.text)
</UL>
<P><STRONG><a name="[64]"></a>do_gethostbyname</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = do_gethostbyname &rArr; dns_gethostbyname &rArr; dns_enqueue &rArr; dns_check_entry &rArr; dns_send &rArr; udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_gethostbyname
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_lib.o(.text)
</UL>
<P><STRONG><a name="[529]"></a>netbuf_new</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, netbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
</UL>

<P><STRONG><a name="[501]"></a>netbuf_delete</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, netbuf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = netbuf_delete &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_socket
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_udp
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_raw
</UL>

<P><STRONG><a name="[52a]"></a>netbuf_alloc</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, netbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[52b]"></a>netbuf_free</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, netbuf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = netbuf_free &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
</UL>

<P><STRONG><a name="[52c]"></a>netbuf_ref</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, netbuf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = netbuf_ref &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
</UL>

<P><STRONG><a name="[52d]"></a>netbuf_chain</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, netbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[52f]"></a>netbuf_data</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, netbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[530]"></a>netbuf_next</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, netbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[531]"></a>netbuf_first</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, netbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[56a]"></a>lwip_socket_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sockets.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[535]"></a>lwip_accept</STRONG> (Thumb, 708 bytes, Stack size 64 bytes, sockets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = lwip_accept &rArr; netconn_delete &rArr; netconn_free &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_socket
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_accept
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_getaddr
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_delete
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerTest
</UL>

<P><STRONG><a name="[536]"></a>lwip_bind</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, sockets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = lwip_bind &rArr; netconn_bind &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_bind
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerTest
</UL>

<P><STRONG><a name="[537]"></a>lwip_close</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, sockets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = lwip_close &rArr; free_socket &rArr; netbuf_delete &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_socket
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_delete
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerTest
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClientTest
</UL>

<P><STRONG><a name="[538]"></a>lwip_connect</STRONG> (Thumb, 224 bytes, Stack size 40 bytes, sockets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = lwip_connect &rArr; netconn_connect &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_disconnect
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_connect
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClientTest
</UL>

<P><STRONG><a name="[539]"></a>lwip_listen</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, sockets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = lwip_listen &rArr; netconn_listen_with_backlog &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_listen_with_backlog
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerTest
</UL>

<P><STRONG><a name="[53a]"></a>lwip_recvfrom</STRONG> (Thumb, 856 bytes, Stack size 96 bytes, sockets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = lwip_recvfrom &rArr; netconn_recv &rArr; netconn_recv_data &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy_partial
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_delete
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recved
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_tcp_pbuf
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_getaddr
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recv
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_read
</UL>

<P><STRONG><a name="[53c]"></a>lwip_read</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, sockets.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
</UL>

<P><STRONG><a name="[53d]"></a>lwip_recv</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, sockets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = lwip_recv &rArr; lwip_recvfrom &rArr; netconn_recv &rArr; netconn_recv_data &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
</UL>
<BR>[Called By]<UL><LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerTest
</UL>

<P><STRONG><a name="[53e]"></a>lwip_sendto</STRONG> (Thumb, 290 bytes, Stack size 72 bytes, sockets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = lwip_sendto &rArr;  lwip_send (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_send
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_ref
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_free
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_send
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_send
</UL>

<P><STRONG><a name="[53f]"></a>lwip_send</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, sockets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = lwip_send &rArr; lwip_sendto &rArr;  lwip_send (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_write_partly
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_write
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClientTest
</UL>

<P><STRONG><a name="[540]"></a>lwip_socket</STRONG> (Thumb, 326 bytes, Stack size 24 bytes, sockets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = lwip_socket &rArr; netconn_new_with_proto_and_callback &rArr; netconn_alloc &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_socket
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_delete
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_new_with_proto_and_callback
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerTest
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClientTest
</UL>

<P><STRONG><a name="[541]"></a>lwip_write</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, sockets.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_send
</UL>

<P><STRONG><a name="[544]"></a>lwip_select</STRONG> (Thumb, 962 bytes, Stack size 120 bytes, sockets.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_free
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_new
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_selscan
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tryget_socket
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[545]"></a>lwip_shutdown</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, sockets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = lwip_shutdown &rArr; netconn_shutdown &rArr; netconn_close_shutdown &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_shutdown
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClientTest
</UL>

<P><STRONG><a name="[547]"></a>lwip_getpeername</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, sockets.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getaddrname
</UL>

<P><STRONG><a name="[548]"></a>lwip_getsockname</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, sockets.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getaddrname
</UL>

<P><STRONG><a name="[549]"></a>lwip_getsockopt</STRONG> (Thumb, 492 bytes, Stack size 64 bytes, sockets.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callback_with_block
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[54a]"></a>lwip_setsockopt</STRONG> (Thumb, 516 bytes, Stack size 56 bytes, sockets.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callback_with_block
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[54b]"></a>lwip_ioctl</STRONG> (Thumb, 284 bytes, Stack size 40 bytes, sockets.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[54c]"></a>lwip_fcntl</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, sockets.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
</UL>

<P><STRONG><a name="[75]"></a>tcpip_input</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, tcpip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = tcpip_input &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
</UL>
<BR>[Address Reference Count : 2]<UL><LI> netif.o(.text)
<LI> user_main.o(.text)
</UL>
<P><STRONG><a name="[500]"></a>tcpip_callback_with_block</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, tcpip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_post
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_pool_is_empty
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_loop_output
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free_callback
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free_callback
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_gethostbyname
</UL>

<P><STRONG><a name="[550]"></a>tcpip_timeout</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, tcpip.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_post
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
</UL>

<P><STRONG><a name="[551]"></a>tcpip_untimeout</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, tcpip.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_post
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
</UL>

<P><STRONG><a name="[4eb]"></a>tcpip_apimsg</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, tcpip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = tcpip_apimsg &rArr; sys_mbox_post &rArr; sys_sem_signal &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_post
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_join_leave_group
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_write_partly
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_send
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recved
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_listen_with_backlog
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_disconnect
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_connect
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_bind
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_getaddr
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_delete
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_new_with_proto_and_callback
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_close_shutdown
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data
</UL>

<P><STRONG><a name="[552]"></a>tcpip_callbackmsg_new</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, tcpip.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
</UL>

<P><STRONG><a name="[553]"></a>tcpip_callbackmsg_delete</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, tcpip.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
</UL>

<P><STRONG><a name="[554]"></a>tcpip_trycallback</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, tcpip.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
</UL>

<P><STRONG><a name="[555]"></a>tcpip_init</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, tcpip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 776 + Unknown Stack Size
<LI>Call Chain = tcpip_init &rArr; lwip_init &rArr; netif_init &rArr; netif_add &rArr; netif_set_addr &rArr; netif_set_ipaddr &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_new
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_thread_new
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStart
</UL>

<P><STRONG><a name="[557]"></a>pbuf_free_callback</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, tcpip.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callback_with_block
</UL>

<P><STRONG><a name="[558]"></a>mem_free_callback</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, tcpip.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callback_with_block
</UL>

<P><STRONG><a name="[55d]"></a>dns_setserver</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, dns.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_init
</UL>

<P><STRONG><a name="[55b]"></a>dns_init</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, dns.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = dns_init &rArr; udp_bind &rArr; snmp_insert_udpidx_tree &rArr; snmp_mib_node_insert &rArr; snmp_mib_ln_alloc &rArr; memp_malloc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_addr
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_setserver
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_recv
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
</UL>
<BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[a65]"></a>dns_getserver</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, dns.o(.text), UNUSED)

<P><STRONG><a name="[562]"></a>dns_tmr</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, dns.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 648 + Unknown Stack Size
<LI>Call Chain = dns_tmr &rArr; dns_check_entries &rArr; dns_check_entry &rArr; dns_send &rArr; udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_check_entries
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_timer
</UL>

<P><STRONG><a name="[528]"></a>dns_gethostbyname</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, dns.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 696 + Unknown Stack Size
<LI>Call Chain = dns_gethostbyname &rArr; dns_enqueue &rArr; dns_check_entry &rArr; dns_send &rArr; udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_addr
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_enqueue
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_lookup
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_gethostbyname
</UL>

<P><STRONG><a name="[556]"></a>lwip_init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 760 + Unknown Stack Size
<LI>Call Chain = lwip_init &rArr; netif_init &rArr; netif_add &rArr; netif_set_addr &rArr; netif_set_ipaddr &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_init
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_init
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeouts_init
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stats_init
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_init
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_init
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_init
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_init
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_init
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_init
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket_init
</UL>
<BR>[Called By]<UL><LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_init
</UL>

<P><STRONG><a name="[567]"></a>mem_init</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, mem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = mem_init &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_new
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[73]"></a>mem_free</STRONG> (Thumb, 228 bytes, Stack size 16 bytes, mem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = mem_free &rArr; plug_holes &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plug_holes
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tcpip.o(.text)
</UL>
<P><STRONG><a name="[571]"></a>mem_trim</STRONG> (Thumb, 766 bytes, Stack size 40 bytes, mem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = mem_trim &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
</UL>

<P><STRONG><a name="[572]"></a>mem_malloc</STRONG> (Thumb, 516 bytes, Stack size 32 bytes, mem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = mem_malloc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_calloc
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_init
</UL>

<P><STRONG><a name="[573]"></a>mem_calloc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, mem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_malloc
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[568]"></a>memp_init</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, memp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memp_init
</UL>
<BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[4e5]"></a>memp_malloc</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, memp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = memp_malloc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_copy
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callbackmsg_new
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_untimeout
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_timeout
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_input
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_new
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_with_backlog
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_new
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_udp
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_raw
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callback_with_block
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_alloc
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_alloc
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_get_event
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_ln_alloc
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_lrn_alloc
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag_alloc_pbuf_custom_ref
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_enqueue_new_datagram
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_lookup_group
</UL>

<P><STRONG><a name="[4d2]"></a>memp_free</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, memp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_update_arp_entry
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_etharp_q
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_stop
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_untimeout
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeouts_mbox_fetch
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callbackmsg_delete
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_input
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_thread
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_chain
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_remove
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_with_backlog
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_remove
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_delete
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callback_with_block
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_free
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_alloc
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_new_with_proto_and_callback
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_alloc
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_free
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_get_event
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_ln_free
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_lrn_free
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag_free_pbuf_custom_ref
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_dequeue_datagram
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_remove_group
</UL>

<P><STRONG><a name="[574]"></a>netif_poll</STRONG> (Thumb, 284 bytes, Stack size 32 bytes, netif.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 808 + Unknown Stack Size
<LI>Call Chain = netif_poll &rArr; ip_input &rArr; tcp_input &rArr; tcp_listen_input &rArr; tcp_alloc &rArr; tcp_kill_prio &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_ifinucastpkts
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_add_ifinoctets
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> netif.o(.text)
</UL>
<P><STRONG><a name="[578]"></a>netif_loop_output</STRONG> (Thumb, 314 bytes, Stack size 40 bytes, netif.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = netif_loop_output &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_ifoutucastpkts
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_ifoutdiscards
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_add_ifoutoctets
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callback_with_block
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if_opt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> netif.o(.text)
</UL>
<P><STRONG><a name="[57c]"></a>netif_set_up</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, netif.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = netif_set_up &rArr; etharp_request &rArr; etharp_raw &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_get_sysuptime
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_report_groups
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request
</UL>
<BR>[Called By]<UL><LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_init
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eth_netif_init
</UL>

<P><STRONG><a name="[586]"></a>netif_set_gw</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, netif.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_addr
</UL>

<P><STRONG><a name="[57f]"></a>netif_set_netmask</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, netif.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = netif_set_netmask &rArr; snmp_delete_iprteidx_tree &rArr; snmp_mib_node_delete &rArr; snmp_mib_ln_free &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_insert_iprteidx_tree
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_iprteidx_tree
</UL>
<BR>[Called By]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_addr
</UL>

<P><STRONG><a name="[582]"></a>netif_set_ipaddr</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, netif.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 664 + Unknown Stack Size
<LI>Call Chain = netif_set_ipaddr &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_insert_iprteidx_tree
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_insert_ipaddridx_tree
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_iprteidx_tree
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_ipaddridx_tree
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
</UL>
<BR>[Called By]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_addr
</UL>

<P><STRONG><a name="[585]"></a>netif_set_addr</STRONG> (Thumb, 330 bytes, Stack size 24 bytes, netif.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = netif_set_addr &rArr; netif_set_ipaddr &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_ipaddr
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_netmask
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_gw
</UL>
<BR>[Called By]<UL><LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_add
</UL>

<P><STRONG><a name="[587]"></a>netif_add</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, netif.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 720 + Unknown Stack Size
<LI>Call Chain = netif_add &rArr; netif_set_addr &rArr; netif_set_ipaddr &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_iflist
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_start
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_addr
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_init
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eth_netif_init
</UL>

<P><STRONG><a name="[569]"></a>netif_init</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, netif.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 752 + Unknown Stack Size
<LI>Call Chain = netif_init &rArr; netif_add &rArr; netif_set_addr &rArr; netif_set_ipaddr &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_add
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_up
</UL>
<BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[58a]"></a>netif_set_default</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, netif.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_insert_iprteidx_tree
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_iprteidx_tree
</UL>
<BR>[Called By]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_remove
</UL>

<P><STRONG><a name="[58b]"></a>netif_set_down</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, netif.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_get_sysuptime
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_cleanup_netif
</UL>
<BR>[Called By]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_remove
</UL>

<P><STRONG><a name="[58c]"></a>netif_remove</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, netif.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_ipaddridx_tree
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_dec_iflist
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_stop
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_down
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_default
</UL>

<P><STRONG><a name="[a66]"></a>netif_find</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, netif.o(.text), UNUSED)

<P><STRONG><a name="[a67]"></a>netif_set_status_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, netif.o(.text), UNUSED)

<P><STRONG><a name="[58f]"></a>netif_set_link_up</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, netif.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_report_groups
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request
</UL>

<P><STRONG><a name="[a68]"></a>netif_set_link_down</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, netif.o(.text), UNUSED)

<P><STRONG><a name="[a69]"></a>netif_set_link_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, netif.o(.text), UNUSED)

<P><STRONG><a name="[4d1]"></a>pbuf_free</STRONG> (Thumb, 278 bytes, Stack size 32 bytes, pbuf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = pbuf_free &rArr; mem_free &rArr; plug_holes &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_raw
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_arp_input
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_update_arp_entry
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_etharp_q
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv_null
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_coalesce
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_dechain
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_loop_output
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_poll
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_send
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_recv
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free_int
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_socket
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_ref
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_free
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_alloc
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_shutdown
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_sendto
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_delete
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_tcp
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_udp
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_raw
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_input
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_trap
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_response
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_recv
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipfrag_free_pbuf_custom
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_chain_frag_into_datagram_and_validate
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_input
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_send
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
</UL>

<P><STRONG><a name="[4df]"></a>pbuf_alloc</STRONG> (Thumb, 1130 bytes, Stack size 40 bytes, pbuf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_pool_is_empty
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_malloc
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_raw
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pbuf_prealloc
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue_flags
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_coalesce
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_loop_output
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_send
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_ref
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_alloc
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_sendto
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_raw
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_input
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_trap
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_response
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_send
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
</UL>

<P><STRONG><a name="[593]"></a>pbuf_alloced_custom</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, pbuf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = pbuf_alloced_custom &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
</UL>

<P><STRONG><a name="[55f]"></a>pbuf_realloc</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, pbuf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = pbuf_realloc &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_trim
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_oos_insert_segment
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_send
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[4e6]"></a>pbuf_header</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, pbuf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = pbuf_header &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_sendto
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if_opt
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_input
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
</UL>

<P><STRONG><a name="[575]"></a>pbuf_clen</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, pbuf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue_flags
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_loop_output
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_poll
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_chain_frag_into_datagram_and_validate
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
</UL>

<P><STRONG><a name="[4e4]"></a>pbuf_ref</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, pbuf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = pbuf_ref &rArr; sys_arch_unprotect &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
</UL>
<BR>[Called By]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_copy
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_chain
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
</UL>

<P><STRONG><a name="[52e]"></a>pbuf_cat</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, pbuf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = pbuf_cat &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_chain
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_chain
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
</UL>

<P><STRONG><a name="[594]"></a>pbuf_chain</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, pbuf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = pbuf_chain &rArr; pbuf_cat &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_ref
</UL>
<BR>[Called By]<UL><LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_sendto
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
</UL>

<P><STRONG><a name="[595]"></a>pbuf_dechain</STRONG> (Thumb, 554 bytes, Stack size 16 bytes, pbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[4e3]"></a>pbuf_copy</STRONG> (Thumb, 336 bytes, Stack size 24 bytes, pbuf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = pbuf_copy &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_coalesce
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_loop_output
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_raw
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
</UL>

<P><STRONG><a name="[53b]"></a>pbuf_copy_partial</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, pbuf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = pbuf_copy_partial &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_recv
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
</UL>

<P><STRONG><a name="[596]"></a>pbuf_take</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, pbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[597]"></a>pbuf_coalesce</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, pbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[599]"></a>pbuf_get_at</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, pbuf.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_memcmp
</UL>

<P><STRONG><a name="[598]"></a>pbuf_memcmp</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, pbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_get_at
</UL>
<BR>[Called By]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_memfind
</UL>

<P><STRONG><a name="[59a]"></a>pbuf_memfind</STRONG> (Thumb, 424 bytes, Stack size 32 bytes, pbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_strstr
</UL>

<P><STRONG><a name="[59b]"></a>pbuf_strstr</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, pbuf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_memfind
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>

<P><STRONG><a name="[604]"></a>raw_input</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, raw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = raw_input
</UL>
<BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[51a]"></a>raw_bind</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, raw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_bind
</UL>

<P><STRONG><a name="[51d]"></a>raw_connect</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, raw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_connect
</UL>

<P><STRONG><a name="[512]"></a>raw_recv</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, raw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcb_new
</UL>

<P><STRONG><a name="[523]"></a>raw_sendto</STRONG> (Thumb, 182 bytes, Stack size 48 bytes, raw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = raw_sendto &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_route
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_chain
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_send
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_send
</UL>

<P><STRONG><a name="[522]"></a>raw_send</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, raw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = raw_send &rArr; raw_sendto &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_sendto
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_send
</UL>

<P><STRONG><a name="[518]"></a>raw_remove</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, raw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = raw_remove &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_delconn
</UL>

<P><STRONG><a name="[511]"></a>raw_new</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, raw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = raw_new &rArr; memp_malloc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcb_new
</UL>

<P><STRONG><a name="[565]"></a>stats_init</STRONG> (Thumb, 54 bytes, Stack size 96 bytes, stats.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = stats_init &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[59e]"></a>stats_display_proto</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, stats.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stats_display
</UL>

<P><STRONG><a name="[59f]"></a>stats_display_igmp</STRONG> (Thumb, 184 bytes, Stack size 8 bytes, stats.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stats_display
</UL>

<P><STRONG><a name="[5a0]"></a>stats_display_mem</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, stats.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stats_display
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stats_display_memp
</UL>

<P><STRONG><a name="[5a1]"></a>stats_display_memp</STRONG> (Thumb, 38 bytes, Stack size 96 bytes, stats.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stats_display_mem
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stats_display
</UL>

<P><STRONG><a name="[5a2]"></a>stats_display_sys</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, stats.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stats_display
</UL>

<P><STRONG><a name="[5a3]"></a>stats_display</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, stats.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stats_display_sys
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stats_display_memp
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stats_display_mem
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stats_display_igmp
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stats_display_proto
</UL>

<P><STRONG><a name="[56c]"></a>tcp_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[5a4]"></a>tcp_seg_free</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = tcp_seg_free &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_oos_insert_segment
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_segs_free
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>

<P><STRONG><a name="[591]"></a>tcp_segs_free</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = tcp_segs_free &rArr; tcp_seg_free &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
</UL>
<BR>[Called By]<UL><LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_oos_insert_segment
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free_ooseq
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
</UL>

<P><STRONG><a name="[5a5]"></a>tcp_pcb_purge</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = tcp_pcb_purge &rArr; tcp_segs_free &rArr; tcp_seg_free &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_segs_free
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
</UL>
<BR>[Called By]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
</UL>

<P><STRONG><a name="[5a6]"></a>tcp_slowtmr</STRONG> (Thumb, 1436 bytes, Stack size 48 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = tcp_slowtmr &rArr; tcp_rexmit_rto &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_rto
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_segs_free
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tmr
</UL>

<P><STRONG><a name="[5ab]"></a>tcp_pcb_remove</STRONG> (Thumb, 228 bytes, Stack size 16 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
</UL>

<P><STRONG><a name="[50d]"></a>tcp_close</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624 + Unknown Stack Size
<LI>Call Chain = tcp_close &rArr; tcp_close_shutdown &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
</UL>
<BR>[Called By]<UL><LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv_null
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_listen
</UL>

<P><STRONG><a name="[5b1]"></a>tcp_update_rcv_ann_wnd</STRONG> (Thumb, 372 bytes, Stack size 16 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = tcp_update_rcv_ann_wnd &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recved
</UL>

<P><STRONG><a name="[502]"></a>tcp_recved</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = tcp_recved &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_update_rcv_ann_wnd
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv_null
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_tcp
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_recv
</UL>

<P><STRONG><a name="[5b2]"></a>tcp_recv_null</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 648 + Unknown Stack Size
<LI>Call Chain = tcp_recv_null &rArr; tcp_close &rArr; tcp_close_shutdown &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recved
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
</UL>
<BR>[Called By]<UL><LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process_refused_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tcp.o(.text)
</UL>
<P><STRONG><a name="[5b3]"></a>tcp_process_refused_data</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 672 + Unknown Stack Size
<LI>Call Chain = tcp_process_refused_data &rArr; tcp_recv_null &rArr; tcp_close &rArr; tcp_close_shutdown &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv_null
</UL>
<BR>[Called By]<UL><LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_fasttmr
</UL>

<P><STRONG><a name="[5b4]"></a>tcp_fasttmr</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = tcp_fasttmr &rArr; tcp_process_refused_data &rArr; tcp_recv_null &rArr; tcp_close &rArr; tcp_close_shutdown &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process_refused_data
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>
<BR>[Called By]<UL><LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tmr
</UL>

<P><STRONG><a name="[5b5]"></a>tcp_tmr</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 696 + Unknown Stack Size
<LI>Call Chain = tcp_tmr &rArr; tcp_fasttmr &rArr; tcp_process_refused_data &rArr; tcp_recv_null &rArr; tcp_close &rArr; tcp_close_shutdown &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_fasttmr
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_tcp_timer
</UL>

<P><STRONG><a name="[50e]"></a>tcp_shutdown</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = tcp_shutdown &rArr; tcp_close_shutdown &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
</UL>
<BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
</UL>

<P><STRONG><a name="[5b6]"></a>tcp_abandon</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_segs_free
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
</UL>

<P><STRONG><a name="[517]"></a>tcp_abort</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
</UL>
<BR>[Called By]<UL><LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_kill_timewait
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_kill_prio
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_ipaddr
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
</UL>

<P><STRONG><a name="[51c]"></a>tcp_bind</STRONG> (Thumb, 394 bytes, Stack size 32 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = tcp_bind &rArr; tcp_timer_needed &rArr; sys_timeout &rArr; memp_malloc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timer_needed
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_new_port
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_bind
</UL>

<P><STRONG><a name="[521]"></a>tcp_listen_with_backlog</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = tcp_listen_with_backlog &rArr; tcp_timer_needed &rArr; sys_timeout &rArr; memp_malloc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timer_needed
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_listen
</UL>

<P><STRONG><a name="[5b8]"></a>tcp_eff_send_mss</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = tcp_eff_send_mss &rArr; ip_route
</UL>
<BR>[Calls]<UL><LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_route
</UL>
<BR>[Called By]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
</UL>

<P><STRONG><a name="[5b9]"></a>tcp_next_iss</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
</UL>

<P><STRONG><a name="[51f]"></a>tcp_connect</STRONG> (Thumb, 356 bytes, Stack size 40 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = tcp_connect &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timer_needed
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue_flags
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_tcpactiveopens
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_next_iss
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_eff_send_mss
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_new_port
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_route
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_connect
</UL>

<P><STRONG><a name="[a6a]"></a>tcp_setprio</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tcp.o(.text), UNUSED)

<P><STRONG><a name="[5bc]"></a>tcp_seg_copy</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = tcp_seg_copy &rArr; memp_malloc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_ref
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
</UL>

<P><STRONG><a name="[5bf]"></a>tcp_alloc</STRONG> (Thumb, 362 bytes, Stack size 16 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 680 + Unknown Stack Size
<LI>Call Chain = tcp_alloc &rArr; tcp_kill_prio &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_next_iss
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_kill_timewait
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_kill_prio
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_new
</UL>

<P><STRONG><a name="[515]"></a>tcp_new</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = tcp_new &rArr; tcp_alloc &rArr; tcp_kill_prio &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcb_new
</UL>

<P><STRONG><a name="[507]"></a>tcp_arg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accept_function
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_tcp
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_listen
</UL>

<P><STRONG><a name="[509]"></a>tcp_recv</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = tcp_recv &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accept_function
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_tcp
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
</UL>

<P><STRONG><a name="[50a]"></a>tcp_sent</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = tcp_sent &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accept_function
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_tcp
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
</UL>

<P><STRONG><a name="[50c]"></a>tcp_err</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = tcp_err &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accept_function
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_tcp
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
</UL>

<P><STRONG><a name="[508]"></a>tcp_accept</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tcp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_listen
</UL>

<P><STRONG><a name="[50b]"></a>tcp_poll</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = tcp_poll &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accept_function
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_tcp
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
</UL>

<P><STRONG><a name="[a6b]"></a>tcp_debug_state_str</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tcp.o(.text), UNUSED)

<P><STRONG><a name="[5ca]"></a>tcp_input</STRONG> (Thumb, 1804 bytes, Stack size 40 bytes, tcp_in.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 744 + Unknown Stack Size
<LI>Call Chain = tcp_input &rArr; tcp_listen_input &rArr; tcp_alloc &rArr; tcp_kill_prio &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_tcpinsegs
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_tcpinerrs
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timewait_input
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process_refused_data
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv_null
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohl
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[5ba]"></a>tcp_enqueue_flags</STRONG> (Thumb, 492 bytes, Stack size 32 bytes, tcp_out.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = tcp_enqueue_flags &rArr; tcp_create_segment &rArr; tcp_seg_free &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_fin
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
</UL>

<P><STRONG><a name="[5af]"></a>tcp_send_fin</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, tcp_out.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = tcp_send_fin &rArr; tcp_enqueue_flags &rArr; tcp_create_segment &rArr; tcp_seg_free &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue_flags
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
</UL>
<BR>[Called By]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
</UL>

<P><STRONG><a name="[504]"></a>tcp_write</STRONG> (Thumb, 1706 bytes, Stack size 112 bytes, tcp_out.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = tcp_write &rArr; tcp_pbuf_prealloc &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write_checks
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pbuf_prealloc
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_create_segment
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_segs_free
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_writemore
</UL>

<P><STRONG><a name="[5c3]"></a>tcp_send_empty_ack</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, tcp_out.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
</UL>
<BR>[Called By]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>

<P><STRONG><a name="[505]"></a>tcp_output</STRONG> (Thumb, 504 bytes, Stack size 32 bytes, tcp_out.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 576 + Unknown Stack Size
<LI>Call Chain = tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohl
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timewait_input
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_rto
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_fasttmr
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recved
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_writemore
</UL>

<P><STRONG><a name="[5aa]"></a>tcp_rst</STRONG> (Thumb, 200 bytes, Stack size 48 bytes, tcp_out.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = tcp_rst &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_tcpoutrsts
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timewait_input
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
</UL>

<P><STRONG><a name="[5a8]"></a>tcp_rexmit_rto</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, tcp_out.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = tcp_rexmit_rto &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>
<BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
</UL>

<P><STRONG><a name="[5c6]"></a>tcp_rexmit</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, tcp_out.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = tcp_rexmit &rArr; lwip_ntohl
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohl
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_tcpretranssegs
</UL>
<BR>[Called By]<UL><LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_fast
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
</UL>

<P><STRONG><a name="[5c2]"></a>tcp_rexmit_fast</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, tcp_out.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = tcp_rexmit_fast &rArr; tcp_rexmit &rArr; lwip_ntohl
</UL>
<BR>[Calls]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit
</UL>
<BR>[Called By]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
</UL>

<P><STRONG><a name="[5a9]"></a>tcp_keepalive</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, tcp_out.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = tcp_keepalive &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
</UL>
<BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
</UL>

<P><STRONG><a name="[5a7]"></a>tcp_zero_window_probe</STRONG> (Thumb, 212 bytes, Stack size 40 bytes, tcp_out.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = tcp_zero_window_probe &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy_partial
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
</UL>
<BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
</UL>

<P><STRONG><a name="[54e]"></a>sys_timeout</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = sys_timeout &rArr; memp_malloc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timer_needed
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeouts_init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_thread
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_timer
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_timer
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arp_timer
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_timer
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_tcp_timer
</UL>

<P><STRONG><a name="[5ad]"></a>tcp_timer_needed</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = tcp_timer_needed &rArr; sys_timeout &rArr; memp_malloc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_with_backlog
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_bind
</UL>

<P><STRONG><a name="[56f]"></a>sys_timeouts_init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = sys_timeouts_init &rArr; sys_timeout &rArr; memp_malloc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[54f]"></a>sys_untimeout</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = sys_untimeout &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_thread
</UL>

<P><STRONG><a name="[54d]"></a>sys_timeouts_mbox_fetch</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = sys_timeouts_mbox_fetch &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_fetch
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_thread
</UL>

<P><STRONG><a name="[56b]"></a>udp_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, udp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[5d9]"></a>udp_input</STRONG> (Thumb, 786 bytes, Stack size 64 bytes, udp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624 + Unknown Stack Size
<LI>Call Chain = udp_input &rArr; icmp_dest_unreach &rArr; icmp_send_response &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_udpnoports
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_udpinerrors
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_udpindatagrams
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo_partial
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_dest_unreach
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[51b]"></a>udp_bind</STRONG> (Thumb, 316 bytes, Stack size 24 bytes, udp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = udp_bind &rArr; snmp_insert_udpidx_tree &rArr; snmp_mib_node_insert &rArr; snmp_mib_ln_alloc &rArr; memp_malloc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_insert_udpidx_tree
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new_port
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_init
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_init
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_connect
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_bind
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
</UL>

<P><STRONG><a name="[5e1]"></a>udp_sendto_if</STRONG> (Thumb, 468 bytes, Stack size 72 bytes, udp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = udp_sendto_if &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_chain
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_udpoutdatagrams
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo_partial
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
</UL>

<P><STRONG><a name="[525]"></a>udp_sendto</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, udp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_route
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
</UL>
<BR>[Called By]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_send
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_send
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_send
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_trap
</UL>

<P><STRONG><a name="[524]"></a>udp_send</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, udp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 576 + Unknown Stack Size
<LI>Call Chain = udp_send &rArr; udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_send
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_response
</UL>

<P><STRONG><a name="[51e]"></a>udp_connect</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, udp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = udp_connect &rArr; udp_bind &rArr; snmp_insert_udpidx_tree &rArr; snmp_mib_node_insert &rArr; snmp_mib_ln_alloc &rArr; memp_malloc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
</UL>
<BR>[Called By]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_send
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_connect
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_response
</UL>

<P><STRONG><a name="[520]"></a>udp_disconnect</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, udp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_disconnect
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_response
</UL>

<P><STRONG><a name="[514]"></a>udp_recv</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, udp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_init
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_init
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcb_new
</UL>

<P><STRONG><a name="[519]"></a>udp_remove</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, udp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = udp_remove &rArr; snmp_delete_udpidx_tree &rArr; snmp_mib_node_delete &rArr; snmp_mib_ln_free &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_udpidx_tree
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_delconn
</UL>

<P><STRONG><a name="[513]"></a>udp_new</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, udp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = udp_new &rArr; memp_malloc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_init
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_init
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcb_new
</UL>

<P><STRONG><a name="[5e4]"></a>icmp_input</STRONG> (Thumb, 664 bytes, Stack size 48 bytes, icmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = icmp_input &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_icmpoutmsgs
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_icmpoutechoreps
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_icmpinmsgs
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_icmpinerrors
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pbuf
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[5dd]"></a>icmp_dest_unreach</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, icmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = icmp_dest_unreach &rArr; icmp_send_response &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
</UL>
<BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_forward
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
</UL>

<P><STRONG><a name="[5ed]"></a>icmp_time_exceeded</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, icmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = icmp_time_exceeded &rArr; icmp_send_response &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
</UL>
<BR>[Called By]<UL><LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_forward
</UL>

<P><STRONG><a name="[56e]"></a>igmp_init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, igmp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[a6c]"></a>igmp_dump_group_list</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, igmp.o(.text), UNUSED)

<P><STRONG><a name="[5ef]"></a>igmp_lookfor_group</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, igmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = igmp_lookfor_group
</UL>
<BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_leavegroup
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_input
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_lookup_group
</UL>

<P><STRONG><a name="[589]"></a>igmp_start</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, igmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = igmp_start &rArr; igmp_lookup_group &rArr; memp_malloc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_lookup_group
</UL>
<BR>[Called By]<UL><LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_add
</UL>

<P><STRONG><a name="[58d]"></a>igmp_stop</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, igmp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_remove
</UL>

<P><STRONG><a name="[57e]"></a>igmp_report_groups</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, igmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = igmp_report_groups &rArr; igmp_delaying_member &rArr; igmp_start_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_delaying_member
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_link_up
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_up
</UL>

<P><STRONG><a name="[5f4]"></a>igmp_input</STRONG> (Thumb, 520 bytes, Stack size 40 bytes, igmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = igmp_input &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_lookfor_group
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_delaying_member
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum
</UL>
<BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[526]"></a>igmp_joingroup</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, igmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = igmp_joingroup &rArr; igmp_send &rArr; igmp_ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_send
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_start_timer
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_lookup_group
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt_internal
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_join_leave_group
</UL>

<P><STRONG><a name="[527]"></a>igmp_leavegroup</STRONG> (Thumb, 246 bytes, Stack size 24 bytes, igmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = igmp_leavegroup &rArr; igmp_send &rArr; igmp_ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_lookfor_group
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_send
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_remove_group
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt_internal
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_join_leave_group
</UL>

<P><STRONG><a name="[5d8]"></a>igmp_tmr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, igmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = igmp_tmr &rArr; igmp_timeout &rArr; igmp_send &rArr; igmp_ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_timer
</UL>

<P><STRONG><a name="[5cc]"></a>inet_chksum_pseudo</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, inet_chksum.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = inet_chksum_pseudo &rArr; lwip_standard_chksum
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_standard_chksum
</UL>
<BR>[Called By]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
</UL>

<P><STRONG><a name="[5db]"></a>inet_chksum_pseudo_partial</STRONG> (Thumb, 220 bytes, Stack size 56 bytes, inet_chksum.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = inet_chksum_pseudo_partial &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_standard_chksum
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
</UL>

<P><STRONG><a name="[5e8]"></a>inet_chksum</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, inet_chksum.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = inet_chksum &rArr; lwip_standard_chksum
</UL>
<BR>[Calls]<UL><LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_standard_chksum
</UL>
<BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_input
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_send
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
</UL>

<P><STRONG><a name="[5e6]"></a>inet_chksum_pbuf</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, inet_chksum.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = inet_chksum_pbuf &rArr; lwip_standard_chksum
</UL>
<BR>[Calls]<UL><LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_standard_chksum
</UL>
<BR>[Called By]<UL><LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
</UL>

<P><STRONG><a name="[59c]"></a>ip_route</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, ip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ip_route
</UL>
<BR>[Calls]<UL><LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_ipoutnoroutes
</UL>
<BR>[Called By]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_eff_send_mss
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_sendto
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_trap
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_forward
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
</UL>

<P><STRONG><a name="[4e8]"></a>ip_input</STRONG> (Thumb, 780 bytes, Stack size 32 bytes, ip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 776 + Unknown Stack Size
<LI>Call Chain = ip_input &rArr; tcp_input &rArr; tcp_listen_input &rArr; tcp_alloc &rArr; tcp_kill_prio &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_input
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_ipinunknownprotos
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_ipinreceives
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_ipinhdrerrors
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_ipindiscards
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_ipindelivers
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_ipinaddrerrors
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_forward
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_input
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_lookfor_group
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_dest_unreach
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
</UL>
<BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_poll
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_thread
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
</UL>

<P><STRONG><a name="[5f6]"></a>ip_output_if_opt</STRONG> (Thumb, 542 bytes, Stack size 56 bytes, ip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_loop_output
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_ipoutrequests
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_ipoutdiscards
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_ip_output_if
</UL>

<P><STRONG><a name="[59d]"></a>ip_output_if</STRONG> (Thumb, 52 bytes, Stack size 56 bytes, ip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if_opt
</UL>
<BR>[Called By]<UL><LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_sendto
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
</UL>

<P><STRONG><a name="[5d2]"></a>ip_output</STRONG> (Thumb, 102 bytes, Stack size 48 bytes, ip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_route
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
</UL>

<P><STRONG><a name="[4d9]"></a>ip4_addr_isbroadcast</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, ip_addr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ip4_addr_isbroadcast
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_update_arp_entry
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
</UL>

<P><STRONG><a name="[609]"></a>ip4_addr_netmask_valid</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ip_addr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
</UL>

<P><STRONG><a name="[60a]"></a>ipaddr_aton</STRONG> (Thumb, 362 bytes, Stack size 48 bytes, ip_addr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = ipaddr_aton &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_addr
</UL>

<P><STRONG><a name="[55c]"></a>ipaddr_addr</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, ip_addr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = ipaddr_addr &rArr; ipaddr_aton &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_aton
</UL>
<BR>[Called By]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_init
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_gethostbyname
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerTest
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClientTest
</UL>

<P><STRONG><a name="[60c]"></a>ipaddr_ntoa_r</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, ip_addr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_ntoa
</UL>

<P><STRONG><a name="[60b]"></a>ipaddr_ntoa</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ip_addr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_ntoa_r
</UL>

<P><STRONG><a name="[5d7]"></a>ip_reass_tmr</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ip_frag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = ip_reass_tmr &rArr; ip_reass_free_complete_datagram &rArr; icmp_time_exceeded &rArr; icmp_send_response &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_timer
</UL>

<P><STRONG><a name="[603]"></a>ip_reass</STRONG> (Thumb, 482 bytes, Stack size 40 bytes, ip_frag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = ip_reass &rArr; ip_reass_enqueue_new_datagram &rArr; ip_reass_remove_oldest_datagram &rArr; ip_reass_free_complete_datagram &rArr; icmp_time_exceeded &rArr; icmp_send_response &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_ipreasmreqds
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_chain_frag_into_datagram_and_validate
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_enqueue_new_datagram
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_remove_oldest_datagram
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_dequeue_datagram
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[5ff]"></a>ip_frag</STRONG> (Thumb, 650 bytes, Stack size 96 bytes, ip_frag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloced_custom
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_ref
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_ipfragoks
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag_free_pbuf_custom_ref
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag_alloc_pbuf_custom_ref
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_forward
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if_opt
</UL>

<P><STRONG><a name="[638]"></a>snmp_asn1_dec_type</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, asn1_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = snmp_asn1_dec_type
</UL>
<BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_header_check
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_dec_varbindlist
</UL>

<P><STRONG><a name="[639]"></a>snmp_asn1_dec_length</STRONG> (Thumb, 328 bytes, Stack size 24 bytes, asn1_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = snmp_asn1_dec_length
</UL>
<BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_header_check
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_dec_varbindlist
</UL>

<P><STRONG><a name="[63d]"></a>snmp_asn1_dec_u32t</STRONG> (Thumb, 186 bytes, Stack size 20 bytes, asn1_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = snmp_asn1_dec_u32t
</UL>
<BR>[Called By]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_dec_varbindlist
</UL>

<P><STRONG><a name="[63c]"></a>snmp_asn1_dec_s32t</STRONG> (Thumb, 218 bytes, Stack size 28 bytes, asn1_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = snmp_asn1_dec_s32t
</UL>
<BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_header_check
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_dec_varbindlist
</UL>

<P><STRONG><a name="[63b]"></a>snmp_asn1_dec_oid</STRONG> (Thumb, 360 bytes, Stack size 24 bytes, asn1_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = snmp_asn1_dec_oid
</UL>
<BR>[Called By]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_dec_varbindlist
</UL>

<P><STRONG><a name="[63e]"></a>snmp_asn1_dec_raw</STRONG> (Thumb, 116 bytes, Stack size 20 bytes, asn1_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = snmp_asn1_dec_raw
</UL>
<BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_header_check
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_dec_varbindlist
</UL>

<P><STRONG><a name="[65b]"></a>snmp_asn1_enc_length_cnt</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, asn1_enc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_trap_header_sum
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_list_sum
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_resp_header_sum
</UL>

<P><STRONG><a name="[65d]"></a>snmp_asn1_enc_u32t_cnt</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, asn1_enc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_trap_header_sum
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_list_sum
</UL>

<P><STRONG><a name="[65a]"></a>snmp_asn1_enc_s32t_cnt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, asn1_enc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_trap_header_sum
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_list_sum
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_resp_header_sum
</UL>

<P><STRONG><a name="[65e]"></a>snmp_asn1_enc_oid_cnt</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, asn1_enc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = snmp_asn1_enc_oid_cnt
</UL>
<BR>[Called By]<UL><LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_trap_header_sum
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_list_sum
</UL>

<P><STRONG><a name="[652]"></a>snmp_asn1_enc_type</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, asn1_enc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = snmp_asn1_enc_type
</UL>
<BR>[Called By]<UL><LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_trap_header_enc
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_resp_header_enc
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_list_enc
</UL>

<P><STRONG><a name="[653]"></a>snmp_asn1_enc_length</STRONG> (Thumb, 148 bytes, Stack size 20 bytes, asn1_enc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = snmp_asn1_enc_length
</UL>
<BR>[Called By]<UL><LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_trap_header_enc
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_resp_header_enc
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_list_enc
</UL>

<P><STRONG><a name="[656]"></a>snmp_asn1_enc_u32t</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, asn1_enc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = snmp_asn1_enc_u32t
</UL>
<BR>[Called By]<UL><LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_trap_header_enc
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_list_enc
</UL>

<P><STRONG><a name="[655]"></a>snmp_asn1_enc_s32t</STRONG> (Thumb, 96 bytes, Stack size 20 bytes, asn1_enc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = snmp_asn1_enc_s32t
</UL>
<BR>[Called By]<UL><LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_trap_header_enc
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_resp_header_enc
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_list_enc
</UL>

<P><STRONG><a name="[654]"></a>snmp_asn1_enc_oid</STRONG> (Thumb, 278 bytes, Stack size 32 bytes, asn1_enc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = snmp_asn1_enc_oid
</UL>
<BR>[Called By]<UL><LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_trap_header_enc
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_list_enc
</UL>

<P><STRONG><a name="[657]"></a>snmp_asn1_enc_raw</STRONG> (Thumb, 98 bytes, Stack size 20 bytes, asn1_enc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = snmp_asn1_enc_raw
</UL>
<BR>[Called By]<UL><LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_trap_header_enc
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_resp_header_enc
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_list_enc
</UL>

<P><STRONG><a name="[621]"></a>objectidncpy</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = objectidncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ifentry_get_value
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_get_value
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_rteentry_get_value
</UL>

<P><STRONG><a name="[a6d]"></a>snmp_set_sysdesr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[a6e]"></a>snmp_get_sysobjid_ptr</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[617]"></a>snmp_set_sysobjid</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, mib2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[a6f]"></a>snmp_inc_sysuptime</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[a70]"></a>snmp_add_sysuptime</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[57d]"></a>snmp_get_sysuptime</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = snmp_get_sysuptime &rArr; sys_now &rArr; sys_get_ms &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_now
</UL>
<BR>[Called By]<UL><LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_down
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_up
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_trap
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_get_value
</UL>

<P><STRONG><a name="[a71]"></a>snmp_set_syscontact</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[a72]"></a>snmp_set_sysname</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[a73]"></a>snmp_set_syslocation</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[576]"></a>snmp_add_ifinoctets</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_poll
</UL>

<P><STRONG><a name="[577]"></a>snmp_inc_ifinucastpkts</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_poll
</UL>

<P><STRONG><a name="[a74]"></a>snmp_inc_ifinnucastpkts</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[a75]"></a>snmp_inc_ifindiscards</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[57a]"></a>snmp_add_ifoutoctets</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_loop_output
</UL>

<P><STRONG><a name="[57b]"></a>snmp_inc_ifoutucastpkts</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_loop_output
</UL>

<P><STRONG><a name="[a76]"></a>snmp_inc_ifoutnucastpkts</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[579]"></a>snmp_inc_ifoutdiscards</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_loop_output
</UL>

<P><STRONG><a name="[588]"></a>snmp_inc_iflist</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = snmp_inc_iflist &rArr; snmp_mib_node_insert &rArr; snmp_mib_ln_alloc &rArr; memp_malloc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_node_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_add
</UL>

<P><STRONG><a name="[58e]"></a>snmp_dec_iflist</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, mib2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_node_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_remove
</UL>

<P><STRONG><a name="[d]"></a>noleafs_set_value</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mib2.o(.text))
<BR>[Address Reference Count : 4]<UL><LI> mib2.o(.text)
<LI> mib2.o(.constdata)
<LI> mib2.o(.data)
<LI> mib_structs.o(.text)
</UL>
<P><STRONG><a name="[c]"></a>noleafs_set_test</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mib2.o(.text))
<BR>[Address Reference Count : 4]<UL><LI> mib2.o(.text)
<LI> mib2.o(.constdata)
<LI> mib2.o(.data)
<LI> mib_structs.o(.text)
</UL>
<P><STRONG><a name="[4da]"></a>snmp_insert_arpidx_tree</STRONG> (Thumb, 364 bytes, Stack size 48 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = snmp_insert_arpidx_tree &rArr; snmp_mib_node_insert &rArr; snmp_mib_ln_alloc &rArr; memp_malloc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_netiftoifindex
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_node_insert
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_lrn_alloc
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_iptooid
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_update_arp_entry
</UL>

<P><STRONG><a name="[4d4]"></a>snmp_delete_arpidx_tree</STRONG> (Thumb, 250 bytes, Stack size 104 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = snmp_delete_arpidx_tree &rArr; snmp_mib_node_delete &rArr; snmp_mib_ln_free &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_netiftoifindex
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_node_find
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_node_delete
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_lrn_free
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_iptooid
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_free_entry
</UL>

<P><STRONG><a name="[600]"></a>snmp_inc_ipinreceives</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[5fd]"></a>snmp_inc_ipinhdrerrors</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_forward
</UL>

<P><STRONG><a name="[602]"></a>snmp_inc_ipinaddrerrors</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[5fe]"></a>snmp_inc_ipforwdatagrams</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_forward
</UL>

<P><STRONG><a name="[606]"></a>snmp_inc_ipinunknownprotos</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[601]"></a>snmp_inc_ipindiscards</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[605]"></a>snmp_inc_ipindelivers</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[607]"></a>snmp_inc_ipoutrequests</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if_opt
</UL>

<P><STRONG><a name="[608]"></a>snmp_inc_ipoutdiscards</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if_opt
</UL>

<P><STRONG><a name="[5fa]"></a>snmp_inc_ipoutnoroutes</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_route
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_forward
</UL>

<P><STRONG><a name="[613]"></a>snmp_inc_ipreasmreqds</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
</UL>

<P><STRONG><a name="[a77]"></a>snmp_inc_ipreasmoks</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[60f]"></a>snmp_inc_ipreasmfails</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
</UL>

<P><STRONG><a name="[616]"></a>snmp_inc_ipfragoks</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
</UL>

<P><STRONG><a name="[a78]"></a>snmp_inc_ipfragfails</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[a79]"></a>snmp_inc_ipfragcreates</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[a7a]"></a>snmp_inc_iproutingdiscards</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[584]"></a>snmp_insert_ipaddridx_tree</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = snmp_insert_ipaddridx_tree &rArr; snmp_mib_node_insert &rArr; snmp_mib_ln_alloc &rArr; memp_malloc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_node_insert
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_lrn_alloc
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_iptooid
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_ipaddr
</UL>

<P><STRONG><a name="[583]"></a>snmp_delete_ipaddridx_tree</STRONG> (Thumb, 358 bytes, Stack size 80 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = snmp_delete_ipaddridx_tree &rArr; snmp_mib_node_delete &rArr; snmp_mib_ln_free &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_node_find
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_node_delete
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_lrn_free
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_iptooid
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_remove
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_ipaddr
</UL>

<P><STRONG><a name="[581]"></a>snmp_insert_iprteidx_tree</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = snmp_insert_iprteidx_tree &rArr; snmp_mib_node_insert &rArr; snmp_mib_ln_alloc &rArr; memp_malloc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_node_insert
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_lrn_alloc
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_iptooid
</UL>
<BR>[Called By]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_default
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_ipaddr
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_netmask
</UL>

<P><STRONG><a name="[580]"></a>snmp_delete_iprteidx_tree</STRONG> (Thumb, 258 bytes, Stack size 96 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = snmp_delete_iprteidx_tree &rArr; snmp_mib_node_delete &rArr; snmp_mib_ln_free &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_node_find
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_node_delete
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_lrn_free
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_iptooid
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_default
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_ipaddr
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_netmask
</UL>

<P><STRONG><a name="[5e5]"></a>snmp_inc_icmpinmsgs</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
</UL>

<P><STRONG><a name="[5e7]"></a>snmp_inc_icmpinerrors</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
</UL>

<P><STRONG><a name="[a7b]"></a>snmp_inc_icmpindestunreachs</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[a7c]"></a>snmp_inc_icmpintimeexcds</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[a7d]"></a>snmp_inc_icmpinparmprobs</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[a7e]"></a>snmp_inc_icmpinsrcquenchs</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[a7f]"></a>snmp_inc_icmpinredirects</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[a80]"></a>snmp_inc_icmpinechos</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[a81]"></a>snmp_inc_icmpinechoreps</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[a82]"></a>snmp_inc_icmpintimestamps</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[a83]"></a>snmp_inc_icmpintimestampreps</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[a84]"></a>snmp_inc_icmpinaddrmasks</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[a85]"></a>snmp_inc_icmpinaddrmaskreps</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[5e9]"></a>snmp_inc_icmpoutmsgs</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
</UL>

<P><STRONG><a name="[a86]"></a>snmp_inc_icmpouterrors</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[a87]"></a>snmp_inc_icmpoutdestunreachs</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[5ec]"></a>snmp_inc_icmpouttimeexcds</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
</UL>

<P><STRONG><a name="[a88]"></a>snmp_inc_icmpoutparmprobs</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[a89]"></a>snmp_inc_icmpoutsrcquenchs</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[a8a]"></a>snmp_inc_icmpoutredirects</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[a8b]"></a>snmp_inc_icmpoutechos</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[5ea]"></a>snmp_inc_icmpoutechoreps</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
</UL>

<P><STRONG><a name="[a8c]"></a>snmp_inc_icmpouttimestamps</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[a8d]"></a>snmp_inc_icmpouttimestampreps</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[a8e]"></a>snmp_inc_icmpoutaddrmasks</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[a8f]"></a>snmp_inc_icmpoutaddrmaskreps</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[5bb]"></a>snmp_inc_tcpactiveopens</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
</UL>

<P><STRONG><a name="[5c8]"></a>snmp_inc_tcppassiveopens</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
</UL>

<P><STRONG><a name="[5ae]"></a>snmp_inc_tcpattemptfails</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
</UL>

<P><STRONG><a name="[5b0]"></a>snmp_inc_tcpestabresets</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
</UL>

<P><STRONG><a name="[5cb]"></a>snmp_inc_tcpinsegs</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL>

<P><STRONG><a name="[5d4]"></a>snmp_inc_tcpoutsegs</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_segment
</UL>

<P><STRONG><a name="[5d6]"></a>snmp_inc_tcpretranssegs</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit
</UL>

<P><STRONG><a name="[5cd]"></a>snmp_inc_tcpinerrs</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL>

<P><STRONG><a name="[5d5]"></a>snmp_inc_tcpoutrsts</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
</UL>

<P><STRONG><a name="[5dc]"></a>snmp_inc_udpindatagrams</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
</UL>

<P><STRONG><a name="[5de]"></a>snmp_inc_udpnoports</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
</UL>

<P><STRONG><a name="[5da]"></a>snmp_inc_udpinerrors</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
</UL>

<P><STRONG><a name="[5e2]"></a>snmp_inc_udpoutdatagrams</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
</UL>

<P><STRONG><a name="[5e0]"></a>snmp_insert_udpidx_tree</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = snmp_insert_udpidx_tree &rArr; snmp_mib_node_insert &rArr; snmp_mib_ln_alloc &rArr; memp_malloc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_node_insert
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_lrn_alloc
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_iptooid
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
</UL>

<P><STRONG><a name="[5e3]"></a>snmp_delete_udpidx_tree</STRONG> (Thumb, 494 bytes, Stack size 104 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = snmp_delete_udpidx_tree &rArr; snmp_mib_node_delete &rArr; snmp_mib_ln_free &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_node_find
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_node_delete
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_lrn_free
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_iptooid
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_remove
</UL>

<P><STRONG><a name="[64f]"></a>snmp_inc_snmpinpkts</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_recv
</UL>

<P><STRONG><a name="[664]"></a>snmp_inc_snmpoutpkts</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_trap
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_response
</UL>

<P><STRONG><a name="[642]"></a>snmp_inc_snmpinbadversions</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_header_check
</UL>

<P><STRONG><a name="[643]"></a>snmp_inc_snmpinbadcommunitynames</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_header_check
</UL>

<P><STRONG><a name="[a90]"></a>snmp_inc_snmpinbadcommunityuses</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[63a]"></a>snmp_inc_snmpinasnparseerrs</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_header_check
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_dec_varbindlist
</UL>

<P><STRONG><a name="[64a]"></a>snmp_inc_snmpintoobigs</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_header_check
</UL>

<P><STRONG><a name="[64b]"></a>snmp_inc_snmpinnosuchnames</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_header_check
</UL>

<P><STRONG><a name="[64c]"></a>snmp_inc_snmpinbadvalues</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_header_check
</UL>

<P><STRONG><a name="[64d]"></a>snmp_inc_snmpinreadonlys</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_header_check
</UL>

<P><STRONG><a name="[64e]"></a>snmp_inc_snmpingenerrs</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_header_check
</UL>

<P><STRONG><a name="[640]"></a>snmp_add_snmpintotalreqvars</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_dec_varbindlist
</UL>

<P><STRONG><a name="[63f]"></a>snmp_add_snmpintotalsetvars</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_dec_varbindlist
</UL>

<P><STRONG><a name="[645]"></a>snmp_inc_snmpingetrequests</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_header_check
</UL>

<P><STRONG><a name="[646]"></a>snmp_inc_snmpingetnexts</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_header_check
</UL>

<P><STRONG><a name="[648]"></a>snmp_inc_snmpinsetrequests</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_header_check
</UL>

<P><STRONG><a name="[647]"></a>snmp_inc_snmpingetresponses</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_header_check
</UL>

<P><STRONG><a name="[649]"></a>snmp_inc_snmpintraps</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_header_check
</UL>

<P><STRONG><a name="[65f]"></a>snmp_inc_snmpouttoobigs</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_response
</UL>

<P><STRONG><a name="[660]"></a>snmp_inc_snmpoutnosuchnames</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_response
</UL>

<P><STRONG><a name="[661]"></a>snmp_inc_snmpoutbadvalues</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_response
</UL>

<P><STRONG><a name="[662]"></a>snmp_inc_snmpoutgenerrs</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_response
</UL>

<P><STRONG><a name="[a91]"></a>snmp_inc_snmpoutgetrequests</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[a92]"></a>snmp_inc_snmpoutgetnexts</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[a93]"></a>snmp_inc_snmpoutsetrequests</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[663]"></a>snmp_inc_snmpoutgetresponses</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_response
</UL>

<P><STRONG><a name="[669]"></a>snmp_inc_snmpouttraps</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_trap
</UL>

<P><STRONG><a name="[668]"></a>snmp_get_snmpgrpid_ptr</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_trap
</UL>

<P><STRONG><a name="[a94]"></a>snmp_set_snmpenableauthentraps</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mib2.o(.text), UNUSED)

<P><STRONG><a name="[66a]"></a>snmp_get_snmpenableauthentraps</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mib2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_authfail_trap
</UL>

<P><STRONG><a name="[a]"></a>noleafs_get_object_def</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mib2.o(.text))
<BR>[Address Reference Count : 3]<UL><LI> mib2.o(.constdata)
<LI> mib2.o(.data)
<LI> mib_structs.o(.text)
</UL>
<P><STRONG><a name="[b]"></a>noleafs_get_value</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mib2.o(.text))
<BR>[Address Reference Count : 3]<UL><LI> mib2.o(.constdata)
<LI> mib2.o(.data)
<LI> mib_structs.o(.text)
</UL>
<P><STRONG><a name="[61a]"></a>snmp_ifindextonetif</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, mib_structs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = snmp_ifindextonetif
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ifentry_get_value
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ifentry_get_object_def
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atentry_get_value
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_ntomentry_get_value
</UL>

<P><STRONG><a name="[61c]"></a>snmp_netiftoifindex</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, mib_structs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = snmp_netiftoifindex
</UL>
<BR>[Called By]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_insert_arpidx_tree
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_arpidx_tree
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_rteentry_get_value
</UL>

<P><STRONG><a name="[61b]"></a>snmp_oidtoip</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mib_structs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udpentry_get_value
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_rteentry_get_value
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_addrentry_get_value
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atentry_get_value
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_ntomentry_get_value
</UL>

<P><STRONG><a name="[61d]"></a>snmp_iptooid</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mib_structs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_insert_iprteidx_tree
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_insert_ipaddridx_tree
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_iprteidx_tree
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_ipaddridx_tree
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_insert_arpidx_tree
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_arpidx_tree
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_insert_udpidx_tree
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_udpidx_tree
</UL>

<P><STRONG><a name="[624]"></a>snmp_mib_ln_alloc</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, mib_structs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = snmp_mib_ln_alloc &rArr; memp_malloc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_node_insert
</UL>

<P><STRONG><a name="[625]"></a>snmp_mib_ln_free</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, mib_structs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = snmp_mib_ln_free &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_node_delete
</UL>

<P><STRONG><a name="[61e]"></a>snmp_mib_lrn_alloc</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, mib_structs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = snmp_mib_lrn_alloc &rArr; memp_malloc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_insert_iprteidx_tree
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_insert_ipaddridx_tree
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_insert_arpidx_tree
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_insert_udpidx_tree
</UL>

<P><STRONG><a name="[620]"></a>snmp_mib_lrn_free</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, mib_structs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = snmp_mib_lrn_free &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_iprteidx_tree
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_ipaddridx_tree
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_arpidx_tree
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_udpidx_tree
</UL>

<P><STRONG><a name="[618]"></a>snmp_mib_node_insert</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, mib_structs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = snmp_mib_node_insert &rArr; snmp_mib_ln_alloc &rArr; memp_malloc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_ln_alloc
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_insert_iprteidx_tree
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_insert_ipaddridx_tree
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_iflist
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_insert_arpidx_tree
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_insert_udpidx_tree
</UL>

<P><STRONG><a name="[61f]"></a>snmp_mib_node_find</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, mib_structs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = snmp_mib_node_find &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_iprteidx_tree
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_ipaddridx_tree
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_arpidx_tree
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_udpidx_tree
</UL>

<P><STRONG><a name="[619]"></a>snmp_mib_node_delete</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, mib_structs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = snmp_mib_node_delete &rArr; snmp_mib_ln_free &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_ln_free
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_iprteidx_tree
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_ipaddridx_tree
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_dec_iflist
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_arpidx_tree
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_udpidx_tree
</UL>

<P><STRONG><a name="[630]"></a>snmp_search_tree</STRONG> (Thumb, 586 bytes, Stack size 48 bytes, mib_structs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = snmp_search_tree
</UL>
<BR>[Called By]<UL><LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_get_event
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_set_event
</UL>

<P><STRONG><a name="[626]"></a>snmp_expand_tree</STRONG> (Thumb, 1324 bytes, Stack size 64 bytes, mib_structs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = snmp_expand_tree &rArr; push_node &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;empty_table
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pop_node
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_node
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_getnext_event
</UL>

<P><STRONG><a name="[62f]"></a>snmp_iso_prefix_tst</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, mib_structs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_get_event
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_set_event
</UL>

<P><STRONG><a name="[635]"></a>snmp_iso_prefix_expand</STRONG> (Thumb, 78 bytes, Stack size 20 bytes, mib_structs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = snmp_iso_prefix_expand
</UL>
<BR>[Called By]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_getnext_event
</UL>

<P><STRONG><a name="[629]"></a>snmp_varbind_free</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, msg_in.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = snmp_varbind_free &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_list_free
</UL>

<P><STRONG><a name="[62a]"></a>snmp_varbind_list_free</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, msg_in.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = snmp_varbind_list_free &rArr; snmp_varbind_free &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_free
</UL>
<BR>[Called By]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_dec_varbindlist
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_error_response
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_ok_response
</UL>

<P><STRONG><a name="[632]"></a>snmp_varbind_tail_add</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, msg_in.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_dec_varbindlist
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_getnext_event
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_get_event
</UL>

<P><STRONG><a name="[633]"></a>snmp_varbind_alloc</STRONG> (Thumb, 226 bytes, Stack size 24 bytes, msg_in.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = snmp_varbind_alloc &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_dec_varbindlist
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_getnext_event
</UL>

<P><STRONG><a name="[636]"></a>snmp_msg_event</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, msg_in.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 824 + Unknown Stack Size
<LI>Call Chain = snmp_msg_event &rArr; snmp_msg_getnext_event &rArr; snmp_error_response &rArr; snmp_send_response &rArr; udp_send &rArr; udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_getnext_event
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_get_event
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_set_event
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_recv
</UL>

<P><STRONG><a name="[56d]"></a>snmp_init</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, msg_in.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = snmp_init &rArr; snmp_coldstart_trap &rArr; snmp_send_trap &rArr; udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_recv
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_coldstart_trap
</UL>
<BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_init
</UL>

<P><STRONG><a name="[a95]"></a>snmp_varbind_tail_remove</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, msg_in.o(.text), UNUSED)

<P><STRONG><a name="[a96]"></a>snmp_trap_dst_enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, msg_out.o(.text), UNUSED)

<P><STRONG><a name="[a97]"></a>snmp_trap_dst_ip_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, msg_out.o(.text), UNUSED)

<P><STRONG><a name="[62c]"></a>snmp_send_response</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, msg_out.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = snmp_send_response &rArr; udp_send &rArr; udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_send
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_disconnect
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_connect
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_list_sum
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_resp_header_sum
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_resp_header_enc
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_list_enc
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_snmpoutgetresponses
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_snmpoutgenerrs
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_snmpoutbadvalues
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_snmpoutnosuchnames
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_snmpouttoobigs
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_snmpoutpkts
</UL>
<BR>[Called By]<UL><LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_error_response
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_ok_response
</UL>

<P><STRONG><a name="[667]"></a>snmp_send_trap</STRONG> (Thumb, 226 bytes, Stack size 48 bytes, msg_out.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = snmp_send_trap &rArr; udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_route
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_get_sysuptime
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_trap_header_sum
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_trap_header_enc
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_list_sum
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_list_enc
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_get_snmpgrpid_ptr
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_snmpouttraps
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_snmpoutpkts
</UL>
<BR>[Called By]<UL><LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_coldstart_trap
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_authfail_trap
</UL>

<P><STRONG><a name="[650]"></a>snmp_coldstart_trap</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, msg_out.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = snmp_coldstart_trap &rArr; snmp_send_trap &rArr; udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_trap
</UL>
<BR>[Called By]<UL><LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_init
</UL>

<P><STRONG><a name="[644]"></a>snmp_authfail_trap</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, msg_out.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = snmp_authfail_trap &rArr; snmp_send_trap &rArr; udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_trap
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_get_snmpenableauthentraps
</UL>
<BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_header_check
</UL>

<P><STRONG><a name="[1ad]"></a>ethernetif_frame_ready</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ethernetif.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = ethernetif_frame_ready &rArr; sys_sem_signal &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_IntCmd
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENET_IRQHandler
</UL>

<P><STRONG><a name="[8e]"></a>ethernetif_init</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, ethernetif.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = ethernetif_init &rArr; mem_malloc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_malloc
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_init
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_main.o(.text)
</UL>
<P><STRONG><a name="[285]"></a>App_TaskCreateHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_hooks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateHook
</UL>

<P><STRONG><a name="[286]"></a>App_TaskDelHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_hooks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelHook
</UL>

<P><STRONG><a name="[287]"></a>App_TaskIdleHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_hooks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskIdleHook
</UL>

<P><STRONG><a name="[28a]"></a>App_TaskStatHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_hooks.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStatHook
</UL>

<P><STRONG><a name="[28b]"></a>App_TaskSwHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_hooks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSwHook
</UL>

<P><STRONG><a name="[28c]"></a>App_TCBInitHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_hooks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTCBInitHook
</UL>

<P><STRONG><a name="[28d]"></a>App_TimeTickHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_hooks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTickHook
</UL>

<P><STRONG><a name="[288]"></a>App_TaskReturnHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_hooks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskReturnHook
</UL>

<P><STRONG><a name="[b1]"></a>fputc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, jlink_putc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_file.o(.text)
</UL>
<P><STRONG><a name="[672]"></a>ClientTest</STRONG> (Thumb, 194 bytes, Stack size 72 bytes, tcp_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = ClientTest &rArr; lwip_send &rArr; lwip_sendto &rArr;  lwip_send (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_addr
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_shutdown
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_send
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_connect
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tcp_test.o(.text)
</UL>
<P><STRONG><a name="[674]"></a>ServerTest</STRONG> (Thumb, 250 bytes, Stack size 80 bytes, tcp_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = ServerTest &rArr; lwip_recv &rArr; lwip_recvfrom &rArr; netconn_recv &rArr; netconn_recv_data &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_addr
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recv
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_listen
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_bind
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tcp_test.o(.text)
</UL>
<P><STRONG><a name="[675]"></a>TCPTest</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, tcp_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = TCPTest &rArr; OSTaskCreateExt &rArr; OS_TCBInit &rArr; OSTaskCreateHook
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStart
</UL>

<P><STRONG><a name="[2b]"></a>EINT0_IRQHandler</STRONG> (Thumb, 744 bytes, Stack size 8 bytes, user_key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = EINT0_IRQHandler &rArr; OSQPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearEXTIFlag
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPost
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, user_key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = TIMER2_IRQHandler &rArr; TIM_GetIntStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearIntPending
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetIntStatus
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc177x_8x.o(RESET)
</UL>
<P><STRONG><a name="[67b]"></a>KeyInit</STRONG> (Thumb, 226 bytes, Stack size 24 bytes, user_key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = KeyInit &rArr; TIM_Init &rArr; converUSecToVal &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Config
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ConfigMatch
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Init
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStart
</UL>

<P><STRONG><a name="[67f]"></a>App_KeyTaskCreate</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, user_key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = App_KeyTaskCreate &rArr; OSTaskCreate &rArr; OS_TCBInit &rArr; OSTaskCreateHook
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStart
</UL>

<P><STRONG><a name="[680]"></a>_OnPaintBrowsTestpoint</STRONG> (Thumb, 1722 bytes, Stack size 80 bytes, user_browstestpoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = _OnPaintBrowsTestpoint &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSensorName
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx (via Veneer)
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont (via Veneer)
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor (via Veneer)
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt (via Veneer)
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBrowsTestpoint
</UL>

<P><STRONG><a name="[687]"></a>_InitBrowsTestpointDialog</STRONG> (Thumb, 1654 bytes, Stack size 80 bytes, user_browstestpoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = _InitBrowsTestpointDialog &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSensorName
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx (via Veneer)
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont (via Veneer)
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor (via Veneer)
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt (via Veneer)
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBrowsTestpoint
</UL>

<P><STRONG><a name="[9d]"></a>_cbBrowsTestpoint</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, user_browstestpoint.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = _cbBrowsTestpoint &rArr; _InitBrowsTestpointDialog &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus (via Veneer)
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId (via Veneer)
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc (via Veneer)
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog (via Veneer)
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitBrowsTestpointDialog
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintBrowsTestpoint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_menu.o(.text)
</UL>
<P><STRONG><a name="[68c]"></a>_OnPaintDispBackpower</STRONG> (Thumb, 622 bytes, Stack size 16 bytes, user_dispbackpower.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = _OnPaintDispBackpower &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx (via Veneer)
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont (via Veneer)
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor (via Veneer)
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDispBackpower
</UL>

<P><STRONG><a name="[68d]"></a>_InitDispBackpowerDialog</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_dispbackpower.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDispBackpower
</UL>

<P><STRONG><a name="[93]"></a>_cbDispBackpower</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, user_dispbackpower.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = _cbDispBackpower &rArr; _OnPaintDispBackpower &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDispBackpowerDialog
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintDispBackpower
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus (via Veneer)
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId (via Veneer)
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc (via Veneer)
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_menu.o(.text)
</UL>
<P><STRONG><a name="[68e]"></a>_OnPaintDispConnect</STRONG> (Thumb, 554 bytes, Stack size 16 bytes, user_dispconnect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = _OnPaintDispConnect &rArr; GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap (via Veneer)
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx (via Veneer)
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont (via Veneer)
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor (via Veneer)
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDispConnect
</UL>

<P><STRONG><a name="[690]"></a>_InitDispConnectDialog</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_dispconnect.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDispConnect
</UL>

<P><STRONG><a name="[94]"></a>_cbDispConnect</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, user_dispconnect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = _cbDispConnect &rArr; _OnPaintDispConnect &rArr; GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitDispConnectDialog
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintDispConnect
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus (via Veneer)
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId (via Veneer)
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc (via Veneer)
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_menu.o(.text)
</UL>
<P><STRONG><a name="[693]"></a>eth_netif_init</STRONG> (Thumb, 132 bytes, Stack size 48 bytes, user_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 768 + Unknown Stack Size
<LI>Call Chain = eth_netif_init &rArr; netif_add &rArr; netif_set_addr &rArr; netif_set_ipaddr &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_add
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_set_up
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStart
</UL>

<P><STRONG><a name="[694]"></a>tcpip_init_done</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, user_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = tcpip_init_done &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_main.o(.text)
</UL>
<P><STRONG><a name="[69d]"></a>Display_Logo</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, user_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = Display_Logo &rArr; GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect (via Veneer)
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap (via Veneer)
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[136]"></a>main</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, user_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = main &rArr; GUI_Init &rArr; WM_Init &rArr; WM_CreateWindow &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT21L16S2W_SSP_Init
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_GetCLK
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickInit
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M25P128_SSP_Init
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPC_Uart_Init
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init (via Veneer)
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Logo
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Time_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[6a1]"></a>Display_ProgressBar</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, user_main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec (via Veneer)
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue (via Veneer)
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetBarColor (via Veneer)
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Create (via Veneer)
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect (via Veneer)
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap (via Veneer)
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor (via Veneer)
</UL>

<P><STRONG><a name="[6b6]"></a>InitListview</STRONG> (Thumb, 266 bytes, Stack size 232 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = InitListview &rArr; LISTVIEW_CreateEx &rArr; HEADER_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetTextColor (via Veneer)
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight (via Veneer)
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis (via Veneer)
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetDefaultGridColor (via Veneer)
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor (via Veneer)
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateEx
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StartReversi
</UL>

<P><STRONG><a name="[91]"></a>Menu_Task</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = Menu_Task &rArr; _StartReversi &rArr; InitListview &rArr; LISTVIEW_CreateEx &rArr; HEADER_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCreateFlags (via Veneer)
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow (via Veneer)
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow (via Veneer)
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow (via Veneer)
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_EnableMemdev (via Veneer)
<LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay (via Veneer)
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StartReversi
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_main.o(.text)
</UL>
<P><STRONG><a name="[6cc]"></a>_OnPaintSetAddr</STRONG> (Thumb, 312 bytes, Stack size 16 bytes, user_setaddr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = _OnPaintSetAddr &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx (via Veneer)
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont (via Veneer)
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor (via Veneer)
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetAddr
</UL>

<P><STRONG><a name="[6cd]"></a>_InitSetAddrDialog</STRONG> (Thumb, 582 bytes, Stack size 16 bytes, user_setaddr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = _InitSetAddrDialog &rArr; EDIT_SetText &rArr; _IsSpaceInBuffer &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem (via Veneer)
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText (via Veneer)
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetAddr
</UL>

<P><STRONG><a name="[6d2]"></a>_checkBitIP</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, user_setaddr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _checkBitIP
</UL>
<BR>[Called By]<UL><LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_checkUserInputIP
</UL>

<P><STRONG><a name="[6d0]"></a>_checkUserInputIP</STRONG> (Thumb, 690 bytes, Stack size 16 bytes, user_setaddr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = _checkUserInputIP &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem (via Veneer)
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetText (via Veneer)
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_checkBitIP
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetAddr
</UL>

<P><STRONG><a name="[6d4]"></a>_getUserInputIP</STRONG> (Thumb, 768 bytes, Stack size 24 bytes, user_setaddr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = _getUserInputIP &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem (via Veneer)
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetText (via Veneer)
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetAddr
</UL>

<P><STRONG><a name="[6d5]"></a>_changeAddrEdit</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, user_setaddr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _changeAddrEdit &rArr; EDIT_SetCursorAtChar &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem (via Veneer)
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtChar (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetAddr
</UL>

<P><STRONG><a name="[95]"></a>_cbSetAddr</STRONG> (Thumb, 308 bytes, Stack size 72 bytes, user_setaddr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = _cbSetAddr &rArr; _getUserInputIP &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteStruct
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_changeAddrEdit
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_getUserInputIP
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_checkUserInputIP
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitSetAddrDialog
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSetAddr
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus (via Veneer)
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId (via Veneer)
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc (via Veneer)
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog (via Veneer)
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_menu.o(.text)
</UL>
<P><STRONG><a name="[6d8]"></a>_OnPaintSetConnect</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, user_setconnect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = _OnPaintSetConnect &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx (via Veneer)
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont (via Veneer)
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor (via Veneer)
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetConnect
</UL>

<P><STRONG><a name="[6d9]"></a>_InitSetConnectDialog</STRONG> (Thumb, 314 bytes, Stack size 16 bytes, user_setconnect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = _InitSetConnectDialog &rArr; DROPDOWN_AddString &rArr; GUI_ARRAY_AddItem &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel (via Veneer)
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString (via Veneer)
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetConnect
</UL>

<P><STRONG><a name="[6dc]"></a>_GetConnectDialog</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, user_setconnect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = _GetConnectDialog &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel (via Veneer)
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetConnect
</UL>

<P><STRONG><a name="[96]"></a>_cbSetConnect</STRONG> (Thumb, 180 bytes, Stack size 72 bytes, user_setconnect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = _cbSetConnect &rArr; _InitSetConnectDialog &rArr; DROPDOWN_AddString &rArr; GUI_ARRAY_AddItem &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetConnectDialog
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitSetConnectDialog
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSetConnect
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteStruct
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus (via Veneer)
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId (via Veneer)
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc (via Veneer)
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog (via Veneer)
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_menu.o(.text)
</UL>
<P><STRONG><a name="[6de]"></a>PaintDialog_kb</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, user_setpassword.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = PaintDialog_kb &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx (via Veneer)
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont (via Veneer)
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor (via Veneer)
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetPassword
</UL>

<P><STRONG><a name="[6df]"></a>InitDialog_kb</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, user_setpassword.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = InitDialog_kb &rArr; FRAMEWIN_SetTitleHeight &rArr; FRAMEWIN__UpdatePositions &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight (via Veneer)
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetPassword
</UL>

<P><STRONG><a name="[99]"></a>_cbSetPassword</STRONG> (Thumb, 458 bytes, Stack size 24 bytes, user_setpassword.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = _cbSetPassword &rArr; InitDialog_kb &rArr; FRAMEWIN_SetTitleHeight &rArr; FRAMEWIN__UpdatePositions &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey (via Veneer)
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog_kb
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PaintDialog_kb
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem (via Veneer)
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText (via Veneer)
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus (via Veneer)
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId (via Veneer)
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc (via Veneer)
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_menu.o(.text)
</UL>
<P><STRONG><a name="[6e2]"></a>_OnPaintSetTime</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, user_settime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = _OnPaintSetTime &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx (via Veneer)
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont (via Veneer)
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor (via Veneer)
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetTime
</UL>

<P><STRONG><a name="[6e3]"></a>_InitSetTimeDialog</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, user_settime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = _InitSetTimeDialog &rArr; EDIT_SetText &rArr; _IsSpaceInBuffer &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem (via Veneer)
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText (via Veneer)
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetTime
</UL>

<P><STRONG><a name="[6e4]"></a>_changeEdit</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, user_settime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _changeEdit &rArr; EDIT_SetCursorAtChar &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem (via Veneer)
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtChar (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetTime
</UL>

<P><STRONG><a name="[6e5]"></a>_getUserInputTime</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, user_settime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = _getUserInputTime &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem (via Veneer)
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetText (via Veneer)
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetTime
</UL>

<P><STRONG><a name="[6e7]"></a>IsLeap</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, user_settime.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTime
</UL>

<P><STRONG><a name="[6e6]"></a>CheckTime</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, user_settime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CheckTime
</UL>
<BR>[Calls]<UL><LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsLeap
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetTime
</UL>

<P><STRONG><a name="[97]"></a>_cbSetTime</STRONG> (Thumb, 392 bytes, Stack size 32 bytes, user_settime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = _cbSetTime &rArr; _getUserInputTime &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTime
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_getUserInputTime
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_changeEdit
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitSetTimeDialog
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSetTime
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus (via Veneer)
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId (via Veneer)
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc (via Veneer)
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_menu.o(.text)
</UL>
<P><STRONG><a name="[6e8]"></a>_OnPaintSetType</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, user_settype.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = _OnPaintSetType &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx (via Veneer)
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont (via Veneer)
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor (via Veneer)
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetType
</UL>

<P><STRONG><a name="[6e9]"></a>_InitSetTypeDialog</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, user_settype.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = _InitSetTypeDialog &rArr; DROPDOWN_AddString &rArr; GUI_ARRAY_AddItem &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString (via Veneer)
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetType
</UL>

<P><STRONG><a name="[98]"></a>_cbSetType</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, user_settype.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = _cbSetType &rArr; _InitSetTypeDialog &rArr; DROPDOWN_AddString &rArr; GUI_ARRAY_AddItem &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitSetTypeDialog
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSetType
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel (via Veneer)
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem (via Veneer)
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus (via Veneer)
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId (via Veneer)
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc (via Veneer)
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_menu.o(.text)
</UL>
<P><STRONG><a name="[6ea]"></a>_OnPaintTestIO</STRONG> (Thumb, 526 bytes, Stack size 48 bytes, user_testio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = _OnPaintTestIO &rArr; LISTVIEW_SetItemText &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem (via Veneer)
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText (via Veneer)
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx (via Veneer)
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont (via Veneer)
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor (via Veneer)
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt (via Veneer)
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTestIO
</UL>

<P><STRONG><a name="[6eb]"></a>_InitTestIODialog</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, user_testio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = _InitTestIODialog &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; _GetNumVisibleRows &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetTextAlign (via Veneer)
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem (via Veneer)
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetTextColor (via Veneer)
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight (via Veneer)
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis (via Veneer)
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor (via Veneer)
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTestIO
</UL>

<P><STRONG><a name="[9b]"></a>_cbTestIO</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, user_testio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = _cbTestIO &rArr; _InitTestIODialog &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; _GetNumVisibleRows &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTestIODialog
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintTestIO
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem (via Veneer)
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetEnterInfo
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus (via Veneer)
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId (via Veneer)
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc (via Veneer)
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_menu.o(.text)
</UL>
<P><STRONG><a name="[6ed]"></a>_OnPaintTestRS485</STRONG> (Thumb, 236 bytes, Stack size 56 bytes, user_testrs485.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = _OnPaintTestRS485 &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel (via Veneer)
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem (via Veneer)
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx (via Veneer)
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont (via Veneer)
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor (via Veneer)
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt (via Veneer)
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTestRS485
</UL>

<P><STRONG><a name="[6ee]"></a>_InitTestRS485Dialog</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, user_testrs485.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = _InitTestRS485Dialog &rArr; DROPDOWN_SetAutoScroll &rArr; LISTBOX_SetAutoScrollV &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetAutoScroll (via Veneer)
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString (via Veneer)
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTestRS485
</UL>

<P><STRONG><a name="[9a]"></a>_cbTestRS485</STRONG> (Thumb, 260 bytes, Stack size 168 bytes, user_testrs485.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = _cbTestRS485 &rArr; _InitTestRS485Dialog &rArr; DROPDOWN_SetAutoScroll &rArr; LISTBOX_SetAutoScrollV &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Send_Struct
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTestRS485Dialog
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintTestRS485
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel (via Veneer)
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem (via Veneer)
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus (via Veneer)
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId (via Veneer)
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc (via Veneer)
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_menu.o(.text)
</UL>
<P><STRONG><a name="[6f0]"></a>_OnPaintTestSerial</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, user_testserial.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = _OnPaintTestSerial &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx (via Veneer)
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont (via Veneer)
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor (via Veneer)
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTestSerial
</UL>

<P><STRONG><a name="[6f1]"></a>_InitTestSerialDialog</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, user_testserial.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = _InitTestSerialDialog &rArr; DROPDOWN_SetAutoScroll &rArr; LISTBOX_SetAutoScrollV &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetAutoScroll (via Veneer)
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString (via Veneer)
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTestSerial
</UL>

<P><STRONG><a name="[9c]"></a>_cbTestSerial</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, user_testserial.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = _cbTestSerial &rArr; _InitTestSerialDialog &rArr; DROPDOWN_SetAutoScroll &rArr; LISTBOX_SetAutoScrollV &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTestSerialDialog
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintTestSerial
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem (via Veneer)
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText (via Veneer)
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus (via Veneer)
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId (via Veneer)
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc (via Veneer)
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_menu.o(.text)
</UL>
<P><STRONG><a name="[6bf]"></a>LISTVIEW_GetEnterInfo</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, listview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_GetEnterInfo &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock (via Veneer)
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTestIO
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbReversiWin
</UL>

<P><STRONG><a name="[6f4]"></a>LISTVIEW__GetRowDistY</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, listview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LISTVIEW__GetRowDistY
</UL>
<BR>[Calls]<UL><LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
</UL>

<P><STRONG><a name="[708]"></a>LISTVIEW__InvalidateInsideArea</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, listview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = LISTVIEW__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar (via Veneer)
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight (via Veneer)
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel (via Veneer)
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTVIEW_Callback
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetTextAlign (via Veneer)
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetTextColor (via Veneer)
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight (via Veneer)
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis (via Veneer)
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor (via Veneer)
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
</UL>

<P><STRONG><a name="[70a]"></a>LISTVIEW__InvalidateRow</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, listview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar (via Veneer)
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight (via Veneer)
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel (via Veneer)
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText (via Veneer)
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
</UL>

<P><STRONG><a name="[713]"></a>LISTVIEW__UpdateScrollPos</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, listview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = LISTVIEW__UpdateScrollPos &rArr; WIDGET__SetScrollState &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollPos (via Veneer)
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds (via Veneer)
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel (via Veneer)
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
</UL>

<P><STRONG><a name="[717]"></a>LISTVIEW__UpdateScrollParas</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, listview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = LISTVIEW__UpdateScrollParas &rArr; _GetNumVisibleRows &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems (via Veneer)
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollPos
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetHeaderWidth
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetXSize
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTVIEW_Callback
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight (via Veneer)
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis (via Veneer)
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateEx
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
</UL>

<P><STRONG><a name="[6b4]"></a>LISTVIEW_DecSel</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, listview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_DecSel &rArr; LISTVIEW_SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel (via Veneer)
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[6b3]"></a>LISTVIEW_IncSel</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, listview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_IncSel &rArr; LISTVIEW_SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel (via Veneer)
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[6b8]"></a>LISTVIEW_CreateEx</STRONG> (Thumb, 202 bytes, Stack size 56 bytes, listview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_CreateEx &rArr; HEADER_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild (via Veneer)
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init (via Veneer)
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateEx (via Veneer)
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock (via Veneer)
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock (via Veneer)
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p (via Veneer)
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx (via Veneer)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateIndirect (via Veneer)
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitListview
</UL>

<P><STRONG><a name="[6b9]"></a>LISTVIEW_AddColumn</STRONG> (Thumb, 122 bytes, Stack size 48 bytes, listview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_AddColumn &rArr; LISTVIEW__UpdateScrollParas &rArr; _GetNumVisibleRows &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows (via Veneer)
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem (via Veneer)
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock (via Veneer)
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock (via Veneer)
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem (via Veneer)
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem (via Veneer)
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p (via Veneer)
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTestIODialog
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitListview
</UL>

<P><STRONG><a name="[6be]"></a>LISTVIEW_AddRow</STRONG> (Thumb, 174 bytes, Stack size 48 bytes, listview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; _GetNumVisibleRows &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems (via Veneer)
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen (via Veneer)
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock (via Veneer)
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock (via Veneer)
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem (via Veneer)
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems (via Veneer)
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem (via Veneer)
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p (via Veneer)
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTestIODialog
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitListview
</UL>

<P><STRONG><a name="[728]"></a>MENU__SendMenuMessage</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent (via Veneer)
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ActivateItem
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubmenu
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CloseSubmenu
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsTopLevelMenu
</UL>

<P><STRONG><a name="[731]"></a>MENU__GetNumItems</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MENU__GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_AddItem
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__RecalcTextWidthOfItems
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcMenuSizeY
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcMenuSizeX
</UL>

<P><STRONG><a name="[73d]"></a>MENU__InvalidateItem</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = MENU__InvalidateItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelection
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubmenu
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CloseSubmenu
</UL>

<P><STRONG><a name="[740]"></a>MENU_SetOwner</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = MENU_SetOwner &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock (via Veneer)
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock (via Veneer)
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddMenu (via Veneer)
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__SetItem
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubmenu
</UL>

<P><STRONG><a name="[751]"></a>MENU__ResizeMenu</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = MENU__ResizeMenu &rArr; _CalcWindowSizeY &rArr; _CalcMenuSizeY &rArr; _GetItemHeight &rArr; _GetEffectSize &rArr; _HasEffect &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow (via Veneer)
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize (via Veneer)
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcWindowSizeY
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcWindowSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_AddItem
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMenu
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Attach (via Veneer)
</UL>

<P><STRONG><a name="[75b]"></a>_SellecNextItem</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _SellecNextItem &rArr; GUI_ARRAY_GetpItem &rArr; GUI_ARRAY_GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MENU_AddKey
</UL>

<P><STRONG><a name="[75c]"></a>_SellecPreviousItem</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, menu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem (via Veneer)
</UL>

<P><STRONG><a name="[75d]"></a>_MENU_AddKey</STRONG> (Thumb, 612 bytes, Stack size 40 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = _MENU_AddKey &rArr; _ActivateMenu &rArr; _OpenSubmenu &rArr; _GetItemPos &rArr; _GetItemHeight &rArr; _GetEffectSize &rArr; _HasEffect &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem (via Veneer)
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p (via Veneer)
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus (via Veneer)
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SellecNextItem
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeactivateMenu
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ActivateMenu
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ActivateItem
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeselectItem
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectItem
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MENU_Callback
</UL>

<P><STRONG><a name="[6aa]"></a>MENU_CreateEx</STRONG> (Thumb, 176 bytes, Stack size 56 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = MENU_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild (via Veneer)
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init (via Veneer)
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock (via Veneer)
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock (via Veneer)
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p (via Veneer)
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect (via Veneer)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateMenu
</UL>

<P><STRONG><a name="[75f]"></a>MENU__RecalcTextWidthOfItems</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, menu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem (via Veneer)
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont (via Veneer)
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX (via Veneer)
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__GetNumItems
</UL>

<P><STRONG><a name="[760]"></a>MENU__SetItem</STRONG> (Thumb, 142 bytes, Stack size 48 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = MENU__SetItem &rArr; _CalcTextWidth &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_GetCharDistX &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem (via Veneer)
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem (via Veneer)
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_SetOwner
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcTextWidth
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_AddItem
</UL>

<P><STRONG><a name="[762]"></a>MENU__SetItemFlags</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, menu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem (via Veneer)
</UL>

<P><STRONG><a name="[6a7]"></a>MENU_AddItem</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = MENU_AddItem &rArr; MENU__ResizeMenu &rArr; _CalcWindowSizeY &rArr; _CalcMenuSizeY &rArr; _GetItemHeight &rArr; _GetEffectSize &rArr; _HasEffect &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock (via Veneer)
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock (via Veneer)
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem (via Veneer)
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p (via Veneer)
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem (via Veneer)
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__SetItem
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__ResizeMenu
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddMenuItem
</UL>

<P><STRONG><a name="[6d7]"></a>EEPROM_WriteStruct</STRONG> (Thumb, 280 bytes, Stack size 40 bytes, user_saveoption.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = EEPROM_WriteStruct &rArr; EEPROM_WriteDataOnePage &rArr; I2C_MasterTransferData &rArr; I2C_MasterHanleStates
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteDataOnePage
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetConnect
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetAddr
</UL>

<P><STRONG><a name="[69c]"></a>EEPROM_ReadStruct</STRONG> (Thumb, 178 bytes, Stack size 80 bytes, user_saveoption.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = EEPROM_ReadStruct &rArr; EEPROM_ReadData &rArr; I2C_MasterTransferData &rArr; I2C_MasterHanleStates
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_ReadData
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[765]"></a>INT32TOUINT8</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, user_saveoption.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteRati
</UL>

<P><STRONG><a name="[764]"></a>EEPROM_WriteRati</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, user_saveoption.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_WriteDataOnePage
<LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INT32TOUINT8
</UL>

<P><STRONG><a name="[767]"></a>UINT8TOINT32</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, user_saveoption.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_ReadRati
</UL>

<P><STRONG><a name="[766]"></a>EEPROM_ReadRati</STRONG> (Thumb, 40 bytes, Stack size 264 bytes, user_saveoption.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_ReadData
<LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UINT8TOINT32
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[76a]"></a>initConf</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, user_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = initConf &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Create
</UL>

<P><STRONG><a name="[76b]"></a>File_Set_Config_Tristate</STRONG> (Thumb, 204 bytes, Stack size 88 bytes, user_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1872 + Unknown Stack Size
<LI>Call Chain = File_Set_Config_Tristate &rArr; yaffs_write &rArr; yaffsfs_do_write &rArr; yaffsfs_PutHandle &rArr; yaffsfs_PutFileDes &rArr; yaffsfs_PutInode &rArr; yaffsfs_ReleaseInode &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_write
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Create
</UL>

<P><STRONG><a name="[76c]"></a>File_Set_Config_Accumulate</STRONG> (Thumb, 216 bytes, Stack size 96 bytes, user_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1880 + Unknown Stack Size
<LI>Call Chain = File_Set_Config_Accumulate &rArr; yaffs_write &rArr; yaffsfs_do_write &rArr; yaffsfs_PutHandle &rArr; yaffsfs_PutFileDes &rArr; yaffsfs_PutInode &rArr; yaffsfs_ReleaseInode &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_write
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Create
</UL>

<P><STRONG><a name="[76d]"></a>File_Set_Config_Switch</STRONG> (Thumb, 166 bytes, Stack size 88 bytes, user_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1872 + Unknown Stack Size
<LI>Call Chain = File_Set_Config_Switch &rArr; yaffs_write &rArr; yaffsfs_do_write &rArr; yaffsfs_PutHandle &rArr; yaffsfs_PutFileDes &rArr; yaffsfs_PutInode &rArr; yaffsfs_ReleaseInode &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_write
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Create
</UL>

<P><STRONG><a name="[76e]"></a>File_Set_Config_Analogue</STRONG> (Thumb, 524 bytes, Stack size 96 bytes, user_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1880 + Unknown Stack Size
<LI>Call Chain = File_Set_Config_Analogue &rArr; yaffs_write &rArr; yaffsfs_do_write &rArr; yaffsfs_PutHandle &rArr; yaffsfs_PutFileDes &rArr; yaffsfs_PutInode &rArr; yaffsfs_ReleaseInode &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_write
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Create
</UL>

<P><STRONG><a name="[76f]"></a>File_Create</STRONG> (Thumb, 80 bytes, Stack size 232 bytes, user_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2112 + Unknown Stack Size
<LI>Call Chain = File_Create &rArr; File_Set_Config_Analogue &rArr; yaffs_write &rArr; yaffsfs_do_write &rArr; yaffsfs_PutHandle &rArr; yaffsfs_PutFileDes &rArr; yaffsfs_PutInode &rArr; yaffsfs_ReleaseInode &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_close
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Set_Config_Analogue
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Set_Config_Switch
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Set_Config_Accumulate
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Set_Config_Tristate
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initConf
</UL>
<BR>[Called By]<UL><LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Init
</UL>

<P><STRONG><a name="[a98]"></a>File_Update</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, user_file.o(.text), UNUSED)

<P><STRONG><a name="[695]"></a>File_Init</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, user_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2128 + Unknown Stack Size
<LI>Call Chain = File_Init &rArr; File_Create &rArr; File_Set_Config_Analogue &rArr; yaffs_write &rArr; yaffsfs_do_write &rArr; yaffsfs_PutHandle &rArr; yaffsfs_PutFileDes &rArr; yaffsfs_PutInode &rArr; yaffsfs_ReleaseInode &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_format
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mount
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mkdir
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_close
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Create
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStart
</UL>

<P><STRONG><a name="[770]"></a>File_Get_Config_Analogue</STRONG> (Thumb, 376 bytes, Stack size 88 bytes, user_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1872 + Unknown Stack Size
<LI>Call Chain = File_Get_Config_Analogue &rArr; yaffs_read &rArr; yaffsfs_do_read &rArr; yaffsfs_PutHandle &rArr; yaffsfs_PutFileDes &rArr; yaffsfs_PutInode &rArr; yaffsfs_ReleaseInode &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_read
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ConfigFile
</UL>

<P><STRONG><a name="[771]"></a>File_Get_Config_Switch</STRONG> (Thumb, 130 bytes, Stack size 88 bytes, user_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1872 + Unknown Stack Size
<LI>Call Chain = File_Get_Config_Switch &rArr; yaffs_read &rArr; yaffsfs_do_read &rArr; yaffsfs_PutHandle &rArr; yaffsfs_PutFileDes &rArr; yaffsfs_PutInode &rArr; yaffsfs_ReleaseInode &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_read
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ConfigFile
</UL>

<P><STRONG><a name="[772]"></a>File_Get_Config_Accumulate</STRONG> (Thumb, 150 bytes, Stack size 88 bytes, user_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1872 + Unknown Stack Size
<LI>Call Chain = File_Get_Config_Accumulate &rArr; yaffs_read &rArr; yaffsfs_do_read &rArr; yaffsfs_PutHandle &rArr; yaffsfs_PutFileDes &rArr; yaffsfs_PutInode &rArr; yaffsfs_ReleaseInode &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_read
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ConfigFile
</UL>

<P><STRONG><a name="[773]"></a>File_Get_Config_Tristate</STRONG> (Thumb, 520 bytes, Stack size 88 bytes, user_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1872 + Unknown Stack Size
<LI>Call Chain = File_Get_Config_Tristate &rArr; yaffs_read &rArr; yaffsfs_do_read &rArr; yaffsfs_PutHandle &rArr; yaffsfs_PutFileDes &rArr; yaffsfs_PutInode &rArr; yaffsfs_ReleaseInode &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_read
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ConfigFile
</UL>

<P><STRONG><a name="[776]"></a>initTestpoint</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, equipmentlist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = initTestpoint &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setUpload
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ConfigFile
</UL>

<P><STRONG><a name="[77b]"></a>AddEquipment</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, equipmentlist.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ConfigFile
</UL>

<P><STRONG><a name="[777]"></a>DeleteEquipment</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, equipmentlist.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[778]"></a>InitEquipmentList</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, equipmentlist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = InitEquipmentList &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Equipment_Task
</UL>

<P><STRONG><a name="[779]"></a>UpdateEquipmentList</STRONG> (Thumb, 106 bytes, Stack size 152 bytes, equipmentlist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = UpdateEquipmentList &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Equipment_Task
</UL>

<P><STRONG><a name="[77a]"></a>Read_ConfigFile</STRONG> (Thumb, 302 bytes, Stack size 304 bytes, equipmentlist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2176 + Unknown Stack Size
<LI>Call Chain = Read_ConfigFile &rArr; yaffs_open &rArr; yaffs_open_reldir &rArr; yaffs_open_sharing_reldir &rArr; yaffs_create_file &rArr; yaffs_create_obj &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_read
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddEquipment
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initTestpoint
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Get_Config_Tristate
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Get_Config_Accumulate
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Get_Config_Switch
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Get_Config_Analogue
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Equipment_Task
</UL>

<P><STRONG><a name="[8f]"></a>Equipment_Task</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, equipmentlist.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2176 + Unknown Stack Size
<LI>Call Chain = Equipment_Task &rArr; Read_ConfigFile &rArr; yaffs_open &rArr; yaffs_open_reldir &rArr; yaffs_open_sharing_reldir &rArr; yaffs_create_file &rArr; yaffs_create_obj &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ConfigFile
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateEquipmentList
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitEquipmentList
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_main.o(.text)
</UL>
<P><STRONG><a name="[90]"></a>UartRcv_Task</STRONG> (Thumb, 108 bytes, Stack size 136 bytes, task_uartrcv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = UartRcv_Task &rArr; Uart1_Get_Struct &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Get_Struct
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Send_Struct
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_main.o(.text)
</UL>
<P><STRONG><a name="[685]"></a>getSensorName</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, sensor_operation.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitBrowsTestpointDialog
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintBrowsTestpoint
</UL>

<P><STRONG><a name="[a99]"></a>getPortType</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, sensor_operation.o(.text), UNUSED)

<P><STRONG><a name="[a5]"></a>getShowInfo_Analogue</STRONG> (Thumb, 120 bytes, Stack size 120 bytes, sensor_operation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = getShowInfo_Analogue &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> equipmentlist.o(.text)
</UL>
<P><STRONG><a name="[a7]"></a>getShowInfo_Switch</STRONG> (Thumb, 120 bytes, Stack size 120 bytes, sensor_operation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = getShowInfo_Switch &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> equipmentlist.o(.text)
</UL>
<P><STRONG><a name="[a9]"></a>getShowInfo_Accumulate</STRONG> (Thumb, 120 bytes, Stack size 120 bytes, sensor_operation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = getShowInfo_Accumulate &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> equipmentlist.o(.text)
</UL>
<P><STRONG><a name="[ab]"></a>getShowInfo_Tristate</STRONG> (Thumb, 120 bytes, Stack size 120 bytes, sensor_operation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = getShowInfo_Tristate &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> equipmentlist.o(.text)
</UL>
<P><STRONG><a name="[a2]"></a>showAllInfo</STRONG> (Thumb, 796 bytes, Stack size 32 bytes, sensor_operation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = showAllInfo &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> equipmentlist.o(.text)
</UL>
<P><STRONG><a name="[a1]"></a>setUpload</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, sensor_operation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = setUpload &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initTestpoint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> equipmentlist.o(.text)
</UL>
<P><STRONG><a name="[a3]"></a>getUploadInfo</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, sensor_operation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = getUploadInfo &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> equipmentlist.o(.text)
</UL>
<P><STRONG><a name="[a4]"></a>setConfig_Analogue</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, sensor_operation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = setConfig_Analogue &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> equipmentlist.o(.text)
</UL>
<P><STRONG><a name="[a6]"></a>setConfig_Switch</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, sensor_operation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = setConfig_Switch &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> equipmentlist.o(.text)
</UL>
<P><STRONG><a name="[a8]"></a>setConfig_Accumulate</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, sensor_operation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = setConfig_Accumulate &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> equipmentlist.o(.text)
</UL>
<P><STRONG><a name="[aa]"></a>setConfig_Tristate</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, sensor_operation.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = setConfig_Tristate &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> equipmentlist.o(.text)
</UL>
<P><STRONG><a name="[77f]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
</UL>

<P><STRONG><a name="[3cf]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ioctl
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_shutdown
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_send
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_listen
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_connect
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_bind
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt_internal
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getaddrname
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerTest
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClientTest
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[a9a]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[a9b]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[398]"></a>malloc</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, h1_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_malloc
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_thread_new
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_nand_install_drv
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_k9f4g08u0b_install_drv
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTestIODialog
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ConfigFile
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitEquipmentList
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initTestpoint
</UL>

<P><STRONG><a name="[39b]"></a>free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_free
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_nand_install_drv
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_k9f4g08u0b_install_drv
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ConfigFile
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteEquipment
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>

<P><STRONG><a name="[149]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_set_divisors
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;converUSecToVal
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_NS2CLK
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMC_SDRAM_REFRESH
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_sdiv
</UL>

<P><STRONG><a name="[a9c]"></a>_ll_udiv</STRONG> (Thumb, 238 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[2d8]"></a>__aeabi_lasr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_addr_to_chunk
</UL>

<P><STRONG><a name="[a9d]"></a>_ll_sshift_r</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[446]"></a>__aeabi_ldivmod</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsdiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoStat
</UL>

<P><STRONG><a name="[782]"></a>_ll_sdiv</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, llsdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[1f7]"></a>__2printf</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, __2printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_PageProgramWithSpare
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_dir_contents
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fix_hanging_objs
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlink_file_if_needed
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_prune_chunks
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_data_obj
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_parent
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_soft_del_file
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_flush_file_cache
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_wr_data_obj
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_change_obj_name
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_gc
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_gc_block
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_block
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_process_chunk
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_free_obj
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_soft_del_chunk
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_write_new_chunk
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_alloc_chunk
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_alloc_block
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_handle_chunk_wr_error
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_chunk_erased
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_retire_block
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_invalidate_stream
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_checkpt_close
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_flush_buffer
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_find_block
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_find_erased_block
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_checkpt_erase
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_space_ok
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_chunk_bit_id
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_block_bits
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_free_objs
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_tnodes
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output_to_arp_index
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_raw
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_arp_input
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_update_arp_entry
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_send_ip
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_find_entry
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_etharp_q
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mount_common
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_checkpoint_save
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_chunk
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_data
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_wr_checkpt_data
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_objs
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_wr_checkpt_objs
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_tnodes
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_obj_to_obj
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_obj
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_file
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_marshall_query_block
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_marshall_read
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_marshall_write
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_chunk_nand
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_handle_rd_data_error
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_dump_tags2
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_dump_packed_tags2_tags_only
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_wr_chunk_tags_nand
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_oh
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_obj_in_dir
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_free_chunks
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_dir
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_collected_blk
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_blocks
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_blk
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_backwards
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_find_refresh_block
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_restore
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs1_scan
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_initialise
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_ll_init
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_file_wr
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bg_gc
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_obj
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_dirty_dirs
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_by_name
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_add_obj_to_dir
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_put_chunk_in_file
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_add_find_tnode_0
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chunk_del
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_block_became_dirty
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_handle_chunk_error
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_release_temp_buffer
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_temp_buffer
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write_checks
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pbuf_prealloc
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue_flags
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_update_rcv_ann_wnd
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stats_display_sys
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stats_display_mem
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stats_display_igmp
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stats_display_proto
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_coalesce
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_take
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_dechain
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloced_custom
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_insert_ipaddridx_tree
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_iprteidx_tree
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_ipaddridx_tree
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_add
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_loop_output
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_poll
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_malloc
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_trim
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plug_holes
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_init
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_check_entry
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_send
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_thread
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy_partial
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_connect
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_bind
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt_internal
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt_internal
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_selscan
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_callback
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_first
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_next
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_data
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_chain
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_ref
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_free
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_alloc
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_sent
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recved
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_poll
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_with_backlog
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_err
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_bind
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_sendto
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_leavegroup
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_joingroup
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_dns_found
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_connected
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcb_new
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;poll_tcp
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sent_tcp
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_writemore
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_tcp
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_tcp
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_udp
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_free
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_write
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_getaddr
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_delconn
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_connect
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_gethostbyname
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_join_leave_group
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_write_partly
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_send
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_tcp_pbuf
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_accept
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_listen_with_backlog
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_disconnect
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_connect
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_bind
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_getaddr
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_new_with_proto_and_callback
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_close_shutdown
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_insert_arpidx_tree
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_arpidx_tree
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_find_addr
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerTest
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClientTest
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_init
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_alloc
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_dec_varbindlist
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_getnext_event
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_get_event
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_expand_tree
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_node
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_node_insert
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_node_find
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_node_delete
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_set_value
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_set_test
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_get_value
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_get_object_def
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_get_value
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_get_value
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_get_object_def
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_get_value
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_set_test
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_get_value
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_get_object_def
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ifentry_get_value
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ifentry_get_object_def
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_value
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_test
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_get_value
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_get_object_def
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udpentry_get_value
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_rteentry_get_object_def
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_rteentry_get_value
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_addrentry_get_object_def
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_addrentry_get_value
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atentry_get_value
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_ntomentry_get_object_def
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_ntomentry_get_value
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipfrag_free_pbuf_custom
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag_free_pbuf_custom_ref
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_chain_frag_into_datagram_and_validate
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_dequeue_datagram
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_aton
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if_opt
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_send
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_insert_udpidx_tree
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_udpidx_tree
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo_partial
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_getUserInputIP
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetConnect
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetAddr
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showAllInfo
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setConfig_Tristate
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ConfigFile
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initTestpoint
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Get_Config_Switch
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Get_Config_Analogue
</UL>

<P><STRONG><a name="[673]"></a>__2sprintf</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, __2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ServerTest
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClientTest
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintTestRS485
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTestIODialog
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintTestIO
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitSetTimeDialog
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitSetAddrDialog
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainDisplayStatus
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitBrowsTestpointDialog
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintBrowsTestpoint
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getShowInfo_Tristate
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getShowInfo_Switch
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getShowInfo_Analogue
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getShowInfo_Accumulate
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Set_Config_Analogue
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Set_Config_Switch
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Set_Config_Accumulate
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Set_Config_Tristate
</UL>

<P><STRONG><a name="[786]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
</UL>

<P><STRONG><a name="[787]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
</UL>

<P><STRONG><a name="[788]"></a>_printf_truncate_signed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[789]"></a>_printf_truncate_unsigned</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[785]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[120]"></a>_printf_int_dec</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[125]"></a>_printf_longlong_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_longlong_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lld
</UL>

<P><STRONG><a name="[78c]"></a>_printf_longlong_hex</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[123]"></a>_printf_int_hex</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[78d]"></a>_printf_ll_hex</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>

<P><STRONG><a name="[11c]"></a>_printf_hex_ptr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_p
</UL>

<P><STRONG><a name="[78e]"></a>__printf</STRONG> (Thumb, 390 bytes, Stack size 40 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[6d3]"></a>__0sscanf</STRONG> (Thumb, 52 bytes, Stack size 72 bytes, __0sscanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_getUserInputTime
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_getUserInputIP
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_checkUserInputIP
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ConfigFile
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Get_Config_Tristate
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Get_Config_Accumulate
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Get_Config_Switch
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Get_Config_Analogue
</UL>

<P><STRONG><a name="[792]"></a>_scanf_int</STRONG> (Thumb, 336 bytes, Stack size 56 bytes, _scanf_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[77e]"></a>puts</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, puts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = puts
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showAllInfo
</UL>

<P><STRONG><a name="[794]"></a>srand</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = srand
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[12b]"></a>_rand_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_rand_2
</UL>

<P><STRONG><a name="[137]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[4d0]"></a>abort</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, abort.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>
<BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output_to_arp_index
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_raw
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_arp_input
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_update_arp_entry
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_send_ip
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_find_entry
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_etharp_q
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write_checks
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pbuf_prealloc
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output_alloc_header
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue_flags
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_update_rcv_ann_wnd
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_slowtmr
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close_shutdown
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_coalesce
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_take
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_dechain
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloced_custom
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_insert_ipaddridx_tree
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_iprteidx_tree
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_ipaddridx_tree
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_add
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_loop_output
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netif_poll
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_malloc
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_trim
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;plug_holes
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_init
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_check_entry
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_send
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_thread
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt_internal
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt_internal
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_selscan
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_callback
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_alloc
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_sent
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recved
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_poll
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_err
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_sendto
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_dns_found
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_connected
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcb_new
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;poll_tcp
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sent_tcp
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_writemore
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;err_tcp
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_tcp
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recv_udp
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_free
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_write
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_getaddr
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_delconn
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_new_with_proto_and_callback
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_data
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_insert_arpidx_tree
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_arpidx_tree
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_find_addr
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_init
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_alloc
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_dec_varbindlist
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_getnext_event
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_get_event
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_expand_tree
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_node
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_node_insert
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_node_find
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_mib_node_delete
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_set_value
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_set_test
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_get_value
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_get_object_def
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_get_value
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_get_value
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_get_object_def
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_get_value
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_set_test
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_get_value
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_get_object_def
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ifentry_get_value
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ifentry_get_object_def
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_value
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_test
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_get_value
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_get_object_def
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udpentry_get_value
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_rteentry_get_object_def
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_rteentry_get_value
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_addrentry_get_object_def
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_addrentry_get_value
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atentry_get_value
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_ntomentry_get_object_def
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_ntomentry_get_value
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipfrag_free_pbuf_custom
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag_free_pbuf_custom_ref
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_chain_frag_into_datagram_and_validate
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_dequeue_datagram
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipaddr_aton
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if_opt
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_send
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_input
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_insert_udpidx_tree
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_udpidx_tree
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo_partial
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto_if
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_input
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
</UL>

<P><STRONG><a name="[2f0]"></a>memcmp</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_chunk_written
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_compat_query_block
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_compat_rd
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
</UL>

<P><STRONG><a name="[2f8]"></a>strcpy</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, strcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fix_null_name
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_readdir_no_lock
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_alt_dir_path
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_k9f4g08u0b_install_drv
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_obj_name
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_set_obj_name
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem (via Veneer)
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTestIODialog
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText (via Veneer)
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setUpload
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setConfig_Tristate
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setConfig_Switch
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setConfig_Analogue
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setConfig_Accumulate
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitEquipmentList
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Get_Config_Tristate
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Get_Config_Accumulate
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Get_Config_Switch
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Get_Config_Analogue
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initConf
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__SetItem
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemText (via Veneer)
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText (via Veneer)
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar (via Veneer)
<LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString (via Veneer)
</UL>

<P><STRONG><a name="[2af]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fix_null_name
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_file_size
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_symlink_reldir
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_readdir_no_lock
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mkdir_reldir
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_alt_dir_path
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckNameLength
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_k9f4g08u0b_install_drv
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_set
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_list
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_obj_length
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rename_obj
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_obj_name
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_clone_str
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_set_obj_name
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_strstr
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_enqueue
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_gethostbyname
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClientTest
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem (via Veneer)
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString (via Veneer)
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText (via Veneer)
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__SetItem
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemText (via Veneer)
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar (via Veneer)
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar (via Veneer)
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer (via Veneer)
<LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString (via Veneer)
</UL>

<P><STRONG><a name="[334]"></a>strncmp</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rename_reldir
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoUnlink_reldir
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_find
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_by_name
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_header_check
</UL>

<P><STRONG><a name="[2f9]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fix_null_name
</UL>

<P><STRONG><a name="[20a]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_check_chunk_hdr
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_init_chunk_hdr
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_Get_Struct
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_marshall_read
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_read
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_write
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_nand_drv_ReadChunk
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_nand_drv_WriteChunk
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_set
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_list
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_get
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_del
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_file_wr
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_file_rd
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_take
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_enqueue
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy_partial
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getaddrname
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_output
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_input
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_enqueue_new_datagram
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if_opt
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_send_response
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText (via Veneer)
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetText (via Veneer)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetConnect
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetAddr
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_ReadStruct
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getShowInfo_Tristate
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getShowInfo_Switch
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getShowInfo_Analogue
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getShowInfo_Accumulate
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem (via Veneer)
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItem (via Veneer)
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit (via Veneer)
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc (via Veneer)
<LI><a href="#[9b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP_DDB (via Veneer)
<LI><a href="#[9af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP_DDB (via Veneer)
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL>

<P><STRONG><a name="[797]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[a9e]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[7fb]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memmove_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateHole (via Veneer)
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar (via Veneer)
</UL>

<P><STRONG><a name="[798]"></a>__rt_memmove</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, rt_memmove_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__memmove_aligned
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[a9f]"></a>__memmove_lastfew</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_v6.o(.text), UNUSED)

<P><STRONG><a name="[19f]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_Init
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Get_Struct
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_add_find_tnode_0
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_copy
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stats_display_memp
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stats_init
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_getnext_event
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_set_sysobjid
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock (via Veneer)
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_CreateEx
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateEx
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateEx (via Veneer)
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitListview
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbReversiWin
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartRcv_Task
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStart
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getUploadInfo
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateEquipmentList
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitEquipmentList
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_ReadRati
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_CopyContext (via Veneer)
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx (via Veneer)
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateEx (via Veneer)
<LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx (via Veneer)
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W_M (via Veneer)
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext (via Veneer)
<LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx (via Veneer)
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove_w
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[aa0]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[aa1]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[aa2]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[aa3]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[aa4]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[79a]"></a>__rt_memmove_w</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[799]"></a>__memmove_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL>

<P><STRONG><a name="[aa5]"></a>__memmove_lastfew_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[2e3]"></a>__aeabi_memset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_retire_block
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_wr_checkpt_objs
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_compat_query_block
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_compat_mark_bad
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_compat_rd
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_spare_init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_nand_drv_MarkBad
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_nand_drv_WriteChunk
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_AddHLine (via Veneer)
</UL>

<P><STRONG><a name="[2b9]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_init_blocks
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_data_obj
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_open
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_flush_buffer
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_clear_chunk_bits
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_readlink_reldir
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_InitHandles
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_handle_hole
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_del
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_resize_file_down
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_obj_name
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_calloc
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if_opt
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>

<P><STRONG><a name="[79c]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[79b]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[2da]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_init_blocks
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_alloc_empty_obj
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_wr_data_obj
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_process_chunk
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_retire_block
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_init_tmp_buffers
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_opendir_reldir_no_lock
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_InitHandles
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_write
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_clear
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unpack_tags2_tags_only
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_k9f4g08u0b_install_drv
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_blocks
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_initialise
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_retype_obj
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_tnode
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chunk_del
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_new
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_enqueue_new_datagram
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getShowInfo_Tristate
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getShowInfo_Switch
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getShowInfo_Analogue
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getShowInfo_Accumulate
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Get_Config_Tristate
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Get_Config_Accumulate
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Get_Config_Switch
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Get_Config_Analogue
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Set_Config_Analogue
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Set_Config_Switch
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Set_Config_Accumulate
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Set_Config_Tristate
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Clear (via Veneer)
</UL>

<P><STRONG><a name="[aa6]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[aa7]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[79d]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[2fa]"></a>strncpy</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_load_name_from_oh
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_load_oh_from_name
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fix_null_name
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_readlink_reldir
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_opendir_reldir_no_lock
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_set
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_obj_name
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_clone_str
</UL>

<P><STRONG><a name="[333]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoFindDirectory
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_by_name
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_lookup
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_gethostbyname
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_dns_found
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[13b]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[aa8]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[7ba]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[aa9]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[aaa]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[aab]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[aac]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[780]"></a>__rt_heap_descriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[12d]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[aad]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[aae]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[9]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[6]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[781]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[79f]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[129]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[7a1]"></a>__Heap_Initialize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[3]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[78b]"></a>_ll_udiv10</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, lludiv10.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[78a]"></a>_printf_int_common</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[aaf]"></a>__lib_sel_fp_printf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text), UNUSED)

<P><STRONG><a name="[7a7]"></a>_printf_fp_dec_real</STRONG> (Thumb, 628 bytes, Stack size 104 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[784]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[ad]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> __2sprintf.o(.text)
</UL>
<P><STRONG><a name="[7aa]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[7ab]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[127]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[783]"></a>_printf_char_file</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, _printf_char_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[793]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>

<P><STRONG><a name="[7b0]"></a>_scanf_really_real</STRONG> (Thumb, 672 bytes, Stack size 120 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_infnan
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_hex_real
</UL>
<BR>[Called By]<UL><LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
</UL>

<P><STRONG><a name="[791]"></a>__vfscanf_char</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>

<P><STRONG><a name="[ae]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[af]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[796]"></a>__rt_SIGABRT</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_abrt_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>

<P><STRONG><a name="[79e]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[b3]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = isspace &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[7a9]"></a>_printf_fp_infnan</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[7b4]"></a>__vfscanf</STRONG> (Thumb, 876 bytes, Stack size 96 bytes, _scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>
<BR>[Called By]<UL><LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[7a3]"></a>_btod_etento</STRONG> (Thumb, 222 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[7ac]"></a>ferror</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ferror.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[7b6]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[7b5]"></a>__rt_SIGABRT_inner</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_abrt_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>

<P><STRONG><a name="[7a0]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[132]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[7bc]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[7bd]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[7be]"></a>_scanf_really_hex_real</STRONG> (Thumb, 776 bytes, Stack size 80 bytes, scanf_hexfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _scanf_really_hex_real &rArr; __support_ldexp &rArr; ldexp &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_ldexp
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
</UL>
<BR>[Called By]<UL><LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_hex_real
</UL>

<P><STRONG><a name="[7de]"></a>_scanf_really_infnan</STRONG> (Thumb, 298 bytes, Stack size 72 bytes, scanf_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _scanf_really_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_infnan
</UL>

<P><STRONG><a name="[7b8]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
</UL>

<P><STRONG><a name="[7b9]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[7c1]"></a>_ttywrch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sys_wrch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>

<P><STRONG><a name="[7bf]"></a>__aeabi_llsl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>

<P><STRONG><a name="[ab0]"></a>_ll_shift_l</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[7a4]"></a>_btod_d2e</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[7c3]"></a>_d2e_denorm_low</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[7c2]"></a>_d2e_norm_op1</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[7c6]"></a>__btod_div_common</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[7c4]"></a>_e2d</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, btod.o(CL$$btod_e2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
</UL>

<P><STRONG><a name="[7c5]"></a>_e2e</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
</UL>

<P><STRONG><a name="[7a5]"></a>_btod_ediv</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _btod_ediv &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>

<P><STRONG><a name="[7af]"></a>_btod_edivd</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_edivd))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _btod_edivd &rArr; _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[7a6]"></a>_btod_emul</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>

<P><STRONG><a name="[7ae]"></a>_btod_emuld</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_emuld))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _btod_emuld &rArr; _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
</UL>
<BR>[Called By]<UL><LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[7c7]"></a>__btod_mult_common</STRONG> (Thumb, 580 bytes, Stack size 16 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __btod_mult_common
</UL>
<BR>[Called By]<UL><LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[7a8]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[7c8]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Calls]<UL><LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
</UL>

<P><STRONG><a name="[7b3]"></a>__mathlib_narrow</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, narrow.o(i.__mathlib_narrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __mathlib_narrow &rArr; __mathlib_tofloat &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>
<BR>[Called By]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>

<P><STRONG><a name="[7ca]"></a>__mathlib_tofloat</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, narrow.o(i.__mathlib_tofloat))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __mathlib_tofloat &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frexp
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
</UL>

<P><STRONG><a name="[7c0]"></a>__support_ldexp</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ldexp.o(i.__support_ldexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __support_ldexp &rArr; ldexp &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
</UL>
<BR>[Called By]<UL><LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>

<P><STRONG><a name="[78f]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[7cb]"></a>frexp</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, frexp.o(i.frexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = frexp
</UL>
<BR>[Calls]<UL><LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[7cf]"></a>ldexp</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, ldexp.o(i.ldexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ldexp &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_ldexp
</UL>

<P><STRONG><a name="[ac]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[130]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
</UL>

<P><STRONG><a name="[7cd]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[7d0]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[7d3]"></a>__fpl_dcheck_NaN1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>

<P><STRONG><a name="[7d6]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[7cc]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[7d5]"></a>_dcmpeq</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[ab1]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)

<P><STRONG><a name="[7d7]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[7d9]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
</UL>

<P><STRONG><a name="[7d2]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[7dc]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[7ce]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_tofloat
</UL>

<P><STRONG><a name="[7d8]"></a>_drcmple</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmple_InfNaN
</UL>

<P><STRONG><a name="[686]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitBrowsTestpointDialog
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintBrowsTestpoint
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showAllInfo
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Set_Config_Analogue
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Set_Config_Accumulate
</UL>

<P><STRONG><a name="[7da]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
</UL>

<P><STRONG><a name="[7db]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[7d1]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[11e]"></a>_printf_fp_dec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[7d4]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[7c9]"></a>__ARM_scalbn</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn))
<BR><BR>[Calls]<UL><LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ldexp
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frexp
</UL>

<P><STRONG><a name="[7b7]"></a>_scanf_real</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scanf1.o(x$fpl$scanf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>
<BR>[Called By]<UL><LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[7b2]"></a>_scanf_hex_real</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scanf2.o(x$fpl$scanf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; ldexp &rArr; __aeabi_cdcmpeq
</UL>
<BR>[Calls]<UL><LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>
<BR>[Called By]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[7b1]"></a>_scanf_infnan</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scanf2.o(x$fpl$scanf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _scanf_infnan &rArr; _scanf_really_infnan
</UL>
<BR>[Calls]<UL><LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[7dd]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>

<P><STRONG><a name="[6fd]"></a>GUI__IntersectRect</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, gui__intersectrect.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint (via Veneer)
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[8dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[758]"></a>GUI__ReduceRect</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gui__reducerect.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint (via Veneer)
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D1L_GetRect
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D_GetRect
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[727]"></a>GUI__strlen</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui__strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow (via Veneer)
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[759]"></a>GUI_ClearRectEx</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_clearrectex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = GUI_ClearRectEx &rArr; GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
</UL>
<BR>[Called By]<UL><LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint (via Veneer)
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[684]"></a>GUI_DispStringAt</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_dispstringat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>
<BR>[Called By]<UL><LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintTestSerial (via Veneer)
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintTestRS485 (via Veneer)
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintTestIO (via Veneer)
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSetType (via Veneer)
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSetTime (via Veneer)
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PaintDialog_kb (via Veneer)
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSetConnect (via Veneer)
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSetAddr (via Veneer)
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainDisplayStatus (via Veneer)
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintDispConnect (via Veneer)
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintDispBackpower (via Veneer)
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitBrowsTestpointDialog (via Veneer)
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintBrowsTestpoint (via Veneer)
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[7e0]"></a>GUI__DispStringInRect</STRONG> (Thumb, 374 bytes, Stack size 80 bytes, gui_dispstringinrect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__HandleEOLine
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
</UL>

<P><STRONG><a name="[7e9]"></a>GUI_DispStringInRectMax</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, gui_dispstringinrect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>
<BR>[Called By]<UL><LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
</UL>

<P><STRONG><a name="[704]"></a>GUI_DispStringInRect</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_dispstringinrect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint (via Veneer)
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[7ec]"></a>GL_DrawBitmap</STRONG> (Thumb, 160 bytes, Stack size 56 bytes, gui_drawbitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
</UL>

<P><STRONG><a name="[68f]"></a>GUI_DrawBitmap</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, gui_drawbitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainDisplayStatus (via Veneer)
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ProgressBar (via Veneer)
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Logo (via Veneer)
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintDispConnect (via Veneer)
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[705]"></a>GUI_DrawHLine</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, gui_drawhline.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint (via Veneer)
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint (via Veneer)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D1L_DrawDownRect
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D1L_DrawUpRect
<LI><a href="#[8c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawVLine
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTriangleDown
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D_DrawDownRect
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D_DrawUpRect
<LI><a href="#[9dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTriangle
</UL>

<P><STRONG><a name="[706]"></a>GUI_DrawVLine</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, gui_drawvline.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = GUI_DrawVLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint (via Veneer)
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint (via Veneer)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D1L_DrawDownRect
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D1L_DrawUpRect
<LI><a href="#[8c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawVLine
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D_DrawDownRect
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D_DrawUpRect
<LI><a href="#[9dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTriangle
</UL>

<P><STRONG><a name="[69e]"></a>GUI_FillRect</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, gui_fillrect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainDisplayStatus (via Veneer)
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ProgressBar (via Veneer)
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Logo (via Veneer)
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
</UL>

<P><STRONG><a name="[72e]"></a>GUI_GetStringDistX</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gui_getstringdistx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_GetCharDistX &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__RecalcTextWidthOfItems (via Veneer)
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcTextWidth (via Veneer)
<LI><a href="#[8a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextRect
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[873]"></a>GUI_GetYSizeOfFont</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_getysizeoffont.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
</UL>

<P><STRONG><a name="[6f5]"></a>GUI_GetYDistOfFont</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_getysizeoffont.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateEx
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY (via Veneer)
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint (via Veneer)
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemHeight (via Veneer)
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[6fc]"></a>GUI_MoveRect</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gui_moverect.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint (via Veneer)
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[979]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[9da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[7f5]"></a>GUI_GetKey</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_onkey.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearKeyBuffer
</UL>

<P><STRONG><a name="[7f8]"></a>GUI_StoreKey</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_onkey.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
<LI><a href="#[96a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ButtonReleased
</UL>

<P><STRONG><a name="[7f4]"></a>GUI_ClearKeyBuffer</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, gui_onkey.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetKey
</UL>

<P><STRONG><a name="[67e]"></a>GUI_StoreKeyMsg</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_onkey.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_Key (via Veneer)
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SendKeyMsg
</UL>

<P><STRONG><a name="[7f6]"></a>GUI_PollKeyMsg</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, gui_onkey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = GUI_PollKeyMsg &rArr; WM_OnKey &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
</UL>
<BR>[Called By]<UL><LI><a href="#[8fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
</UL>

<P><STRONG><a name="[7f9]"></a>GUI_SendKeyMsg</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_onkey.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKeyMsg
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
</UL>

<P><STRONG><a name="[756]"></a>GUI_SetBkColor</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_setcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = GUI_SetBkColor &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint (via Veneer)
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPaintColors (via Veneer)
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
</UL>

<P><STRONG><a name="[682]"></a>GUI_SetColor</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_setcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = GUI_SetColor &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintTestSerial (via Veneer)
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintTestRS485 (via Veneer)
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintTestIO (via Veneer)
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSetType (via Veneer)
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSetTime (via Veneer)
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PaintDialog_kb (via Veneer)
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSetConnect (via Veneer)
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSetAddr (via Veneer)
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainDisplayStatus (via Veneer)
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ProgressBar (via Veneer)
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Logo (via Veneer)
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintDispConnect (via Veneer)
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintDispBackpower (via Veneer)
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitBrowsTestpointDialog (via Veneer)
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintBrowsTestpoint (via Veneer)
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint (via Veneer)
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPaintColors (via Veneer)
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[683]"></a>GUI_SetFont</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_setfont.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_SetFont &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint (via Veneer)
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintTestSerial (via Veneer)
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintTestRS485 (via Veneer)
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintTestIO (via Veneer)
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSetType (via Veneer)
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSetTime (via Veneer)
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PaintDialog_kb (via Veneer)
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSetConnect (via Veneer)
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSetAddr (via Veneer)
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainDisplayStatus (via Veneer)
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintDispConnect (via Veneer)
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintDispBackpower (via Veneer)
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitBrowsTestpointDialog (via Veneer)
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintBrowsTestpoint (via Veneer)
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__RecalcTextWidthOfItems (via Veneer)
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint (via Veneer)
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcTextWidth (via Veneer)
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeX
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[6af]"></a>GUI_SetTextMode</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_settextmode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_SetTextMode &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint (via Veneer)
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainDisplayStatus (via Veneer)
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[7fd]"></a>GUI_ALLOC_Init</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, guialloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckInit
</UL>

<P><STRONG><a name="[802]"></a>GUI_ALLOC_AllocNoInit</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, guialloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[702]"></a>GUI_ALLOC_h2p</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, guialloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateEx
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTVIEW_Callback (via Veneer)
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner (via Veneer)
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint (via Veneer)
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetAutoScroll
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetTextAlign
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtChar
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetText
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_EnableMemdev
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_CreateEx (via Veneer)
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_AddItem (via Veneer)
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetTextColor
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateEx (via Veneer)
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow (via Veneer)
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn (via Veneer)
<LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateEx
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddMenu
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetBarColor
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DetachWindow
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MENU_AddKey (via Veneer)
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_SetOwner (via Veneer)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MENU_Callback (via Veneer)
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_GetState
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[8be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetWindowSizeX
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateChildPostions
<LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateEx
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextPos
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextAlign
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextColor
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateEx
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetText
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeText
<LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
<LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItem
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemText
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DeleteItem
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[89d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetBkColor
<LI><a href="#[89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextColor
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetFont
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HEADER_Callback
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SethItem
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColorEx
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetBarColor
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetAnchor
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Attach
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableMemdev
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetMoveable
<LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FRAMEWIN_Callback
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
<LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetValue
<LI><a href="#[869]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[867]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFont
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__Callback
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsCharsAvailable
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwner
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[845]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetScrollbarWidth
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetTextColor
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetBkColor
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetNumItems
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateEx
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DROPDOWN_Callback
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectByKey
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetpItem
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[8e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
<LI><a href="#[8e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveFromLinList
<LI><a href="#[8e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateArea
<LI><a href="#[8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[8dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransTopSiblings
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[8ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[8e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddToLinList
<LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteAllChildren
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[8d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[8cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindow
<LI><a href="#[981]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowDescs
<LI><a href="#[97d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextChild
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
<LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
<LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[979]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRect
<LI><a href="#[976]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
<LI><a href="#[973]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[966]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_GetValue
<LI><a href="#[96c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
<LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RADIO_Callback
<LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollH
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemSpacing
<LI><a href="#[961]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetFont
<LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTBOX_Callback
<LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[955]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectByKey
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[94b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[93e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetTextColor
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetBkColor
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetFont
<LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[921]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[9ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
<LI><a href="#[9eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[9ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[9e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
<LI><a href="#[9e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[9e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SCROLLBAR_Callback
<LI><a href="#[9d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_Select
<LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
<LI><a href="#[9c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[9bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
<LI><a href="#[9bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
<LI><a href="#[9ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsChild
<LI><a href="#[9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[9aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[9ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[9ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__GetIndexMask
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__Index2Color
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__Color2Index
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__GetRect
</UL>

<P><STRONG><a name="[803]"></a>GUI_ALLOC_GetNumFreeBytes</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, guialloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckInit
</UL>

<P><STRONG><a name="[804]"></a>GUI_ALLOC_GetMaxSize</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, guialloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_GetMaxSize &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckInit
</UL>
<BR>[Called By]<UL><LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[805]"></a>GUI_ALLOC_GetSize</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, guialloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_ALLOC_GetSize
</UL>
<BR>[Calls]<UL><LI><a href="#[806]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetSize
</UL>
<BR>[Called By]<UL><LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
</UL>

<P><STRONG><a name="[719]"></a>GUI_ALLOC_Free</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, guialloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached (via Veneer)
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_USAGE_BM_Delete
<LI><a href="#[9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[808]"></a>GUI_ALLOC_FreePtr</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, guialloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeText
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItem
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SethItem
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FRAMEWIN_Callback
<LI><a href="#[857]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Delete
<LI><a href="#[92b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Delete
</UL>

<P><STRONG><a name="[703]"></a>GUI_ClearRect</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, guicore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint (via Veneer)
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint (via Veneer)
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>

<P><STRONG><a name="[80b]"></a>GUI_Clear</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, guicore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUI_Clear &rArr; GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
</UL>
<BR>[Called By]<UL><LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawPart
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[6a0]"></a>GUI_Init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, guicore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = GUI_Init &rArr; WM_Init &rArr; WM_CreateWindow &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init (via Veneer)
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_CopyContext
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[6f3]"></a>GUI_Unlock</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, guitask.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Unlock (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateEx
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey (via Veneer)
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetAutoScroll
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetTextAlign
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtChar
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetText
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_EnableMemdev
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_CreateEx (via Veneer)
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_AddItem (via Veneer)
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetTextColor
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetEnterInfo (via Veneer)
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateEx (via Veneer)
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow (via Veneer)
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn (via Veneer)
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateEx
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddMenu
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetBarColor
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DetachWindow
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_SetOwner (via Veneer)
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint (via Veneer)
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_GetState
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateChildPostions
<LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateEx
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextPos
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextAlign
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextColor
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateEx
<LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemText
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DeleteItem
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[89d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetBkColor
<LI><a href="#[89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextColor
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetFont
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HEADER_Callback
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColorEx
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetBarColor
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetAnchor
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Attach
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableMemdev
<LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetMoveable
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetActive
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
<LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetValue
<LI><a href="#[869]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[867]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFont
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwner
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[845]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetScrollbarWidth
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetTextColor
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetBkColor
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetNumItems
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateEx
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
<LI><a href="#[913]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispNextLine
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeNone
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[90e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[911]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDefault
<LI><a href="#[90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoX
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoY
<LI><a href="#[906]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[8ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[8fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
<LI><a href="#[8e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateArea
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[8d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[8cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
<LI><a href="#[8cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindow
<LI><a href="#[99c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPoint
<LI><a href="#[99a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveTo
<LI><a href="#[999]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineTo
<LI><a href="#[997]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineRel
<LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRel
<LI><a href="#[994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPolygon
<LI><a href="#[990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[981]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRect
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
<LI><a href="#[966]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[965]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontInfo
<LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_GetValue
<LI><a href="#[96c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
<LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollH
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemSpacing
<LI><a href="#[961]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetFont
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[94a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
<LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddKey
<LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_IncSel
<LI><a href="#[959]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DecSel
<LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetTextColor
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetBkColor
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetFont
<LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[921]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[9ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
<LI><a href="#[9eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[9ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[9e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
<LI><a href="#[9e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[9e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[9d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_Select
<LI><a href="#[9d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawEllipse
<LI><a href="#[9d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillEllipse
<LI><a href="#[9d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[9cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillPolygon
<LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
<LI><a href="#[9c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[9bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[9aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[9a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[9ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[9a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenShape
<LI><a href="#[9a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenShape
<LI><a href="#[9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
<LI><a href="#[9a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColorIndex
<LI><a href="#[99f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColorIndex
</UL>

<P><STRONG><a name="[6f2]"></a>GUI_Lock</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, guitask.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_EventTaskWait
</UL>
<BR>[Calls]<UL><LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTaskId (via Veneer)
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Lock (via Veneer)
<LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTaskNo
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateEx
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey (via Veneer)
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetAutoScroll
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetTextAlign
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtChar
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetText
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_EnableMemdev
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_CreateEx (via Veneer)
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_AddItem (via Veneer)
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetTextColor
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetEnterInfo (via Veneer)
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateEx (via Veneer)
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow (via Veneer)
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn (via Veneer)
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateEx
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddMenu
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetBarColor
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DetachWindow
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_SetOwner (via Veneer)
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint (via Veneer)
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_GetState
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateChildPostions
<LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateEx
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextPos
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextAlign
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextColor
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateEx
<LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemText
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DeleteItem
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[89d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetBkColor
<LI><a href="#[89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextColor
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetFont
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HEADER_Callback
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColorEx
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetBarColor
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetAnchor
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Attach
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableMemdev
<LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetMoveable
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetActive
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
<LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetValue
<LI><a href="#[869]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[867]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFont
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwner
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[845]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetScrollbarWidth
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetTextColor
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetBkColor
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetNumItems
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateEx
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
<LI><a href="#[913]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispNextLine
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeNone
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[90e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[911]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDefault
<LI><a href="#[90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoX
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoY
<LI><a href="#[906]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[8ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[8fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
<LI><a href="#[8e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateArea
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[8d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[8cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
<LI><a href="#[8cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindow
<LI><a href="#[99c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPoint
<LI><a href="#[99a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveTo
<LI><a href="#[999]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineTo
<LI><a href="#[997]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineRel
<LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRel
<LI><a href="#[994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPolygon
<LI><a href="#[990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[981]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRect
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
<LI><a href="#[966]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[965]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontInfo
<LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_GetValue
<LI><a href="#[96c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
<LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollH
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetItemSpacing
<LI><a href="#[961]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetFont
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[94a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
<LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddKey
<LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_IncSel
<LI><a href="#[959]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DecSel
<LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetTextColor
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetBkColor
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetFont
<LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[921]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[9ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
<LI><a href="#[9eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[9ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[9e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
<LI><a href="#[9e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[9e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[9d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_Select
<LI><a href="#[9d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawEllipse
<LI><a href="#[9d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillEllipse
<LI><a href="#[9d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[9cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillPolygon
<LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
<LI><a href="#[9c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[9bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[9aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[9a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[9ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[9a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenShape
<LI><a href="#[9a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenShape
<LI><a href="#[9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
<LI><a href="#[9a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColorIndex
<LI><a href="#[99f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColorIndex
</UL>

<P><STRONG><a name="[80d]"></a>GUITASK_Init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guitask.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = GUITASK_Init &rArr; GUI_X_InitOS &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_InitOS (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[810]"></a>GUITASK_CopyContext</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, guitask.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUITASK_CopyContext &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[813]"></a>GUI_GetTime</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, guitime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = GUI_GetTime &rArr; GUI_X_GetTime &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>

<P><STRONG><a name="[6c9]"></a>GUI_Delay</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, guitime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568 + Unknown Stack Size
<LI>Call Chain = GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; _Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay (via Veneer)
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Task (via Veneer)
</UL>

<P><STRONG><a name="[815]"></a>LCD_SetColorIndex</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SetColorIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE4
<LI><a href="#[9cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
</UL>

<P><STRONG><a name="[817]"></a>LCD_SetBkColorIndex</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SetBkColorIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[9cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
</UL>

<P><STRONG><a name="[80a]"></a>LCD_SetDrawMode</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
</UL>

<P><STRONG><a name="[da]"></a>LCD_DrawPixel</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocusRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicore.o(.constdata)
</UL>
<P><STRONG><a name="[d9]"></a>LCD_DrawHLine</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE4
<LI><a href="#[99b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicore.o(.constdata)
</UL>
<P><STRONG><a name="[7f3]"></a>LCD_FillRect</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE4
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
</UL>

<P><STRONG><a name="[7ef]"></a>LCD_DrawBitmap</STRONG> (Thumb, 562 bytes, Stack size 96 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[9ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
</UL>

<P><STRONG><a name="[818]"></a>LCD_SetClipRectMax</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[8ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[8e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[9cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>

<P><STRONG><a name="[80e]"></a>LCD_Init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_Init &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_Init (via Veneer)
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_On (via Veneer)
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[81b]"></a>LCD_Color2Index</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[91d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
<LI><a href="#[9cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
</UL>

<P><STRONG><a name="[9a1]"></a>LCD_Index2Color</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Index2Color
</UL>
<BR>[Called By]<UL><LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
</UL>

<P><STRONG><a name="[700]"></a>LCD_SetBkColor</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetBkColor &rArr; LCD_Color2Index
</UL>
<BR>[Calls]<UL><LI><a href="#[81b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint (via Veneer)
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawPart
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[6fe]"></a>LCD_SetColor</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetColor &rArr; LCD_Color2Index
</UL>
<BR>[Calls]<UL><LI><a href="#[81b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint (via Veneer)
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D1L_DrawDownRect
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D1L_DrawUpRect
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawPart
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D_DrawDownRect
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D_DrawUpRect
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[9de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[c9]"></a>BUTTON_CreateIndirect</STRONG> (Thumb, 80 bytes, Stack size 48 bytes, button_createindirect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = BUTTON_CreateIndirect &rArr; BUTTON_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
</UL>
<BR>[Address Reference Count : 11]<UL><LI> user_dispbackpower.o(.constdata)
<LI> user_setconnect.o(.constdata)
<LI> user_settime.o(.constdata)
<LI> user_browstestpoint.o(.constdata)
<LI> user_testrs485.o(.constdata)
<LI> user_dispconnect.o(.constdata)
<LI> user_setaddr.o(.constdata)
<LI> user_setpassword.o(.constdata)
<LI> user_testio.o(.constdata)
<LI> user_testserial.o(.constdata)
<LI> user_settype.o(.constdata)
</UL>
<P><STRONG><a name="[8bd]"></a>DIALOG_GetBkColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dialog.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetBkColor
</UL>

<P><STRONG><a name="[ab2]"></a>DIALOG_SetBkColor</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dialog.o(.text), UNUSED)

<P><STRONG><a name="[81f]"></a>GUI_SetDialogStatusPtr</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, dialog.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[826]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
</UL>

<P><STRONG><a name="[820]"></a>GUI_GetDialogStatusPtr</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, dialog.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = GUI_GetDialogStatusPtr &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
</UL>

<P><STRONG><a name="[6ad]"></a>GUI_CreateDialogBox</STRONG> (Thumb, 120 bytes, Stack size 48 bytes, dialog.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = GUI_CreateDialogBox &rArr; WM_ShowWindow &rArr; WM_InvalidateWindowDescs &rArr;  WM_InvalidateWindowDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbReversiWin (via Veneer)
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMenu (via Veneer)
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecDialogBox
</UL>

<P><STRONG><a name="[689]"></a>GUI_EndDialog</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, dialog.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = GUI_EndDialog &rArr; WM_DeleteWindow &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDialogStatusPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTestSerial (via Veneer)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTestRS485 (via Veneer)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTestIO (via Veneer)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetType (via Veneer)
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetTime (via Veneer)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetPassword (via Veneer)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetConnect (via Veneer)
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetAddr (via Veneer)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDispConnect (via Veneer)
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDispBackpower (via Veneer)
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBrowsTestpoint (via Veneer)
</UL>

<P><STRONG><a name="[826]"></a>GUI_ExecCreatedDialog</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, dialog.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_ExecIdle (via Veneer)
<LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDialogStatusPtr
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
</UL>
<BR>[Called By]<UL><LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecDialogBox
</UL>

<P><STRONG><a name="[827]"></a>GUI_ExecDialogBox</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, dialog.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[826]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
</UL>

<P><STRONG><a name="[6db]"></a>DROPDOWN_SetSel</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_SetSel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitSetConnectDialog (via Veneer)
<LI><a href="#[84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DecSel
<LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_IncSel
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DROPDOWN_Callback
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectByKey
</UL>

<P><STRONG><a name="[836]"></a>DROPDOWN__AdjustHeight</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = DROPDOWN__AdjustHeight &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateEx
</UL>

<P><STRONG><a name="[838]"></a>DROPDOWN_Expand</STRONG> (Thumb, 336 bytes, Stack size 64 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 704 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_Expand &rArr; LISTBOX_CreateAsChild &rArr; LISTBOX_CreateEx &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeX
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwner
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateAsChild
<LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetpItem
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DROPDOWN_Callback
</UL>

<P><STRONG><a name="[843]"></a>DROPDOWN_AddKey</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 720 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_AddKey &rArr; DROPDOWN_Expand &rArr; LISTBOX_CreateAsChild &rArr; LISTBOX_CreateEx &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectByKey
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DROPDOWN_Callback
</UL>

<P><STRONG><a name="[844]"></a>DROPDOWN_Collapse</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_Collapse &rArr; WM_DeleteWindow &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DROPDOWN_Callback
</UL>

<P><STRONG><a name="[846]"></a>DROPDOWN_CreateEx</STRONG> (Thumb, 138 bytes, Stack size 72 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_CreateEx &rArr; DROPDOWN__AdjustHeight &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateIndirect
</UL>

<P><STRONG><a name="[6da]"></a>DROPDOWN_AddString</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_AddString &rArr; GUI_ARRAY_AddItem &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTestSerialDialog (via Veneer)
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTestRS485Dialog (via Veneer)
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitSetTypeDialog (via Veneer)
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitSetConnectDialog (via Veneer)
</UL>

<P><STRONG><a name="[847]"></a>DROPDOWN_GetNumItems</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, dropdown.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumItems
</UL>

<P><STRONG><a name="[848]"></a>DROPDOWN_SetFont</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, dropdown.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
</UL>

<P><STRONG><a name="[849]"></a>DROPDOWN_SetBkColor</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, dropdown.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
</UL>

<P><STRONG><a name="[84a]"></a>DROPDOWN_SetTextColor</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, dropdown.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
</UL>

<P><STRONG><a name="[6dd]"></a>DROPDOWN_GetSel</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_GetSel &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintTestRS485 (via Veneer)
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetConnectDialog (via Veneer)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTestRS485 (via Veneer)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetType (via Veneer)
<LI><a href="#[84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DecSel
<LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_IncSel
</UL>

<P><STRONG><a name="[84b]"></a>DROPDOWN_IncSel</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, dropdown.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
</UL>

<P><STRONG><a name="[84c]"></a>DROPDOWN_DecSel</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dropdown.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetSel
</UL>

<P><STRONG><a name="[84d]"></a>DROPDOWN_SetScrollbarWidth</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, dropdown.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
</UL>

<P><STRONG><a name="[ab3]"></a>DROPDOWN_SetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dropdown.o(.text), UNUSED)

<P><STRONG><a name="[ab4]"></a>DROPDOWN_GetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dropdown.o(.text), UNUSED)

<P><STRONG><a name="[cb]"></a>DROPDOWN_CreateIndirect</STRONG> (Thumb, 72 bytes, Stack size 48 bytes, dropdown_createindirect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_CreateIndirect &rArr; DROPDOWN_CreateEx &rArr; DROPDOWN__AdjustHeight &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateEx
</UL>
<BR>[Address Reference Count : 4]<UL><LI> user_setconnect.o(.constdata)
<LI> user_testrs485.o(.constdata)
<LI> user_testserial.o(.constdata)
<LI> user_settype.o(.constdata)
</UL>
<P><STRONG><a name="[6ef]"></a>DROPDOWN_SetAutoScroll</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, dropdown_setautoscroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_SetAutoScroll &rArr; LISTBOX_SetAutoScrollV &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
</UL>
<BR>[Called By]<UL><LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTestSerialDialog (via Veneer)
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTestRS485Dialog (via Veneer)
</UL>

<P><STRONG><a name="[858]"></a>EDIT__SetCursorPos</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EDIT__SetCursorPos &rArr; GUI__GetNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtChar
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
</UL>

<P><STRONG><a name="[859]"></a>EDIT_SetCursorAtPixel</STRONG> (Thumb, 250 bytes, Stack size 56 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = EDIT_SetCursorAtPixel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
</UL>
<BR>[Called By]<UL><LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[864]"></a>EDIT__GetCurrentChar</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, edit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
</UL>

<P><STRONG><a name="[6e1]"></a>EDIT_AddKey</STRONG> (Thumb, 390 bytes, Stack size 24 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = EDIT_AddKey &rArr; _InsertChar &rArr; _IsSpaceInBuffer &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetPassword (via Veneer)
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__Callback
</UL>

<P><STRONG><a name="[866]"></a>EDIT_CreateEx</STRONG> (Thumb, 160 bytes, Stack size 72 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = EDIT_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateIndirect
</UL>

<P><STRONG><a name="[867]"></a>EDIT_SetFont</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, edit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[868]"></a>EDIT_SetBkColor</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, edit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[869]"></a>EDIT_SetTextColor</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, edit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[6cf]"></a>EDIT_SetText</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = EDIT_SetText &rArr; _IsSpaceInBuffer &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitSetTimeDialog (via Veneer)
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitSetAddrDialog (via Veneer)
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTestSerial (via Veneer)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetPassword (via Veneer)
</UL>

<P><STRONG><a name="[6d1]"></a>EDIT_GetText</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = EDIT_GetText &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_getUserInputTime (via Veneer)
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_getUserInputIP (via Veneer)
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_checkUserInputIP (via Veneer)
</UL>

<P><STRONG><a name="[86a]"></a>EDIT_GetValue</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, edit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[86b]"></a>EDIT_SetValue</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, edit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>

<P><STRONG><a name="[86c]"></a>EDIT_SetMaxLen</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, edit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
</UL>

<P><STRONG><a name="[86d]"></a>EDIT_SetTextAlign</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = EDIT_SetTextAlign &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateIndirect
</UL>

<P><STRONG><a name="[ca]"></a>EDIT_CreateIndirect</STRONG> (Thumb, 92 bytes, Stack size 48 bytes, edit_createindirect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = EDIT_CreateIndirect &rArr; EDIT_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
</UL>
<BR>[Address Reference Count : 4]<UL><LI> user_settime.o(.constdata)
<LI> user_setaddr.o(.constdata)
<LI> user_setpassword.o(.constdata)
<LI> user_testserial.o(.constdata)
</UL>
<P><STRONG><a name="[6d6]"></a>EDIT_SetCursorAtChar</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, edit_setcursoratchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = EDIT_SetCursorAtChar &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
</UL>
<BR>[Called By]<UL><LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_changeEdit (via Veneer)
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_changeAddrEdit (via Veneer)
</UL>

<P><STRONG><a name="[872]"></a>FRAMEWIN__CalcTitleHeight</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FRAMEWIN__CalcTitleHeight
</UL>
<BR>[Calls]<UL><LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
</UL>
<BR>[Called By]<UL><LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddMenu
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>

<P><STRONG><a name="[874]"></a>FRAMEWIN__CalcPositions</STRONG> (Thumb, 270 bytes, Stack size 56 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN__CalcPositions &rArr; WM_GetWindowSizeY &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[875]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeY
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateEx
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FRAMEWIN_Callback
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[87c]"></a>FRAMEWIN_SetActive</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_SetActive &rArr; _SetActive &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[87e]"></a>FRAMEWIN__UpdatePositions</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN__UpdatePositions &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>
<BR>[Called By]<UL><LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddMenu
</UL>

<P><STRONG><a name="[6b2]"></a>FRAMEWIN_SetText</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateEx
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StartReversi (via Veneer)
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint (via Veneer)
</UL>

<P><STRONG><a name="[6c3]"></a>FRAMEWIN_CreateEx</STRONG> (Thumb, 226 bytes, Stack size 72 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DisableMemdev
<LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StartReversi (via Veneer)
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateIndirect
</UL>

<P><STRONG><a name="[6c6]"></a>FRAMEWIN_SetTextAlign</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_SetTextAlign &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StartReversi (via Veneer)
</UL>

<P><STRONG><a name="[882]"></a>FRAMEWIN_SetMoveable</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, framewin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[6ab]"></a>FRAMEWIN_AddMenu</STRONG> (Thumb, 156 bytes, Stack size 56 bytes, framewin_addmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_AddMenu &rArr; MENU_Attach &rArr; MENU__ResizeMenu &rArr; _CalcWindowSizeY &rArr; _CalcMenuSizeY &rArr; _GetItemHeight &rArr; _GetEffectSize &rArr; _HasEffect &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_SetOwner (via Veneer)
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetAnchor
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Attach
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateMenu (via Veneer)
</UL>

<P><STRONG><a name="[c7]"></a>FRAMEWIN_CreateIndirect</STRONG> (Thumb, 78 bytes, Stack size 56 bytes, framewin_createindirect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_CreateIndirect &rArr; FRAMEWIN_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateEx
</UL>
<BR>[Address Reference Count : 11]<UL><LI> user_dispbackpower.o(.constdata)
<LI> user_setconnect.o(.constdata)
<LI> user_settime.o(.constdata)
<LI> user_browstestpoint.o(.constdata)
<LI> user_testrs485.o(.constdata)
<LI> user_dispconnect.o(.constdata)
<LI> user_setaddr.o(.constdata)
<LI> user_setpassword.o(.constdata)
<LI> user_testio.o(.constdata)
<LI> user_testserial.o(.constdata)
<LI> user_settype.o(.constdata)
</UL>
<P><STRONG><a name="[885]"></a>FRAMEWIN_SetBarColor</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, framewin_setcolors.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[886]"></a>FRAMEWIN_SetTextColor</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, framewin_setcolors.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[887]"></a>FRAMEWIN_SetTextColorEx</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, framewin_setcolors.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[6c4]"></a>FRAMEWIN_SetClientColor</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, framewin_setcolors.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_SetClientColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StartReversi (via Veneer)
</UL>

<P><STRONG><a name="[6c5]"></a>FRAMEWIN_SetFont</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, framewin_setfont.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_SetFont &rArr; FRAMEWIN__UpdatePositions &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog_kb (via Veneer)
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StartReversi (via Veneer)
</UL>

<P><STRONG><a name="[6e0]"></a>FRAMEWIN_SetTitleHeight</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, framewin_settitleheight.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_SetTitleHeight &rArr; FRAMEWIN__UpdatePositions &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDialog_kb (via Veneer)
</UL>

<P><STRONG><a name="[6fb]"></a>GUI_ARRAY_GetNumItems</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_array.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas (via Veneer)
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached (via Veneer)
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos (via Veneer)
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint (via Veneer)
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetTextAlign
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow (via Veneer)
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__GetNumItems (via Veneer)
<LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemText
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DeleteItem
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
</UL>

<P><STRONG><a name="[725]"></a>GUI_ARRAY_AddItem</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, gui_array.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_AddItem &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_AddItem (via Veneer)
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow (via Veneer)
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn (via Veneer)
<LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateEx
<LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
</UL>

<P><STRONG><a name="[71a]"></a>GUI_ARRAY_Delete</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, gui_array.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached (via Veneer)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MENU_Callback (via Veneer)
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RADIO_Callback
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
</UL>

<P><STRONG><a name="[88a]"></a>GUI_ARRAY_SethItem</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, gui_array.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_SethItem &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItem
</UL>

<P><STRONG><a name="[761]"></a>GUI_ARRAY_SetItem</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, gui_array.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_SetItem &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__SetItem (via Veneer)
</UL>

<P><STRONG><a name="[829]"></a>GUI_ARRAY_GethItem</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, gui_array.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_ARRAY_GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
<LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GethItem
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[955]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
</UL>

<P><STRONG><a name="[6ff]"></a>GUI_ARRAY_GetpItem</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, gui_array.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI_ARRAY_GetpItem &rArr; GUI_ARRAY_GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached (via Veneer)
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint (via Veneer)
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetTextAlign
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow (via Veneer)
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn (via Veneer)
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__SetItemFlags (via Veneer)
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__SetItem (via Veneer)
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__RecalcTextWidthOfItems (via Veneer)
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MENU_AddKey (via Veneer)
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SellecPreviousItem (via Veneer)
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SellecNextItem (via Veneer)
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint (via Veneer)
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ActivateMenu (via Veneer)
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ActivateItem (via Veneer)
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubmenu (via Veneer)
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CloseSubmenu (via Veneer)
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemHeight (via Veneer)
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemWidth (via Veneer)
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItem
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpString
<LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeX
</UL>

<P><STRONG><a name="[763]"></a>GUI_ARRAY_DeleteItem</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, gui_array_deleteitem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_DeleteItem &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_AddItem (via Veneer)
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DeleteItem
</UL>

<P><STRONG><a name="[893]"></a>HEADER_SetItemWidth</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, header.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = HEADER_SetItemWidth &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
</UL>
<BR>[Called By]<UL><LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[701]"></a>HEADER_GetItemWidth</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, header.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = HEADER_GetItemWidth &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetHeaderWidth (via Veneer)
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint (via Veneer)
<LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[723]"></a>HEADER_CreateEx</STRONG> (Thumb, 234 bytes, Stack size 56 bytes, header.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = HEADER_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_GetDefaultEffect
</UL>
<BR>[Called By]<UL><LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateEx (via Veneer)
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Create
</UL>

<P><STRONG><a name="[899]"></a>HEADER_Create</STRONG> (Thumb, 46 bytes, Stack size 56 bytes, header.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateEx
</UL>

<P><STRONG><a name="[ab5]"></a>HEADER_SetDefaultCursor</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, header.o(.text), UNUSED)

<P><STRONG><a name="[ab6]"></a>HEADER_SetDefaultBkColor</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, header.o(.text), UNUSED)

<P><STRONG><a name="[ab7]"></a>HEADER_SetDefaultTextColor</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, header.o(.text), UNUSED)

<P><STRONG><a name="[ab8]"></a>HEADER_SetDefaultBorderH</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, header.o(.text), UNUSED)

<P><STRONG><a name="[ab9]"></a>HEADER_SetDefaultBorderV</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, header.o(.text), UNUSED)

<P><STRONG><a name="[aba]"></a>HEADER_SetDefaultFont</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, header.o(.text), UNUSED)

<P><STRONG><a name="[abb]"></a>HEADER_GetDefaultCursor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, header.o(.text), UNUSED)

<P><STRONG><a name="[abc]"></a>HEADER_GetDefaultBkColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, header.o(.text), UNUSED)

<P><STRONG><a name="[abd]"></a>HEADER_GetDefaultTextColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, header.o(.text), UNUSED)

<P><STRONG><a name="[abe]"></a>HEADER_GetDefaultBorderH</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, header.o(.text), UNUSED)

<P><STRONG><a name="[abf]"></a>HEADER_GetDefaultBorderV</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, header.o(.text), UNUSED)

<P><STRONG><a name="[ac0]"></a>HEADER_GetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, header.o(.text), UNUSED)

<P><STRONG><a name="[89a]"></a>HEADER_SetFont</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, header.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[89b]"></a>HEADER_SetHeight</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, header.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
</UL>

<P><STRONG><a name="[89c]"></a>HEADER_SetTextColor</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, header.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[89d]"></a>HEADER_SetBkColor</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, header.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[89e]"></a>HEADER_SetTextAlign</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, header.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[720]"></a>HEADER_SetScrollPos</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, header.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTVIEW_Callback (via Veneer)
</UL>

<P><STRONG><a name="[724]"></a>HEADER_AddItem</STRONG> (Thumb, 178 bytes, Stack size 48 bytes, header.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = HEADER_AddItem &rArr; GUI_ARRAY_AddItem &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn (via Veneer)
</UL>

<P><STRONG><a name="[89f]"></a>HEADER_DeleteItem</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, header.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
</UL>

<P><STRONG><a name="[8a0]"></a>HEADER_SetItemText</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, header.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItem
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy (via Veneer)
</UL>

<P><STRONG><a name="[6f8]"></a>HEADER_GetHeight</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, header.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = HEADER_GetHeight &rArr; WM_GetClientRectEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow (via Veneer)
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea (via Veneer)
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos (via Veneer)
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint (via Veneer)
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows (via Veneer)
</UL>

<P><STRONG><a name="[6fa]"></a>HEADER_GetNumItems</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, header.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = HEADER_GetNumItems &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetHeaderWidth (via Veneer)
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint (via Veneer)
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow (via Veneer)
</UL>

<P><STRONG><a name="[cc]"></a>LISTVIEW_CreateIndirect</STRONG> (Thumb, 72 bytes, Stack size 48 bytes, listview_createindirect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_CreateIndirect &rArr; LISTVIEW_CreateEx &rArr; HEADER_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateEx (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_testio.o(.constdata)
</UL>
<P><STRONG><a name="[ac1]"></a>LISTVIEW_SetDefaultFont</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, listview_default.o(.text), UNUSED)

<P><STRONG><a name="[ac2]"></a>LISTVIEW_SetDefaultTextColor</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, listview_default.o(.text), UNUSED)

<P><STRONG><a name="[ac3]"></a>LISTVIEW_SetDefaultBkColor</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, listview_default.o(.text), UNUSED)

<P><STRONG><a name="[6b7]"></a>LISTVIEW_SetDefaultGridColor</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, listview_default.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitListview (via Veneer)
</UL>

<P><STRONG><a name="[726]"></a>LISTVIEW_GetNumRows</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, listview_getnumrows.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_GetNumRows &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn (via Veneer)
</UL>

<P><STRONG><a name="[6c0]"></a>LISTVIEW_GetSel</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, listview_getsel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_GetSel &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_IncSel (via Veneer)
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DecSel (via Veneer)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbReversiWin (via Veneer)
</UL>

<P><STRONG><a name="[6ba]"></a>LISTVIEW_SetBkColor</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, listview_setbkcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetBkColor &rArr; LISTVIEW__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTestIODialog (via Veneer)
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitListview (via Veneer)
</UL>

<P><STRONG><a name="[6bb]"></a>LISTVIEW_SetGridVis</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, listview_setgridvis.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetGridVis &rArr; LISTVIEW__UpdateScrollParas &rArr; _GetNumVisibleRows &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas (via Veneer)
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTestIODialog (via Veneer)
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitListview (via Veneer)
</UL>

<P><STRONG><a name="[6b5]"></a>LISTVIEW_SetItemText</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, listview_setitemtext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetItemText &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow (via Veneer)
<LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumColumns
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItem
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintTestIO (via Veneer)
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint (via Veneer)
</UL>

<P><STRONG><a name="[6bd]"></a>LISTVIEW_SetRowHeight</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, listview_setrowheight.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetRowHeight &rArr; LISTVIEW__UpdateScrollParas &rArr; _GetNumVisibleRows &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas (via Veneer)
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTestIODialog (via Veneer)
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitListview (via Veneer)
</UL>

<P><STRONG><a name="[70c]"></a>LISTVIEW_SetSel</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, listview_setsel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollPos (via Veneer)
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow (via Veneer)
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea (via Veneer)
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos (via Veneer)
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_IncSel (via Veneer)
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DecSel (via Veneer)
</UL>

<P><STRONG><a name="[6ec]"></a>LISTVIEW_SetTextAlign</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, listview_settextalign.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetTextAlign &rArr; LISTVIEW__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTestIODialog (via Veneer)
</UL>

<P><STRONG><a name="[6bc]"></a>LISTVIEW_SetTextColor</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, listview_settextcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetTextColor &rArr; LISTVIEW__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTestIODialog (via Veneer)
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitListview (via Veneer)
</UL>

<P><STRONG><a name="[ac4]"></a>MENU_SetDefaultTextColor</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, menu_default.o(.text), UNUSED)

<P><STRONG><a name="[ac5]"></a>MENU_SetDefaultBkColor</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, menu_default.o(.text), UNUSED)

<P><STRONG><a name="[ac6]"></a>MENU_SetDefaultBorderSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, menu_default.o(.text), UNUSED)

<P><STRONG><a name="[ac7]"></a>MENU_SetDefaultEffect</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, menu_default.o(.text), UNUSED)

<P><STRONG><a name="[6a9]"></a>MENU_SetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, menu_default.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateMenu (via Veneer)
</UL>

<P><STRONG><a name="[ac8]"></a>MENU_GetDefaultTextColor</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, menu_default.o(.text), UNUSED)

<P><STRONG><a name="[ac9]"></a>MENU_GetDefaultBkColor</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, menu_default.o(.text), UNUSED)

<P><STRONG><a name="[aca]"></a>MENU_GetDefaultBorderSize</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, menu_default.o(.text), UNUSED)

<P><STRONG><a name="[acb]"></a>MENU_GetDefaultEffect</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, menu_default.o(.text), UNUSED)

<P><STRONG><a name="[acc]"></a>MENU_GetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, menu_default.o(.text), UNUSED)

<P><STRONG><a name="[8ac]"></a>PROGBAR_CreateEx</STRONG> (Thumb, 134 bytes, Stack size 72 bytes, progbar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
</UL>
<BR>[Called By]<UL><LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Create
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateAsChild
</UL>

<P><STRONG><a name="[6a4]"></a>PROGBAR_SetValue</STRONG> (Thumb, 234 bytes, Stack size 48 bytes, progbar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[8a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextRect
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetText
<LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Value2X
</UL>
<BR>[Called By]<UL><LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ProgressBar (via Veneer)
</UL>

<P><STRONG><a name="[8ae]"></a>PROGBAR_SetFont</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, progbar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[6a3]"></a>PROGBAR_SetBarColor</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, progbar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ProgressBar (via Veneer)
</UL>

<P><STRONG><a name="[8af]"></a>PROGBAR_SetTextColor</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, progbar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[8b0]"></a>PROGBAR_SetText</STRONG> (Thumb, 122 bytes, Stack size 48 bytes, progbar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[8a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextRect
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetText
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[8b1]"></a>PROGBAR_SetTextAlign</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, progbar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[8b2]"></a>PROGBAR_SetTextPos</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, progbar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[8b3]"></a>PROGBAR_SetMinMax</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, progbar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[6a2]"></a>PROGBAR_Create</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, progbar_create.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ProgressBar (via Veneer)
</UL>

<P><STRONG><a name="[8b4]"></a>PROGBAR_CreateAsChild</STRONG> (Thumb, 48 bytes, Stack size 48 bytes, progbar_create.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateEx
</UL>

<P><STRONG><a name="[c8]"></a>RADIO_CreateIndirect</STRONG> (Thumb, 88 bytes, Stack size 64 bytes, radio_createindirect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = RADIO_CreateIndirect &rArr; RADIO_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateEx
</UL>
<BR>[Address Reference Count : 4]<UL><LI> user_dispbackpower.o(.constdata)
<LI> user_browstestpoint.o(.constdata)
<LI> user_dispconnect.o(.constdata)
<LI> user_testio.o(.constdata)
</UL>
<P><STRONG><a name="[8c4]"></a>WIDGET__RotateRect90</STRONG> (Thumb, 42 bytes, Stack size 20 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = WIDGET__RotateRect90
</UL>
<BR>[Called By]<UL><LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillRectEx
<LI><a href="#[8c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawVLine
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawFocusRect
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
</UL>

<P><STRONG><a name="[8ba]"></a>WIDGET__GetClientRect</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = WIDGET__GetClientRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[9de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[8bb]"></a>WIDGET__GetBkColor</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, widget.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetBkColor
<LI><a href="#[8bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIALOG_GetBkColor
</UL>

<P><STRONG><a name="[850]"></a>WIDGET__GetInsideRect</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WIDGET__GetInsideRect
</UL>
<BR>[Calls]<UL><LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
</UL>
<BR>[Called By]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[9d8]"></a>WIDGET__GetXSize</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, widget.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetArrowSize
</UL>

<P><STRONG><a name="[9d9]"></a>WIDGET__GetYSize</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, widget.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetArrowSize
</UL>

<P><STRONG><a name="[8be]"></a>WIDGET__GetWindowSizeX</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, widget.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>

<P><STRONG><a name="[8bf]"></a>WIDGET_SetState</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = WIDGET_SetState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetState
</UL>

<P><STRONG><a name="[8c0]"></a>WIDGET_GetState</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, widget.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[821]"></a>WIDGET_OrState</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[935]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetFocussable
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ButtonPressed
<LI><a href="#[9df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ScrollbarPressed
</UL>

<P><STRONG><a name="[8c1]"></a>WIDGET_AndState</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[935]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetFocussable
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ButtonReleased
<LI><a href="#[9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ScrollbarReleased
</UL>

<P><STRONG><a name="[722]"></a>WIDGET__Init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, widget.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateEx
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_CreateEx (via Veneer)
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateEx (via Veneer)
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateEx
<LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateEx
<LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateEx
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateEx
<LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[9e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
</UL>

<P><STRONG><a name="[71c]"></a>WIDGET_HandleActive</STRONG> (Thumb, 254 bytes, Stack size 32 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = WIDGET_HandleActive &rArr; _UpdateChildPostions &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateChildPostions
<LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTVIEW_Callback (via Veneer)
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MENU_Callback (via Veneer)
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PROGBAR_Callback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HEADER_Callback
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FRAMEWIN_Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__Callback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DROPDOWN_Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RADIO_Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTBOX_Callback
<LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[716]"></a>WIDGET__SetScrollState</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = WIDGET__SetScrollState &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollState
</UL>
<BR>[Called By]<UL><LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollPos (via Veneer)
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[8c3]"></a>WIDGET__DrawFocusRect</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = WIDGET__DrawFocusRect &rArr; GUI_DrawFocusRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
</UL>
<BR>[Called By]<UL><LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[8c6]"></a>WIDGET__DrawVLine</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, widget.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
</UL>

<P><STRONG><a name="[8c7]"></a>WIDGET__FillRectEx</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = WIDGET__FillRectEx &rArr; GUI_FillRectEx &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
<LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[9de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[8aa]"></a>WIDGET__EFFECT_DrawDownRect</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = WIDGET__EFFECT_DrawDownRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EffectRequiresRedraw
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[707]"></a>WIDGET__EFFECT_DrawDown</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = WIDGET__EFFECT_DrawDown &rArr; WIDGET__EFFECT_DrawDownRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
</UL>
<BR>[Called By]<UL><LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint (via Veneer)
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[834]"></a>WIDGET__EFFECT_DrawUpRect</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = WIDGET__EFFECT_DrawUpRect &rArr; _EffectRequiresRedraw &rArr; WM__Client2Screen
</UL>
<BR>[Calls]<UL><LI><a href="#[8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EffectRequiresRedraw
</UL>
<BR>[Called By]<UL><LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[9de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[8c9]"></a>WIDGET_SetDefaultEffect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, widget.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetDefaultEffect_3D1L
<LI><a href="#[972]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetDefaultEffect_None
<LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetDefaultEffect_3D
</UL>

<P><STRONG><a name="[898]"></a>WIDGET_GetDefaultEffect</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, widget.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateEx
</UL>

<P><STRONG><a name="[8c8]"></a>WIDGET_SetDefaultEffect_3D1L</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, widget_effect_3d1l.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetDefaultEffect
</UL>

<P><STRONG><a name="[75a]"></a>WIDGET__FillStringInRect</STRONG> (Thumb, 282 bytes, Stack size 32 bytes, widget_fillstringinrect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = WIDGET__FillStringInRect &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
</UL>
<BR>[Called By]<UL><LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint (via Veneer)
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[75e]"></a>WIDGET_SetEffect</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, widget_seteffect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = WIDGET_SetEffect &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_CreateEx (via Veneer)
<LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateEx
</UL>

<P><STRONG><a name="[729]"></a>WM__SendMessage</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, wm__sendmessage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>
<BR>[Called By]<UL><LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__SendMenuMessage (via Veneer)
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMenu (via Veneer)
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ForwardPIDMsgToOwner (via Veneer)
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
</UL>

<P><STRONG><a name="[73f]"></a>WM_DetachWindow</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, wm_attachwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = WM_DetachWindow &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindowAt
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClosePopup (via Veneer)
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CloseSubmenu (via Veneer)
<LI><a href="#[8cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindow
</UL>

<P><STRONG><a name="[8cd]"></a>WM_AttachWindow</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, wm_attachwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = WM_AttachWindow &rArr; WM_DetachWindow &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DetachWindow
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindowAt
</UL>

<P><STRONG><a name="[744]"></a>WM_AttachWindowAt</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, wm_attachwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = WM_AttachWindowAt &rArr; WM_AttachWindow &rArr; WM_DetachWindow &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DetachWindow
<LI><a href="#[8cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
<LI><a href="#[8cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubmenu (via Veneer)
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_Attach
</UL>

<P><STRONG><a name="[715]"></a>WM_CheckScrollBounds</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wm_checkscrollpos.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollPos
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollPos (via Veneer)
<LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[714]"></a>WM_CheckScrollPos</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, wm_checkscrollpos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WM_CheckScrollPos
</UL>
<BR>[Calls]<UL><LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
</UL>
<BR>[Called By]<UL><LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollPos (via Veneer)
</UL>

<P><STRONG><a name="[8d0]"></a>WM_SetScrollValue</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, wm_checkscrollpos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM_SetScrollValue
</UL>
<BR>[Calls]<UL><LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
</UL>
<BR>[Called By]<UL><LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[681]"></a>WM_GetClientRectEx</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, wm_getclientrect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM_GetClientRectEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintTestSerial (via Veneer)
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintTestRS485 (via Veneer)
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintTestIO (via Veneer)
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSetType (via Veneer)
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSetTime (via Veneer)
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PaintDialog_kb (via Veneer)
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSetConnect (via Veneer)
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintSetAddr (via Veneer)
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateEx (via Veneer)
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint (via Veneer)
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintDispConnect (via Veneer)
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintDispBackpower (via Veneer)
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitBrowsTestpointDialog (via Veneer)
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintBrowsTestpoint (via Veneer)
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>

<P><STRONG><a name="[832]"></a>WM_GetClientRect</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, wm_getclientrect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D1L_GetRect
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D1L_DrawDown
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D1L_DrawUp
<LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_EFFECT_3D_DrawUp
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_None_GetRect
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D_GetRect
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D_DrawDown
</UL>

<P><STRONG><a name="[6ca]"></a>WM_GetClientWindow</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, wm_getclientwindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = WM_GetClientWindow &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Task (via Veneer)
</UL>

<P><STRONG><a name="[6c2]"></a>WM_GetDesktopWindow</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_getdesktopwindow.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StartReversi (via Veneer)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Task (via Veneer)
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubmenu (via Veneer)
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
</UL>

<P><STRONG><a name="[6ce]"></a>WM_GetDialogItem</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_getdialogitem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTestSerialDialog (via Veneer)
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTestRS485Dialog (via Veneer)
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintTestRS485 (via Veneer)
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitTestIODialog (via Veneer)
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaintTestIO (via Veneer)
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitSetTypeDialog (via Veneer)
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_getUserInputTime (via Veneer)
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_changeEdit (via Veneer)
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitSetTimeDialog (via Veneer)
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetConnectDialog (via Veneer)
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitSetConnectDialog (via Veneer)
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_changeAddrEdit (via Veneer)
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_getUserInputIP (via Veneer)
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_checkUserInputIP (via Veneer)
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitSetAddrDialog (via Veneer)
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTestSerial (via Veneer)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTestRS485 (via Veneer)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTestIO (via Veneer)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetType (via Veneer)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetPassword (via Veneer)
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
<LI><a href="#[9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[9bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[688]"></a>WM_GetId</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, wm_getid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = WM_GetId &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTestSerial (via Veneer)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTestRS485 (via Veneer)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTestIO (via Veneer)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetType (via Veneer)
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetTime (via Veneer)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetPassword (via Veneer)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetConnect (via Veneer)
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetAddr (via Veneer)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDispConnect (via Veneer)
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDispBackpower (via Veneer)
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBrowsTestpoint (via Veneer)
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
</UL>

<P><STRONG><a name="[6f7]"></a>WM_GetInsideRectExScrollbar</STRONG> (Thumb, 190 bytes, Stack size 48 bytes, wm_getinsiderectexscrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[8d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
</UL>
<BR>[Called By]<UL><LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow (via Veneer)
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea (via Veneer)
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetXSize (via Veneer)
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos (via Veneer)
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint (via Veneer)
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows (via Veneer)
<LI><a href="#[947]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[956]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[94b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
<LI><a href="#[93b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetYSize
</UL>

<P><STRONG><a name="[742]"></a>WM_GetWindowOrgX</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_getorg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM_GetWindowOrgX &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ForwardPIDMsgToOwner (via Veneer)
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubmenu (via Veneer)
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgX
</UL>

<P><STRONG><a name="[743]"></a>WM_GetWindowOrgY</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_getorg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM_GetWindowOrgY &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ForwardPIDMsgToOwner (via Veneer)
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubmenu (via Veneer)
<LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetOrgY
</UL>

<P><STRONG><a name="[8d4]"></a>WM_GetOrgX</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wm_getorg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX
</UL>

<P><STRONG><a name="[8d5]"></a>WM_GetOrgY</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wm_getorg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY
</UL>

<P><STRONG><a name="[70e]"></a>WM_GetParent</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, wm_getparent.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = WM_GetParent &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner (via Veneer)
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__SendMenuMessage (via Veneer)
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMenu (via Veneer)
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ForwardPIDMsgToOwner (via Veneer)
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetBkColor
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DeleteItem
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[9bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>

<P><STRONG><a name="[71f]"></a>WM_GetScrollbarH</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wm_getscrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = WM_GetScrollbarH &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTVIEW_Callback (via Veneer)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTBOX_Callback
<LI><a href="#[9da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[71d]"></a>WM_GetScrollbarV</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wm_getscrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = WM_GetScrollbarV &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTVIEW_Callback (via Veneer)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTBOX_Callback
<LI><a href="#[9da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[71e]"></a>WM_GetScrollState</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, wm_getscrollstate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = WM_GetScrollState &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTVIEW_Callback (via Veneer)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTBOX_Callback
</UL>

<P><STRONG><a name="[739]"></a>WM_HasCaptured</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm_hascaptured.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseCapture (via Veneer)
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCapture (via Veneer)
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
</UL>

<P><STRONG><a name="[74d]"></a>WM_PID__GetPrevState</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_pid__getprevstate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID (via Veneer)
</UL>

<P><STRONG><a name="[73a]"></a>WM_SetCapture</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, wm_setcapture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = WM_SetCapture &rArr; WM__ReleaseCapture &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCapture (via Veneer)
<LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[73c]"></a>WM_ReleaseCapture</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, wm_setcapture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = WM_ReleaseCapture &rArr; WM__ReleaseCapture &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClosePopup (via Veneer)
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseCapture (via Veneer)
<LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[6c8]"></a>WM_SetCreateFlags</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_setcreateflags.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Task (via Veneer)
</UL>

<P><STRONG><a name="[68a]"></a>WM_SetFocus</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, wm_setfocus.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = WM_SetFocus &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch (via Veneer)
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTestSerial (via Veneer)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTestRS485 (via Veneer)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTestIO (via Veneer)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetType (via Veneer)
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetTime (via Veneer)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetPassword (via Veneer)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetConnect (via Veneer)
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetAddr (via Veneer)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbReversiWin (via Veneer)
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMenu (via Veneer)
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateMenu (via Veneer)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDispConnect (via Veneer)
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDispBackpower (via Veneer)
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBrowsTestpoint (via Veneer)
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MENU_AddKey (via Veneer)
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FRAMEWIN_Callback
<LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DROPDOWN_Callback
<LI><a href="#[97e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFocusOnNextChild
<LI><a href="#[96a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[752]"></a>WM_SetSize</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, wm_setsize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__ResizeMenu (via Veneer)
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
</UL>

<P><STRONG><a name="[6c7]"></a>WM_EnableMemdev</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, wmmemdev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM_EnableMemdev &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Task (via Veneer)
</UL>

<P><STRONG><a name="[881]"></a>WM_DisableMemdev</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, wmmemdev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM_DisableMemdev &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateEx
</UL>

<P><STRONG><a name="[8d9]"></a>WM__RectIsNZ</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, wm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[8b9]"></a>WM__Client2Screen</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__Client2Screen
</UL>
<BR>[Calls]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EffectRequiresRedraw
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[8dd]"></a>WM__ClipAtParentBorders</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__ClipAtParentBorders
</UL>
<BR>[Calls]<UL><LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[8df]"></a>WM__ActivateClipRect</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>
<BR>[Called By]<UL><LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
</UL>

<P><STRONG><a name="[8ce]"></a>WM__InsertWindowIntoList</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WM__InsertWindowIntoList
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[8cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindow
<LI><a href="#[976]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>

<P><STRONG><a name="[8e0]"></a>WM__RemoveWindowFromList</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__RemoveWindowFromList
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[976]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>

<P><STRONG><a name="[8e1]"></a>WM_InvalidateArea</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateAreaBelow
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>

<P><STRONG><a name="[8cb]"></a>WM__DetachWindow</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = WM__DetachWindow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateArea
<LI><a href="#[8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
</UL>
<BR>[Called By]<UL><LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DetachWindow
<LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[8e2]"></a>WM_SelectWindow</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM_SelectWindow &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[8e3]"></a>WM__RemoveFromLinList</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WM__RemoveFromLinList
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[70f]"></a>WM_SendMessage</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner (via Veneer)
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollState
<LI><a href="#[8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetBkColor
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FRAMEWIN_Callback
<LI><a href="#[820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDialogStatusPtr
<LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDialogStatusPtr
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
<LI><a href="#[96b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
</UL>

<P><STRONG><a name="[894]"></a>WM__SendMsgNoData</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = WM__SendMsgNoData &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[979]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>

<P><STRONG><a name="[8e4]"></a>WM__IsWindow</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__IsWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[825]"></a>WM_DeleteWindow</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = WM_DeleteWindow &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[8e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
<LI><a href="#[8e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveFromLinList
<LI><a href="#[8e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteAllChildren
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetNextDrawWin
<LI><a href="#[8e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckCriticalHandles
<LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteAllChildren
<LI><a href="#[9bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[8e8]"></a>WM__InvalidateAreaBelow</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateArea
</UL>
<BR>[Called By]<UL><LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[9bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
</UL>

<P><STRONG><a name="[74e]"></a>WM__GetClientRectWin</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint (via Veneer)
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID (via Veneer)
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[709]"></a>WM_InvalidateRect</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateAreaBelow
<LI><a href="#[8dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow (via Veneer)
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea (via Veneer)
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[947]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
</UL>

<P><STRONG><a name="[6cb]"></a>WM_InvalidateWindow</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddString
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtChar
<LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddMenu
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetBarColor
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Task (via Veneer)
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__ResizeMenu (via Veneer)
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__InvalidateItem (via Veneer)
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextPos
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextAlign
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextColor
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DeleteItem
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[89d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetBkColor
<LI><a href="#[89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextColor
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetFont
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColorEx
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextColor
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetBarColor
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextAlign
<LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
<LI><a href="#[869]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetTextColor
<LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetBkColor
<LI><a href="#[867]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetFont
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetTextColor
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetBkColor
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowDescs
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateWindowAndDescs
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInvalidateOne
<LI><a href="#[968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTBOX_Callback
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetTextColor
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetBkColor
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetFont
<LI><a href="#[9eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[9ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[9e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[9e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnSetScrollState
<LI><a href="#[9c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
<LI><a href="#[9c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>

<P><STRONG><a name="[721]"></a>WM_CreateWindowAsChild</STRONG> (Thumb, 316 bytes, Stack size 40 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[8e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[8e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddToLinList
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
</UL>
<BR>[Called By]<UL><LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateEx
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_CreateEx (via Veneer)
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateEx (via Veneer)
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateEx
<LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateEx
<LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateEx
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_CreateEx
<LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateEx
<LI><a href="#[8ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindow
<LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[9e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
</UL>

<P><STRONG><a name="[8ee]"></a>WM_CreateWindow</STRONG> (Thumb, 44 bytes, Stack size 48 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = WM_CreateWindow &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>
<BR>[Called By]<UL><LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
</UL>

<P><STRONG><a name="[878]"></a>WM_GetActiveWindow</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>

<P><STRONG><a name="[7f1]"></a>WM__GetNextIVR</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[8ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>
<BR>[Called By]<UL><LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[99c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPoint
<LI><a href="#[999]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineTo
<LI><a href="#[997]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineRel
<LI><a href="#[994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPolygon
<LI><a href="#[990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[9d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawEllipse
<LI><a href="#[9d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillEllipse
<LI><a href="#[9d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[9cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillPolygon
<LI><a href="#[9ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[7f0]"></a>WM__InitIVRSearch</STRONG> (Thumb, 248 bytes, Stack size 32 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[8dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetInvalidRectAbs
</UL>
<BR>[Called By]<UL><LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[99c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPoint
<LI><a href="#[999]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineTo
<LI><a href="#[997]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineRel
<LI><a href="#[994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPolygon
<LI><a href="#[990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[9d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawEllipse
<LI><a href="#[9d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillEllipse
<LI><a href="#[9d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[9cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillPolygon
<LI><a href="#[9ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[8f1]"></a>WM_SetDefault</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = WM_SetDefault &rArr; GL_SetDefault &rArr; GUI_SetTextMode &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>
<BR>[Called By]<UL><LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
</UL>

<P><STRONG><a name="[8f7]"></a>WM__PaintWinAndOverlays</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = WM__PaintWinAndOverlays &rArr; _PaintTransTopSiblings &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransTopSiblings
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
</UL>
<BR>[Called By]<UL><LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
</UL>

<P><STRONG><a name="[8fd]"></a>WM_Exec1</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = WM_Exec1 &rArr; _DrawNext &rArr; _Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>
<BR>[Called By]<UL><LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>

<P><STRONG><a name="[6a5]"></a>WM_Exec</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; _Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[8fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
</UL>
<BR>[Called By]<UL><LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ProgressBar (via Veneer)
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
</UL>

<P><STRONG><a name="[68b]"></a>WM_DefaultProc</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTVIEW_Callback (via Veneer)
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTestSerial (via Veneer)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTestRS485 (via Veneer)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTestIO (via Veneer)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetType (via Veneer)
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetTime (via Veneer)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetPassword (via Veneer)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetConnect (via Veneer)
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbSetAddr (via Veneer)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbReversiWin (via Veneer)
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMenu (via Veneer)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDispConnect (via Veneer)
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbDispBackpower (via Veneer)
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBrowsTestpoint (via Veneer)
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MENU_Callback (via Veneer)
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PROGBAR_Callback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HEADER_Callback
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FRAMEWIN_Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__Callback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DROPDOWN_Callback
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RADIO_Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTBOX_Callback
<LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[901]"></a>WM_Activate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[9a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[9ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[8ff]"></a>WM_Deactivate</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = WM_Deactivate &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>

<P><STRONG><a name="[80f]"></a>WM_Init</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = WM_Init &rArr; WM_CreateWindow &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[901]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[8ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindow
<LI><a href="#[8e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[851]"></a>GUI__CalcTextRect</STRONG> (Thumb, 196 bytes, Stack size 40 bytes, gui__calctextrect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = GUI__CalcTextRect &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_GetCharDistX &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
</UL>
<BR>[Called By]<UL><LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[852]"></a>GUI__GetNumChars</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui__getnumchars.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI__GetNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetText
<LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__SetCursorPos
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsCharsAvailable
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[7e5]"></a>GUI__HandleEOLine</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui__handleeoline.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[7eb]"></a>GUI__IntersectRects</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, gui__intersectrects.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[880]"></a>GUI__SetText</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, gui__settext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = GUI__SetText &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
</UL>

<P><STRONG><a name="[8a6]"></a>GUI_AddDecMin</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_adddecmin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUI_AddDecMin &rArr; GUI_AddDecShift &rArr; _Check_NegLong
</UL>
<BR>[Calls]<UL><LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Long2Len
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetText
</UL>

<P><STRONG><a name="[889]"></a>GUI_ALLOC_AllocInit</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, gui_alloc_allocinit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_AllocInit &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[905]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>

<P><STRONG><a name="[88b]"></a>GUI_ALLOC_AllocZero</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gui_alloc_alloczero.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[905]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SetItem
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItem
<LI><a href="#[9aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[7df]"></a>GUI_DispString</STRONG> (Thumb, 328 bytes, Stack size 40 bytes, gui_dispstring.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[906]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
</UL>
<BR>[Called By]<UL><LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawPart
</UL>

<P><STRONG><a name="[8c5]"></a>GUI_DrawFocusRect</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, gui_drawfocusrect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = GUI_DrawFocusRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocusRect
</UL>
<BR>[Called By]<UL><LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawFocusRect
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[908]"></a>GUI_Exec1</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_exec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; _Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>
<BR>[Called By]<UL><LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
</UL>

<P><STRONG><a name="[814]"></a>GUI_Exec</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_exec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; WM_Exec1 &rArr; _DrawNext &rArr; _Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
</UL>
<BR>[Called By]<UL><LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[826]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
</UL>

<P><STRONG><a name="[833]"></a>GUI_FillRectEx</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_fillrectex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = GUI_FillRectEx &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillRectEx
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[7e2]"></a>GUI_GetClientRect</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_getclientrect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = GUI_GetClientRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[7e1]"></a>GUI_GetFontSizeY</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_getfontsizey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = GUI_GetFontSizeY &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetFontSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[8a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextRect
</UL>

<P><STRONG><a name="[90a]"></a>GUI_GotoY</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_goto.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GotoY
</UL>

<P><STRONG><a name="[90c]"></a>GUI_GotoX</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_goto.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GotoX
</UL>

<P><STRONG><a name="[80c]"></a>GUI_GotoXY</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_goto.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_GotoXY &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GotoX
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GotoY
</UL>
<BR>[Called By]<UL><LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawPart
</UL>

<P><STRONG><a name="[856]"></a>GUI_InvertRect</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, gui_invertrect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = GUI_InvertRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[8ad]"></a>GUI_MergeRect</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, gui_mergerect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_MergeRect
</UL>
<BR>[Called By]<UL><LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[8ca]"></a>GUI_RectsIntersect</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gui_rectsintersect.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>

<P><STRONG><a name="[8fb]"></a>GUI_SaveContext_W_M</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui_savecontext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_SaveContext_W_M &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>

<P><STRONG><a name="[8fc]"></a>GUI_RestoreContext</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui_savecontext.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_RestoreContext &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>

<P><STRONG><a name="[8f2]"></a>GL_SetDefault</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, gui_setdefault.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GL_SetDefault &rArr; GUI_SetTextMode &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[90e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
</UL>
<BR>[Called By]<UL><LI><a href="#[911]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDefault
<LI><a href="#[8f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
</UL>

<P><STRONG><a name="[911]"></a>GUI_SetDefault</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui_setdefault.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[7ed]"></a>GUI_SetDrawMode</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_setdrawmode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_SetDrawMode &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[81c]"></a>LCD_SetPixelIndex</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gui_setpixelindex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE4
</UL>

<P><STRONG><a name="[860]"></a>GUI_UC_GetCharSize</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_uc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_UC_GetCharSize &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
</UL>

<P><STRONG><a name="[853]"></a>GUI_UC_GetCharCode</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_uc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_UC_GetCharCode &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[863]"></a>GUI_UC_Encode</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_uc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_UC_Encode &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
</UL>

<P><STRONG><a name="[862]"></a>GUI_UC__CalcSizeOfChar</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui_uc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_UC__CalcSizeOfChar
</UL>
<BR>[Called By]<UL><LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
</UL>

<P><STRONG><a name="[855]"></a>GUI_UC__GetCharCodeInc</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_uc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>

<P><STRONG><a name="[7e4]"></a>GUI_UC__NumChars2NumBytes</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, gui_uc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__NumChars2NumBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_GetText
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__GetCurrentChar
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[acd]"></a>GUI_UC__NumBytes2NumChars</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, gui_uc.o(.text), UNUSED)

<P><STRONG><a name="[912]"></a>GUI_UC_SetEncodeNone</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_uc_encodenone.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[7e8]"></a>GUI_GetFontDistY</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, guichar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = GUI_GetFontDistY &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
<LI><a href="#[913]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispNextLine
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[913]"></a>GUI_DispNextLine</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guichar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_DispNextLine &rArr; GUI_GetFontDistY &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
</UL>
<BR>[Called By]<UL><LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
</UL>

<P><STRONG><a name="[914]"></a>GL_DispChar</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, guichar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GL_DispChar &rArr; GUI_DispNextLine &rArr; GUI_GetFontDistY &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[913]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine_SJIS
</UL>

<P><STRONG><a name="[906]"></a>GUI_GetYAdjust</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, guichar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = GUI_GetYAdjust &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[854]"></a>GUI_GetCharDistX</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, guichar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_GetCharDistX &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLineDistX_SJIS
</UL>

<P><STRONG><a name="[7e3]"></a>GUI__GetLineNumChars</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, guicharline.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[7e6]"></a>GUI__GetLineDistX</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, guicharline.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = GUI__GetLineDistX &rArr; GUI_GetCharDistX &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[7e7]"></a>GUI__DispLine</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, guicharline.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>
<BR>[Called By]<UL><LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[e1]"></a>GUIPROP_DispChar</STRONG> (Thumb, 656 bytes, Stack size 80 bytes, guicharp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = GUIPROP_DispChar &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT21L16S2W_Read (via Veneer)
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[916]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_FindChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hzk16.o(.constdata)
</UL>
<P><STRONG><a name="[e2]"></a>GUIPROP_GetCharDistX</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, guicharp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUIPROP_GetCharDistX
</UL>
<BR>[Calls]<UL><LI><a href="#[916]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_FindChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hzk16.o(.constdata)
</UL>
<P><STRONG><a name="[e3]"></a>GUIPROP_GetFontInfo</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guicharp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> hzk16.o(.constdata)
</UL>
<P><STRONG><a name="[e4]"></a>GUIPROP_IsInFont</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, guicharp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUIPROP_IsInFont
</UL>
<BR>[Calls]<UL><LI><a href="#[916]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_FindChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hzk16.o(.constdata)
</UL>
<P><STRONG><a name="[85c]"></a>GUI_ALLOC_Realloc</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, guirealloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
</UL>

<P><STRONG><a name="[7f2]"></a>LCD_DrawVLine</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, lcd_drawvline.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[99b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRect
</UL>

<P><STRONG><a name="[ec]"></a>LCD_L0_Color2Index</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lcd_l0_generic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_L0_Color2Index &rArr; LCD_Color2Index_565
</UL>
<BR>[Calls]<UL><LI><a href="#[91a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index_565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_api.o(.constdata)
</UL>
<P><STRONG><a name="[ed]"></a>LCD_L0_Index2Color</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lcd_l0_generic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LCD_L0_Index2Color &rArr; LCD_Index2Color_565
</UL>
<BR>[Calls]<UL><LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color_565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_api.o(.constdata)
</UL>
<P><STRONG><a name="[ee]"></a>LCD_L0_GetIndexMask</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lcd_l0_generic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_L0_GetIndexMask
</UL>
<BR>[Calls]<UL><LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetIndexMask_565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_api.o(.constdata)
</UL>
<P><STRONG><a name="[f4]"></a>LCD_L0_GetRect</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd_l0_generic.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_api.o(.constdata)
</UL>
<P><STRONG><a name="[8db]"></a>LCD_SetClipRectEx</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lcd_setcliprectex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[91d]"></a>LCD_GetpPalConvTableUncached</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, lcdcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetpPalConvTableUncached &rArr; LCD_Color2Index
</UL>
<BR>[Calls]<UL><LI><a href="#[81b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
</UL>

<P><STRONG><a name="[7ee]"></a>LCD_GetpPalConvTable</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lcdcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_GetpPalConvTable &rArr; LCD_GetpPalConvTableUncached &rArr; LCD_Color2Index
</UL>
<BR>[Calls]<UL><LI><a href="#[91d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
</UL>
<BR>[Called By]<UL><LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE4
</UL>

<P><STRONG><a name="[819]"></a>LCD_InitLUT</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcdcolor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[8f9]"></a>GUI_MEMDEV_Draw</STRONG> (Thumb, 264 bytes, Stack size 72 bytes, guidev_banding.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[91e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[921]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[927]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
<LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[91f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Min
</UL>
<BR>[Called By]<UL><LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[92f]"></a>BUTTON_Callback</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = BUTTON_Callback &rArr; WIDGET_HandleActive &rArr; _UpdateChildPostions &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[92e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ButtonReleased
<LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ButtonPressed
<LI><a href="#[92b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Delete
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(.text)
</UL>
<P><STRONG><a name="[81d]"></a>BUTTON_CreateEx</STRONG> (Thumb, 104 bytes, Stack size 72 bytes, button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = BUTTON_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateIndirect
</UL>

<P><STRONG><a name="[81e]"></a>BUTTON_SetText</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = BUTTON_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateIndirect
</UL>

<P><STRONG><a name="[930]"></a>BUTTON_SetFont</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, button.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[931]"></a>BUTTON_SetBkColor</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, button.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[932]"></a>BUTTON_SetTextColor</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, button.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[933]"></a>BUTTON_SetState</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, button.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
</UL>

<P><STRONG><a name="[934]"></a>BUTTON_SetPressed</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, button.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
</UL>

<P><STRONG><a name="[935]"></a>BUTTON_SetFocussable</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, button.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
</UL>

<P><STRONG><a name="[888]"></a>FRAMEWIN__UpdateButtons</STRONG> (Thumb, 254 bytes, Stack size 56 bytes, framewin__updatebuttons.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN__UpdateButtons &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTitleHeight
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont
</UL>

<P><STRONG><a name="[8a1]"></a>GUI_ARRAY_ResizeItem</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, gui_array_resizeitem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_ResizeItem &rArr; GUI_ARRAY_SethItem &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_SethItem
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemText
</UL>

<P><STRONG><a name="[88f]"></a>GUI_DRAW__Draw</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, gui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_DRAW__Draw
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[88d]"></a>GUI_DRAW__GetXSize</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DRAW__GetXSize
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[88e]"></a>GUI_DRAW__GetYSize</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DRAW__GetYSize
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[936]"></a>LISTBOX__GetpString</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LISTBOX__GetpString &rArr; GUI_ARRAY_GetpItem &rArr; GUI_ARRAY_GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
</UL>
<BR>[Called By]<UL><LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectByKey
</UL>

<P><STRONG><a name="[937]"></a>LISTBOX_OwnerDraw</STRONG> (Thumb, 382 bytes, Stack size 64 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = LISTBOX_OwnerDraw &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRect
<LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpString
</UL>
<BR>[Called By]<UL><LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
</UL>

<P><STRONG><a name="[93a]"></a>LISTBOX__GetNumItems</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LISTBOX__GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[956]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectByKey
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[94b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
<LI><a href="#[941]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsPartiallyVis
<LI><a href="#[93f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[93e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
</UL>

<P><STRONG><a name="[944]"></a>LISTBOX__InvalidateItemSize</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LISTBOX__InvalidateItemSize &rArr; GUI_ARRAY_GetpItem &rArr; GUI_ARRAY_GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
</UL>
<BR>[Called By]<UL><LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>

<P><STRONG><a name="[945]"></a>LISTBOX__InvalidateInsideArea</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = LISTBOX__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetTextColor
<LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetOwner
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTBOX_Callback
<LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[946]"></a>LISTBOX__InvalidateItem</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = LISTBOX__InvalidateItem &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[93f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[955]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
</UL>

<P><STRONG><a name="[947]"></a>LISTBOX__InvalidateItemAndBelow</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = LISTBOX__InvalidateItemAndBelow &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[93f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
</UL>
<BR>[Called By]<UL><LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>

<P><STRONG><a name="[948]"></a>LISTBOX__SetScrollbarWidth</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[94a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetDefaultWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarWidth
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[94f]"></a>LISTBOX_UpdateScrollers</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[94b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
</UL>
<BR>[Called By]<UL><LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollH
<LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTBOX_Callback
<LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[842]"></a>LISTBOX_SetSel</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
</UL>
<BR>[Called By]<UL><LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTBOX_Callback
<LI><a href="#[958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectByKey
</UL>

<P><STRONG><a name="[845]"></a>LISTBOX_GetSel</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = LISTBOX_GetSel &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DROPDOWN_Callback
<LI><a href="#[958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[959]"></a>LISTBOX_DecSel</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = LISTBOX_DecSel &rArr; _MoveSel &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[95a]"></a>LISTBOX_IncSel</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = LISTBOX_IncSel &rArr; _MoveSel &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[95c]"></a>LISTBOX_AddKey</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = LISTBOX_AddKey &rArr; _AddKey &rArr; LISTBOX_IncSel &rArr; _MoveSel &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTBOX_Callback
</UL>

<P><STRONG><a name="[95d]"></a>LISTBOX_InvalidateItem</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = LISTBOX_InvalidateItem &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[947]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetItemSpacing
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
</UL>

<P><STRONG><a name="[83c]"></a>LISTBOX_AddString</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
</UL>

<P><STRONG><a name="[95e]"></a>LISTBOX_SetText</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>
<BR>[Called By]<UL><LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
</UL>

<P><STRONG><a name="[95f]"></a>LISTBOX_CreateEx</STRONG> (Thumb, 118 bytes, Stack size 72 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + Unknown Stack Size
<LI>Call Chain = LISTBOX_CreateEx &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateAsChild
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Create
</UL>

<P><STRONG><a name="[960]"></a>LISTBOX_Create</STRONG> (Thumb, 48 bytes, Stack size 48 bytes, listbox_create.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
</UL>

<P><STRONG><a name="[839]"></a>LISTBOX_CreateAsChild</STRONG> (Thumb, 52 bytes, Stack size 56 bytes, listbox_create.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = LISTBOX_CreateAsChild &rArr; LISTBOX_CreateEx &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[840]"></a>LISTBOX_SetFont</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, listbox_font.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetFont &rArr; LISTBOX_InvalidateItem &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>
<BR>[Called By]<UL><LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetFont
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[961]"></a>LISTBOX_GetFont</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, listbox_font.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[83f]"></a>LISTBOX_SetItemSpacing</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, listbox_itemspacing.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetItemSpacing &rArr; LISTBOX_InvalidateItem &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>
<BR>[Called By]<UL><LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[962]"></a>LISTBOX_GetItemSpacing</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, listbox_itemspacing.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[963]"></a>LISTBOX_SetAutoScrollH</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, listbox_setautoscroll.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>

<P><STRONG><a name="[83b]"></a>LISTBOX_SetAutoScrollV</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, listbox_setautoscroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetAutoScrollV &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>
<BR>[Called By]<UL><LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetAutoScroll
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[83d]"></a>LISTBOX_SetBkColor</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, listbox_setbkcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetBkColor &rArr; LISTBOX__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetBkColor
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[841]"></a>LISTBOX_SetOwner</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, listbox_setowner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetOwner &rArr; LISTBOX__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[83a]"></a>LISTBOX_SetScrollbarWidth</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, listbox_setscrollbarwidth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetScrollbarWidth &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetScrollbarWidth
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[83e]"></a>LISTBOX_SetTextColor</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, listbox_settextcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetTextColor &rArr; LISTBOX__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetTextColor
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
</UL>

<P><STRONG><a name="[8a2]"></a>LISTVIEW_GetNumColumns</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, listview_getnumcolumns.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_GetNumColumns &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
</UL>

<P><STRONG><a name="[883]"></a>MENU_Attach</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, menu_attach.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = MENU_Attach &rArr; MENU__ResizeMenu &rArr; _CalcWindowSizeY &rArr; _CalcMenuSizeY &rArr; _GetItemHeight &rArr; _GetEffectSize &rArr; _HasEffect &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindowAt
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__ResizeMenu (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddMenu
</UL>

<P><STRONG><a name="[968]"></a>RADIO__SetValue</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, radio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
</UL>

<P><STRONG><a name="[969]"></a>RADIO_SetValue</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, radio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[96c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
<LI><a href="#[96a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[96c]"></a>RADIO_AddValue</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, radio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = RADIO_AddValue &rArr; RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[96e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Inc
<LI><a href="#[96d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Dec
</UL>

<P><STRONG><a name="[96d]"></a>RADIO_Dec</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, radio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = RADIO_Dec &rArr; RADIO_AddValue &rArr; RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[96c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
</UL>

<P><STRONG><a name="[96e]"></a>RADIO_Inc</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, radio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = RADIO_Inc &rArr; RADIO_AddValue &rArr; RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[96c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
</UL>

<P><STRONG><a name="[8b5]"></a>RADIO_CreateEx</STRONG> (Thumb, 240 bytes, Stack size 72 bytes, radio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = RADIO_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateIndirect
</UL>

<P><STRONG><a name="[970]"></a>RADIO_GetValue</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, radio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[f8]"></a>WIDGET_EFFECT_3D_DrawUp</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, widget_effect_3d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = WIDGET_EFFECT_3D_DrawUp &rArr; _WIDGET_EFFECT_3D_DrawUpRect &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D_DrawUpRect
</UL>
<BR>[Called By]<UL><LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[971]"></a>WIDGET_SetDefaultEffect_3D</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, widget_effect_3d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetDefaultEffect
</UL>

<P><STRONG><a name="[972]"></a>WIDGET_SetDefaultEffect_None</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, widget_effect_none.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetDefaultEffect
</UL>

<P><STRONG><a name="[87b]"></a>WM__IsAncestor</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, wm__isancestor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestorOrSelf
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnChildHasFocus
</UL>

<P><STRONG><a name="[87a]"></a>WM__IsAncestorOrSelf</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, wm__isancestor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WM__IsAncestorOrSelf &rArr; WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
</UL>
<BR>[Called By]<UL><LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnChildHasFocus
</UL>

<P><STRONG><a name="[84f]"></a>WM__IsEnabled</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, wm__isenabled.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__IsEnabled
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__Callback
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[8b7]"></a>WM__UpdateChildPositions</STRONG> (Thumb, 390 bytes, Stack size 80 bytes, wm__updatechildpositions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateChildPostions
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[8ed]"></a>WM_BringToBottom</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, wm_bringtobottom.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = WM_BringToBottom &rArr; WM__GetPrevSibling &rArr; WM__GetFirstSibling &rArr; WM_GetParent &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateArea
<LI><a href="#[973]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[870]"></a>WM_BringToTop</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wm_bringtotop.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = WM_BringToTop &rArr; _BringToTop &rArr; _InvalidateWindowAndDescs &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[976]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>
<BR>[Called By]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[900]"></a>WM__AddCriticalHandle</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm_criticalhandle.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
</UL>

<P><STRONG><a name="[ace]"></a>WM__RemoveCriticalHandle</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, wm_criticalhandle.o(.text), UNUSED)

<P><STRONG><a name="[8bc]"></a>WM_GetBkColor</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, wm_getbkcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = WM_GetBkColor &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetBkColor
<LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateEx
</UL>

<P><STRONG><a name="[8d3]"></a>WM_GetFlags</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm_getflags.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM_GetFlags &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>

<P><STRONG><a name="[897]"></a>WM_GetInsideRectEx</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, wm_getinsiderect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = WM_GetInsideRectEx &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateEx
<LI><a href="#[938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRect
<LI><a href="#[9e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
</UL>

<P><STRONG><a name="[938]"></a>WM_GetInsideRect</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm_getinsiderect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = WM_GetInsideRect &rArr; WM_GetInsideRectEx &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[977]"></a>WM_GetWindowRect</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, wm_getwindowrect.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[8d2]"></a>WM_GetWindowRectEx</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, wm_getwindowrect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM_GetWindowRectEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[9da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[837]"></a>WM__GetWindowSizeX</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_getwindowsize.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddMenu
<LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__AdjustHeight
</UL>

<P><STRONG><a name="[875]"></a>WM__GetWindowSizeY</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_getwindowsize.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>

<P><STRONG><a name="[85a]"></a>WM_GetWindowSizeX</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, wm_getwindowsize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM_GetWindowSizeX &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeX
<LI><a href="#[978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>
<BR>[Called By]<UL><LI><a href="#[8be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetWindowSizeX
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
</UL>

<P><STRONG><a name="[876]"></a>WM_GetWindowSizeY</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, wm_getwindowsize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM_GetWindowSizeY &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[875]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeY
<LI><a href="#[978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>
<BR>[Called By]<UL><LI><a href="#[8be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetWindowSizeX
<LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[87d]"></a>WM_IsWindow</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, wm_iswindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM_IsWindow &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[97a]"></a>WM__MoveWindow</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, wm_move.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateArea
<LI><a href="#[979]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>
<BR>[Called By]<UL><LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveChildTo
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
</UL>

<P><STRONG><a name="[97b]"></a>WM__MoveTo</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, wm_move.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = WM__MoveTo &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[8cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
</UL>

<P><STRONG><a name="[8cc]"></a>WM_MoveWindow</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm_move.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DetachWindow
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[8cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindow
</UL>

<P><STRONG><a name="[8cf]"></a>WM_MoveTo</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm_move.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = WM_MoveTo &rArr; WM__MoveTo &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
</UL>
<BR>[Called By]<UL><LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindowAt
</UL>

<P><STRONG><a name="[87f]"></a>WM_MoveChildTo</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, wm_movechildto.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = WM_MoveChildTo &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdatePositions
</UL>

<P><STRONG><a name="[82d]"></a>WM_NotifyParent</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, wm_notifyparent.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = WM_NotifyParent &rArr; WM_SendToParent &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
</UL>
<BR>[Called By]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetValue
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DROPDOWN_Callback
<LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
<LI><a href="#[96a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ButtonReleased
<LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ButtonPressed
<LI><a href="#[9e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ScrollbarReleased
<LI><a href="#[9df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ScrollbarPressed
<LI><a href="#[9be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
</UL>

<P><STRONG><a name="[7f7]"></a>WM_OnKey</STRONG> (Thumb, 58 bytes, Stack size 40 bytes, wm_onkey.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = WM_OnKey &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SendKeyMsg
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
</UL>

<P><STRONG><a name="[8d7]"></a>WM_ResizeWindow</STRONG> (Thumb, 242 bytes, Stack size 48 bytes, wm_resizewindow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateArea
</UL>
<BR>[Called By]<UL><LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__UpdateButtons
<LI><a href="#[9ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
</UL>

<P><STRONG><a name="[824]"></a>WM_SendMessageNoPara</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, wm_sendmessagenopara.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM_SendMessageNoPara &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
</UL>
<BR>[Called By]<UL><LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>

<P><STRONG><a name="[8fe]"></a>WM_SendToParent</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, wm_sendtoparent.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = WM_SendToParent &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>

<P><STRONG><a name="[884]"></a>WM_SetAnchor</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, wm_setanchor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WM_SetAnchor &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddMenu
</UL>

<P><STRONG><a name="[871]"></a>WM_SetCaptureMove</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, wm_setcapturemove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = WM_SetCaptureMove &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasCaptured
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[823]"></a>WM_SetFocusOnNextChild</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm_setfocusonnextchild.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[97e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFocusOnNextChild
</UL>
<BR>[Called By]<UL><LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__cbClient
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[8c2]"></a>WM_SetScrollState</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, wm_setscrollstate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = WM_SetScrollState &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
</UL>

<P><STRONG><a name="[7ea]"></a>WM_SetUserClipRect</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, wm_setusercliprect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM_SetUserClipRect &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[980]"></a>WM_InvalidateWindowDescs</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, wm_show.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM_InvalidateWindowDescs &rArr;  WM_InvalidateWindowDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[981]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowDescs
</UL>

<P><STRONG><a name="[822]"></a>WM_ShowWindow</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, wm_show.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = WM_ShowWindow &rArr; WM_InvalidateWindowDescs &rArr;  WM_InvalidateWindowDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
</UL>

<P><STRONG><a name="[91a]"></a>LCD_Color2Index_565</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lcdp565.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Color2Index_565
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_Color2Index
</UL>

<P><STRONG><a name="[91c]"></a>LCD_GetIndexMask_565</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcdp565.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_GetIndexMask
</UL>

<P><STRONG><a name="[983]"></a>GUI_sin</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[982]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_cos
<LI><a href="#[986]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcOrto
</UL>

<P><STRONG><a name="[982]"></a>GUI_cos</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[983]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[986]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcOrto
</UL>

<P><STRONG><a name="[987]"></a>GL_DrawPoint</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[99c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPoint
<LI><a href="#[98a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1
<LI><a href="#[989]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLineEnd
</UL>

<P><STRONG><a name="[98a]"></a>GL_DrawLine1</STRONG> (Thumb, 350 bytes, Stack size 48 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[987]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
<LI><a href="#[98d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetLineColor
<LI><a href="#[98b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Abs
<LI><a href="#[98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SwapInt
</UL>
<BR>[Called By]<UL><LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
<LI><a href="#[9d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawEllipse
</UL>

<P><STRONG><a name="[98e]"></a>GL_DrawLine</STRONG> (Thumb, 310 bytes, Stack size 72 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
<LI><a href="#[98a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1
<LI><a href="#[989]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLineEnd
<LI><a href="#[986]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcOrto
</UL>
<BR>[Called By]<UL><LI><a href="#[991]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineTo
<LI><a href="#[990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineToNM
<LI><a href="#[995]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineRelNM
</UL>

<P><STRONG><a name="[990]"></a>GUI_DrawLine</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
</UL>

<P><STRONG><a name="[991]"></a>GL_DrawLineTo</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[992]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPolygon
</UL>

<P><STRONG><a name="[993]"></a>GL_MoveTo</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[99a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveTo
<LI><a href="#[999]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineTo
<LI><a href="#[992]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPolygon
</UL>

<P><STRONG><a name="[992]"></a>GL_DrawPolygon</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_MoveTo
<LI><a href="#[991]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineTo
</UL>
<BR>[Called By]<UL><LI><a href="#[994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPolygon
</UL>

<P><STRONG><a name="[994]"></a>GUI_DrawPolygon</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[992]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPolygon
</UL>

<P><STRONG><a name="[996]"></a>GUI_MoveRel</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[997]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineRel
</UL>

<P><STRONG><a name="[997]"></a>GUI_DrawLineRel</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[996]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRel
<LI><a href="#[995]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineRelNM
</UL>

<P><STRONG><a name="[999]"></a>GUI_DrawLineTo</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_MoveTo
<LI><a href="#[998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineToNM
</UL>

<P><STRONG><a name="[99a]"></a>GUI_MoveTo</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_MoveTo
</UL>

<P><STRONG><a name="[92a]"></a>GUI_DrawRect</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, gui2dlib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[99b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D_DrawUpRect
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[99c]"></a>GUI_DrawPoint</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[987]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
</UL>

<P><STRONG><a name="[909]"></a>GUI__GetFontSizeY</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui__getfontsizey.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
</UL>

<P><STRONG><a name="[905]"></a>GUI__memset</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, gui__memset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
</UL>

<P><STRONG><a name="[99d]"></a>GUI__strcmp</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, gui__strcmp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
</UL>

<P><STRONG><a name="[902]"></a>GUI__strcmp_hp</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui__strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__strcmp_hp
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[99d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[903]"></a>GUI_Long2Len</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui_adddecshift.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
</UL>

<P><STRONG><a name="[acf]"></a>GUI_AddSign</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gui_adddecshift.o(.text), UNUSED)

<P><STRONG><a name="[904]"></a>GUI_AddDecShift</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, gui_adddecshift.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI_AddDecShift &rArr; _Check_NegLong
</UL>
<BR>[Calls]<UL><LI><a href="#[99e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Check_NegLong
</UL>
<BR>[Called By]<UL><LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
</UL>

<P><STRONG><a name="[99f]"></a>GUI_GetBkColorIndex</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_getcolor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
</UL>

<P><STRONG><a name="[918]"></a>GUI_GetBkColor</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_getcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_GetBkColor &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[9a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[9a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>

<P><STRONG><a name="[9a2]"></a>GUI_GetColorIndex</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_getcolor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[9a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
</UL>

<P><STRONG><a name="[917]"></a>GUI_GetColor</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_getcolor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_GetColor &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[9a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[9a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>

<P><STRONG><a name="[965]"></a>GUI_GetFontInfo</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gui_getfontinfo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_GetFontInfo &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[9a4]"></a>GUI_GetPenSize</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_pen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[9a5]"></a>GUI_GetPenShape</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_pen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[90e]"></a>GUI_SetPenSize</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gui_pen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_SetPenSize &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[9a6]"></a>GUI_SetPenShape</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gui_pen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[910]"></a>GUI_SetLineStyle</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gui_setlinestyle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_SetLineStyle &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[90f]"></a>GUI_SetTextAlign</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_settextalign.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_SetTextAlign &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[102]"></a>GUIMONO_DispChar</STRONG> (Thumb, 388 bytes, Stack size 80 bytes, guicharm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUIMONO_DispChar &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[103]"></a>GUIMONO_GetCharDistX</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, guicharm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[104]"></a>GUIMONO_GetFontInfo</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guicharm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[105]"></a>GUIMONO_IsInFont</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, guicharm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUIMONO_IsInFont
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[91e]"></a>LCD_GetXSize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcdinfo0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[920]"></a>LCD_GetYSize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcdinfo0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[ad0]"></a>LCD_GetVXSize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcdinfo0.o(.text), UNUSED)

<P><STRONG><a name="[ad1]"></a>LCD_GetVYSize</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcdinfo0.o(.text), UNUSED)

<P><STRONG><a name="[ad2]"></a>LCD_GetBitsPerPixel</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcdinfo0.o(.text), UNUSED)

<P><STRONG><a name="[9ab]"></a>LCD_GetNumColors</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcdinfo0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[ad3]"></a>LCD_GetYMag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcdinfo0.o(.text), UNUSED)

<P><STRONG><a name="[ad4]"></a>LCD_GetXMag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcdinfo0.o(.text), UNUSED)

<P><STRONG><a name="[ad5]"></a>LCD_GetFixedPalette</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcdinfo0.o(.text), UNUSED)

<P><STRONG><a name="[91b]"></a>LCD_Index2Color_565</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, lcdp565_index2color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LCD_Index2Color_565
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_Index2Color
</UL>

<P><STRONG><a name="[10e]"></a>GUI_MEMDEV__GetRect</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, guidev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV__GetRect
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[106]"></a>GUI_MEMDEV__Color2Index</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, guidev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV__Color2Index
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[107]"></a>GUI_MEMDEV__Index2Color</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, guidev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV__Index2Color
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[108]"></a>GUI_MEMDEV__GetIndexMask</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, guidev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_MEMDEV__GetIndexMask
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[928]"></a>GUI_MEMDEV_Delete</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, guidev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Delete &rArr; GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[9a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[9a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[9a9]"></a>GUI_MEMDEV__CreateFixed</STRONG> (Thumb, 250 bytes, Stack size 64 bytes, guidev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[9aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[9ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Called By]<UL><LI><a href="#[921]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
</UL>

<P><STRONG><a name="[921]"></a>GUI_MEMDEV_CreateEx</STRONG> (Thumb, 106 bytes, Stack size 72 bytes, guidev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>
<BR>[Called By]<UL><LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[9ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Create
</UL>

<P><STRONG><a name="[9ac]"></a>GUI_MEMDEV_Create</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, guidev.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[921]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
</UL>

<P><STRONG><a name="[923]"></a>GUI_MEMDEV_Select</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, guidev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Select &rArr; WM_Deactivate &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[8ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[9a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[9ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[9ad]"></a>GUI_MEMDEV__WriteToActiveAt</STRONG> (Thumb, 278 bytes, Stack size 96 bytes, guidev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GUI_MEMDEV__WriteToActiveAt &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[9ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[9ae]"></a>GUI_MEMDEV_CopyToLCDAt</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, guidev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveAt &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[901]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[9a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[9ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
</UL>
<BR>[Called By]<UL><LI><a href="#[927]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
</UL>

<P><STRONG><a name="[927]"></a>GUI_MEMDEV_CopyToLCD</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guidev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveAt &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[9ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>
<BR>[Called By]<UL><LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[926]"></a>GUI_MEMDEV_Clear</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, guidev_clear.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Clear &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[922]"></a>GUI_MEMDEV_GetYSize</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, guidev_getysize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_GetYSize &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[924]"></a>GUI_MEMDEV_ReduceYSize</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, guidev_reduceysize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_ReduceYSize &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[925]"></a>GUI_MEMDEV_SetOrg</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, guidev_setorg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_SetOrg &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[949]"></a>SCROLLBAR_GetDefaultWidth</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, scrollbar_defaults.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
</UL>

<P><STRONG><a name="[ad6]"></a>SCROLLBAR_GetDefaultBkColor</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, scrollbar_defaults.o(.text), UNUSED)

<P><STRONG><a name="[ad7]"></a>SCROLLBAR_GetDefaultColor</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, scrollbar_defaults.o(.text), UNUSED)

<P><STRONG><a name="[ad8]"></a>SCROLLBAR_SetDefaultWidth</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, scrollbar_defaults.o(.text), UNUSED)

<P><STRONG><a name="[ad9]"></a>SCROLLBAR_SetDefaultBkColor</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, scrollbar_defaults.o(.text), UNUSED)

<P><STRONG><a name="[ada]"></a>SCROLLBAR_SetDefaultColor</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, scrollbar_defaults.o(.text), UNUSED)

<P><STRONG><a name="[94a]"></a>SCROLLBAR_SetWidth</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, scrollbar_setwidth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>
<BR>[Called By]<UL><LI><a href="#[948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
</UL>

<P><STRONG><a name="[97f]"></a>WM__GetFocussedChild</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm__getfocussedchild.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WM__GetFocussedChild &rArr; WM__IsChild
</UL>
<BR>[Calls]<UL><LI><a href="#[9ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsChild
</UL>
<BR>[Called By]<UL><LI><a href="#[97e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[973]"></a>WM__GetPrevSibling</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, wm__getprevsibling.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = WM__GetPrevSibling &rArr; WM__GetFirstSibling &rArr; WM_GetParent &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[9bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
</UL>

<P><STRONG><a name="[97c]"></a>WM__SendMessageNoPara</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, wm__sendmessagenopara.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__SendMessageNoPara
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
</UL>

<P><STRONG><a name="[975]"></a>WM_ForEachDesc</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm_foreachdesc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM_ForEachDesc &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateWindowAndDescs
<LI><a href="#[9bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>

<P><STRONG><a name="[981]"></a>WM_GetFirstChild</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, wm_getfirstchild.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = WM_GetFirstChild &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowDescs
</UL>

<P><STRONG><a name="[96b]"></a>WM_IsFocussable</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, wm_isfocussable.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = WM_IsFocussable &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[97e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFocusOnNextChild
<LI><a href="#[96a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[9c0]"></a>WM__SetScrollbarV</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, wm_setscrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[9bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
</UL>

<P><STRONG><a name="[9c1]"></a>WM__SetScrollbarH</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, wm_setscrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[9bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
</UL>

<P><STRONG><a name="[94e]"></a>WM_SetScrollbarH</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm_setscrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[9c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarH
</UL>
<BR>[Called By]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[94d]"></a>WM_SetScrollbarV</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm_setscrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarV
</UL>
<BR>[Called By]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[9c2]"></a>WM_SetHasTrans</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, wm_settrans.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[9c3]"></a>WM_ClrHasTrans</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, wm_settrans.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[966]"></a>WM_GetHasTrans</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm_settrans.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM_GetHasTrans &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[9b7]"></a>GUI__memset16</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, gui__memset16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__memset16
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>

<P><STRONG><a name="[98f]"></a>GL_FillPolygon</STRONG> (Thumb, 320 bytes, Stack size 64 bytes, gui_fillpolygon.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevPointDiffy
<LI><a href="#[9c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddPoint
<LI><a href="#[9ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Flush
<LI><a href="#[9c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
<LI><a href="#[9c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Add
<LI><a href="#[9c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckYInterSect
<LI><a href="#[9c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
<LI><a href="#[9cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillPolygon
</UL>

<P><STRONG><a name="[9cb]"></a>GUI_FillPolygon</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, gui_fillpolygon.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
</UL>

<P><STRONG><a name="[9a7]"></a>GUI_SelectLCD</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_selectlcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = GUI_SelectLCD &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[901]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[9cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[9cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[9ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[9ce]"></a>GL_DrawCircle</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, guicirc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw8Point
</UL>
<BR>[Called By]<UL><LI><a href="#[9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
</UL>

<P><STRONG><a name="[9d0]"></a>GUI_DrawCircle</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, guicirc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[9ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawCircle
</UL>

<P><STRONG><a name="[988]"></a>GL_FillCircle</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, guicirc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[987]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
<LI><a href="#[9d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
</UL>

<P><STRONG><a name="[9d1]"></a>GUI_FillCircle</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, guicirc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircle
</UL>

<P><STRONG><a name="[9d3]"></a>GL_FillEllipse</STRONG> (Thumb, 166 bytes, Stack size 48 bytes, guicirc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillEllipse
</UL>

<P><STRONG><a name="[9d2]"></a>GUI_FillEllipse</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, guicirc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[9d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillEllipse
</UL>

<P><STRONG><a name="[9d4]"></a>GL_DrawEllipse</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, guicirc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1
</UL>
<BR>[Called By]<UL><LI><a href="#[9d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawEllipse
</UL>

<P><STRONG><a name="[9d5]"></a>GUI_DrawEllipse</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, guicirc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[9d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawEllipse
</UL>

<P><STRONG><a name="[9a0]"></a>LCD_GetBkColorIndex</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getcolorindex.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[99f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColorIndex
</UL>

<P><STRONG><a name="[9a3]"></a>LCD_GetColorIndex</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getcolorindex.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[9a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColorIndex
</UL>

<P><STRONG><a name="[9d6]"></a>GUI_USAGE_Select</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, guidev_usage.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>

<P><STRONG><a name="[9a8]"></a>GUI_USAGE_DecUseCnt</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, guidev_usage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>

<P><STRONG><a name="[9b2]"></a>GUI_USAGE_AddRect</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, guidev_usage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_USAGE_AddRect
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[9aa]"></a>GUI_USAGE_BM_Create</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, guidev_usagebm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[9a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[9e1]"></a>SCROLLBAR_SetValue</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetState
<LI><a href="#[9e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[9e3]"></a>SCROLLBAR_AddValue</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[9e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[9e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Inc
<LI><a href="#[9e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Dec
</UL>

<P><STRONG><a name="[9e4]"></a>SCROLLBAR_Dec</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_Dec &rArr; SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[9e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[9e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
</UL>

<P><STRONG><a name="[9e5]"></a>SCROLLBAR_Inc</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_Inc &rArr; SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[9e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[9e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
</UL>

<P><STRONG><a name="[9b9]"></a>SCROLLBAR__InvalidatePartner</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[9e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
</UL>
<BR>[Called By]<UL><LI><a href="#[94a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
<LI><a href="#[9e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[9e9]"></a>SCROLLBAR_CreateEx</STRONG> (Thumb, 260 bytes, Stack size 72 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>
<BR>[Called By]<UL><LI><a href="#[9ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Create
<LI><a href="#[9be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
</UL>

<P><STRONG><a name="[9ea]"></a>SCROLLBAR_SetNumItems</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, scrollbar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetState
</UL>

<P><STRONG><a name="[9eb]"></a>SCROLLBAR_SetPageSize</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, scrollbar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetState
</UL>

<P><STRONG><a name="[9ec]"></a>SCROLLBAR_SetState</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, scrollbar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[9ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[9e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
</UL>

<P><STRONG><a name="[9ed]"></a>SCROLLBAR_Create</STRONG> (Thumb, 46 bytes, Stack size 56 bytes, scrollbar_create.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
</UL>

<P><STRONG><a name="[9be]"></a>SCROLLBAR_CreateAttached</STRONG> (Thumb, 66 bytes, Stack size 40 bytes, scrollbar_create.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[9e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[9bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[9b8]"></a>WIDGET_SetWidth</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, widget_setwidth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[9ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[9ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
</UL>
<BR>[Called By]<UL><LI><a href="#[94a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
</UL>

<P><STRONG><a name="[9bc]"></a>WM__ForEachDesc</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, wm__foreachdesc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + In Cycle
<LI>Call Chain = WM__ForEachDesc &rArr;  WM_ForEachDesc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
</UL>

<P><STRONG><a name="[9bb]"></a>WM__GetFirstSibling</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, wm__getfirstsibling.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM__GetFirstSibling &rArr; WM_GetParent &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[973]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
</UL>

<P><STRONG><a name="[9ba]"></a>WM__IsChild</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, wm__ischild.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WM__IsChild
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[97f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocussedChild
</UL>

<P><STRONG><a name="[9bf]"></a>WM_HideWindow</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, wm_hide.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = WM_HideWindow &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateAreaBelow
</UL>
<BR>[Called By]<UL><LI><a href="#[9bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[9dc]"></a>GUI__DivideRound</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui__divideround.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__DivideRound
</UL>
<BR>[Called By]<UL><LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[9da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[9cc]"></a>LCD_SelectLCD</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lcd_selectlcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_SelectLCD &rArr; LCD_SetClipRectMax
</UL>
<BR>[Calls]<UL><LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[9a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[9cd]"></a>LCD_UpdateColorIndices</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lcd_updatecolorindices.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_UpdateColorIndices &rArr; LCD_Color2Index
</UL>
<BR>[Calls]<UL><LI><a href="#[81b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
<LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[9a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[9e8]"></a>WM_GetScrollPartner</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wm_getscrollpartner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
</UL>
<BR>[Called By]<UL><LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>

<P><STRONG><a name="[9ee]"></a>WM_SetXSize</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, wm_setxsize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = WM_SetXSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
</UL>

<P><STRONG><a name="[9ef]"></a>WM_SetYSize</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, wm_setysize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[9b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[163]"></a>GPIO_GetPointer</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, lpc177x_8x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_SetMask
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadValue
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearValue
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetValue
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
</UL>

<P><STRONG><a name="[174]"></a>FIO_HalfWordGetPointer</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_HalfWordReadValue
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_HalfWordClearValue
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_HalfWordSetValue
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_HalfWordSetMask
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_HalfWordSetDir
</UL>

<P><STRONG><a name="[17a]"></a>FIO_ByteGetPointer</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, lpc177x_8x_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_ByteReadValue
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_ByteClearValue
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_ByteSetValue
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_ByteSetMask
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIO_ByteSetDir
</UL>

<P><STRONG><a name="[180]"></a>PIN_GetPointer</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lpc177x_8x_pinsel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PIN_GetPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_SetFilter
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_DacEnable
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_SetAnalogPinMode
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_SetOpenDrainMode
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_SetI2CMode
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_SetI2CFilter
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_SetSlewMode
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_SetInvertInput
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_SetHysMode
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_SetPinMode
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PINSEL_ConfigPin
</UL>

<P><STRONG><a name="[18d]"></a>setSSPclock</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, lpc177x_8x_ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = setSSPclock
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_GetCLK
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP_Init
</UL>

<P><STRONG><a name="[194]"></a>getPClock</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lpc177x_8x_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = getPClock
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_GetCLK
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;converUSecToVal
</UL>

<P><STRONG><a name="[195]"></a>converUSecToVal</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, lpc177x_8x_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = converUSecToVal &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getPClock
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Init
</UL>

<P><STRONG><a name="[197]"></a>converPtrToTimeNum</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, lpc177x_8x_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Init
</UL>

<P><STRONG><a name="[1b0]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, lpc177x_8x_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _DrawBitLine1BPP &rArr; LCD_L0_SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_GetPixelIndex
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_DrawBitmap
</UL>

<P><STRONG><a name="[1b1]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 204 bytes, Stack size 60 bytes, lpc177x_8x_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawBitLine2BPP &rArr; LCD_L0_SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_DrawBitmap
</UL>

<P><STRONG><a name="[1b2]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 202 bytes, Stack size 60 bytes, lpc177x_8x_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawBitLine4BPP &rArr; LCD_L0_SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_DrawBitmap
</UL>

<P><STRONG><a name="[1b3]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 160 bytes, Stack size 28 bytes, lpc177x_8x_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine8BPP &rArr; LCD_L0_SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_DrawBitmap
</UL>

<P><STRONG><a name="[1b4]"></a>DrawBitLine16BPP</STRONG> (Thumb, 150 bytes, Stack size 28 bytes, lpc177x_8x_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DrawBitLine16BPP &rArr; LCD_L0_SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_DrawBitmap
</UL>

<P><STRONG><a name="[1ba]"></a>uart_set_divisors</STRONG> (Thumb, 472 bytes, Stack size 80 bytes, lpc177x_8x_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = uart_set_divisors &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_GetCLK
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[1c3]"></a>uart_get_pointer</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lpc177x_8x_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RS485Send
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RS485ReceiverCmd
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RS485Config
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ABClearIntPending
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ABCmd
</UL>

<P><STRONG><a name="[1cf]"></a>I2C_GetPointer</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lpc177x_8x_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MonitorHandler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MonitorGetDatabuffer
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MonitorModeCmd
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MonitorModeConfig
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SetOwnSlaveAddr
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SlaveTransferData
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterTransferData
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SlaveHandler
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterHandler
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SlaveHanleStates
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterHanleStates
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DeInit
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>

<P><STRONG><a name="[1db]"></a>I2C_Start</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lpc177x_8x_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterTransferData
</UL>

<P><STRONG><a name="[1d4]"></a>I2C_Stop</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lpc177x_8x_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterHanleStates
</UL>

<P><STRONG><a name="[1d3]"></a>I2C_SendByte</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, lpc177x_8x_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterHanleStates
</UL>

<P><STRONG><a name="[1d5]"></a>I2C_GetByte</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lpc177x_8x_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterHanleStates
</UL>

<P><STRONG><a name="[1cd]"></a>I2C_SetClock</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lpc177x_8x_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_SetClock
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_GetCLK
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>

<P><STRONG><a name="[1ff]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, com_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPC_Uart_Init
</UL>

<P><STRONG><a name="[200]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, com_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPC_Uart_Init
</UL>

<P><STRONG><a name="[217]"></a>OS_SchedNew</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>

<P><STRONG><a name="[21e]"></a>OS_InitTaskIdle</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = OS_InitTaskIdle &rArr; OSTaskCreateExt &rArr; OS_TCBInit &rArr; OSTaskCreateHook
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameSet
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[221]"></a>OS_InitEventList</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OS_InitEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[223]"></a>OS_InitTCBList</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, os_core.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OS_InitTCBList
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[227]"></a>OS_InitRdyList</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[226]"></a>OS_InitMisc</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, os_core.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[23e]"></a>OS_FlagTaskRdy</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagUnlink
</UL>
<BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPost
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagDel
</UL>

<P><STRONG><a name="[244]"></a>OS_FlagBlock</STRONG> (Thumb, 152 bytes, Stack size 20 bytes, os_flag.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSFlagPend
</UL>

<P><STRONG><a name="[279]"></a>OSTmr_Alloc</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, os_tmr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrCreate
</UL>

<P><STRONG><a name="[27c]"></a>OSTmr_Free</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, os_tmr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrDel
</UL>

<P><STRONG><a name="[27b]"></a>OSTmr_Unlink</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, os_tmr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OSTmr_Unlink
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrStop
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrStart
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrDel
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Task
</UL>

<P><STRONG><a name="[281]"></a>OSTmr_Link</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, os_tmr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OSTmr_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrStart
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Task
</UL>

<P><STRONG><a name="[44]"></a>OSTmr_Task</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, os_tmr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = OSTmr_Task &rArr; OSSemPend &rArr; OS_EventTaskWait
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Link
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Unlink
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_tmr.o(.text)
</UL>
<P><STRONG><a name="[284]"></a>OSTmr_InitTask</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, os_tmr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = OSTmr_InitTask &rArr; OSTaskCreateExt &rArr; OS_TCBInit &rArr; OSTaskCreateHook
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameSet
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Init
</UL>

<P><STRONG><a name="[2a2]"></a>list_add</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, yaffs_allocator.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_free_raw_obj
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_free_objs
</UL>

<P><STRONG><a name="[296]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_allocator.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[295]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, yaffs_allocator.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = list_del_init
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_alloc_raw_obj
</UL>

<P><STRONG><a name="[2a4]"></a>list_empty</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, yaffs_allocator.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_alloc_raw_obj
</UL>

<P><STRONG><a name="[297]"></a>yaffs_deinit_raw_tnodes</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, yaffs_allocator.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = yaffs_deinit_raw_tnodes &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_free
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinit_raw_tnodes_and_objs
</UL>

<P><STRONG><a name="[29a]"></a>yaffs_init_raw_tnodes</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, yaffs_allocator.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = yaffs_init_raw_tnodes &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_init_raw_tnodes_and_objs
</UL>

<P><STRONG><a name="[29b]"></a>yaffs_create_tnodes</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, yaffs_allocator.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = yaffs_create_tnodes &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_malloc
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_alloc_raw_tnode
</UL>

<P><STRONG><a name="[29f]"></a>yaffs_init_raw_objs</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, yaffs_allocator.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = yaffs_init_raw_objs &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_init_raw_tnodes_and_objs
</UL>

<P><STRONG><a name="[2a0]"></a>yaffs_deinit_raw_objs</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, yaffs_allocator.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = yaffs_deinit_raw_objs &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_free
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
</UL>
<BR>[Called By]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinit_raw_tnodes_and_objs
</UL>

<P><STRONG><a name="[2a1]"></a>yaffs_create_free_objs</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, yaffs_allocator.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = yaffs_create_free_objs &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_malloc
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_free
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_add
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_alloc_raw_obj
</UL>

<P><STRONG><a name="[2a9]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_attribs.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[2a8]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, yaffs_attribs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>

<P><STRONG><a name="[2ad]"></a>yaffs_get_file_size</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, yaffs_attribs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_equivalent_obj
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_attribs
</UL>

<P><STRONG><a name="[2b5]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_bitmap.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[2b4]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, yaffs_bitmap.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>

<P><STRONG><a name="[2b6]"></a>yaffs_block_bits</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, yaffs_bitmap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = yaffs_block_bits &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_count_chunk_bits
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_still_some_chunks
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_chunk_bit
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_set_chunk_bit
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_clear_chunk_bit
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_clear_chunk_bits
</UL>

<P><STRONG><a name="[2c1]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_checkptrw.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[2c0]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, yaffs_checkptrw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>

<P><STRONG><a name="[2c9]"></a>apply_chunk_offset</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_checkptrw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_rd
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_flush_buffer
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_find_block
</UL>

<P><STRONG><a name="[2c6]"></a>apply_block_offset</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_checkptrw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_find_block
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_checkpt_erase
</UL>

<P><STRONG><a name="[2c2]"></a>yaffs2_checkpt_init_chunk_hdr</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, yaffs_checkptrw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = yaffs2_checkpt_init_chunk_hdr
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_open
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_flush_buffer
</UL>

<P><STRONG><a name="[2c3]"></a>yaffs2_checkpt_check_chunk_hdr</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, yaffs_checkptrw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = yaffs2_checkpt_check_chunk_hdr
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_rd
</UL>

<P><STRONG><a name="[2c4]"></a>yaffs2_checkpt_space_ok</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, yaffs_checkptrw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = yaffs2_checkpt_space_ok &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_open
</UL>

<P><STRONG><a name="[2c5]"></a>yaffs_checkpt_erase</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, yaffs_checkptrw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = yaffs_checkpt_erase &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_block_offset
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_invalidate_stream
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_open
</UL>

<P><STRONG><a name="[2c7]"></a>yaffs2_checkpt_find_erased_block</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, yaffs_checkptrw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = yaffs2_checkpt_find_erased_block &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_flush_buffer
</UL>

<P><STRONG><a name="[2c8]"></a>yaffs2_checkpt_find_block</STRONG> (Thumb, 270 bytes, Stack size 112 bytes, yaffs_checkptrw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = yaffs2_checkpt_find_block &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_block_offset
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_chunk_offset
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_rd
</UL>

<P><STRONG><a name="[2cb]"></a>yaffs2_checkpt_flush_buffer</STRONG> (Thumb, 592 bytes, Stack size 104 bytes, yaffs_checkptrw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = yaffs2_checkpt_flush_buffer &rArr; yaffs2_checkpt_find_erased_block &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_find_erased_block
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_init_chunk_hdr
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_chunk_offset
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_checkpt_close
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_wr
</UL>

<P><STRONG><a name="[2d1]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_ecc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[2d0]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, yaffs_ecc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>

<P><STRONG><a name="[310]"></a>list_add</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, yaffs_guts.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_obj
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_parent
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_hash_obj
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_alloc_empty_obj
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_link_fixup
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_add_obj_to_dir
</UL>

<P><STRONG><a name="[2d6]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_guts.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[2d5]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = list_del_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlink_worker
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_link
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unhash_obj
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_remove_obj_from_dir
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_retype_obj
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_obj
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_dirty_dirs
</UL>

<P><STRONG><a name="[31a]"></a>list_empty</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, yaffs_guts.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlink_worker
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_parent
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_free_obj
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unhash_obj
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_retype_obj
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_obj
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_is_non_empty_dir
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_dirty_dirs
</UL>

<P><STRONG><a name="[38b]"></a>calc_shifts_ceiling</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, yaffs_guts.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_initialise
</UL>

<P><STRONG><a name="[38a]"></a>calc_shifts</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, yaffs_guts.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_initialise
</UL>

<P><STRONG><a name="[2d9]"></a>yaffs_init_tmp_buffers</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = yaffs_init_tmp_buffers &rArr; yaffsfs_malloc &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_malloc
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_initialise
</UL>

<P><STRONG><a name="[2f6]"></a>yaffs_handle_chunk_wr_ok</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, yaffs_guts.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_write_new_chunk
</UL>

<P><STRONG><a name="[2ec]"></a>yaffs_handle_chunk_update</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, yaffs_guts.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chunk_del
</UL>

<P><STRONG><a name="[2de]"></a>yaffs_retire_block</STRONG> (Thumb, 226 bytes, Stack size 96 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = yaffs_retire_block &rArr; yaffs2_checkpt_invalidate &rArr; yaffs2_checkpt_invalidate_stream &rArr; yaffs_checkpt_erase &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mark_bad
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_erase_block
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_clear_oldest_dirty_seq
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_invalidate
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_release_temp_buffer
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_temp_buffer
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_block_became_dirty
</UL>

<P><STRONG><a name="[2e4]"></a>yaffs_check_chunk_erased</STRONG> (Thumb, 100 bytes, Stack size 96 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = yaffs_check_chunk_erased &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_chunk_tags_nand
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_ff
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_release_temp_buffer
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_temp_buffer
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_write_new_chunk
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_block_became_dirty
</UL>

<P><STRONG><a name="[2ed]"></a>yaffs_handle_chunk_wr_error</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = yaffs_handle_chunk_wr_error &rArr; yaffs_chunk_del &rArr; yaffs_wr_chunk_tags_nand &rArr; yaffs_summary_add &rArr; yaffs_summary_write &rArr;  yaffs_wr_chunk_tags_nand (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chunk_del
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_skip_rest_of_block
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_handle_chunk_error
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_write_new_chunk
</UL>

<P><STRONG><a name="[31b]"></a>yaffs_hash_fn</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, yaffs_guts.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_hash_obj
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unhash_obj
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_by_number
</UL>

<P><STRONG><a name="[2ef]"></a>yaffs_verify_chunk_written</STRONG> (Thumb, 98 bytes, Stack size 104 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = yaffs_verify_chunk_written &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_chunk_tags_nand
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_release_temp_buffer
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_temp_buffer
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_write_new_chunk
</UL>

<P><STRONG><a name="[2f3]"></a>yaffs_find_alloc_block</STRONG> (Thumb, 238 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = yaffs_find_alloc_block &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_alloc_chunk
</UL>

<P><STRONG><a name="[2f4]"></a>yaffs_alloc_chunk</STRONG> (Thumb, 526 bytes, Stack size 24 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = yaffs_alloc_chunk &rArr; yaffs_set_chunk_bit &rArr; yaffs_verify_chunk_bit_id &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_alloc_block
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_set_chunk_bit
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_alloc_available
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_write_new_chunk
</UL>

<P><STRONG><a name="[325]"></a>yaffs_get_erased_chunks</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, yaffs_guts.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_block
</UL>

<P><STRONG><a name="[2f5]"></a>yaffs_write_new_chunk</STRONG> (Thumb, 296 bytes, Stack size 40 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = yaffs_write_new_chunk &rArr; yaffs_handle_chunk_wr_error &rArr; yaffs_chunk_del &rArr; yaffs_wr_chunk_tags_nand &rArr; yaffs_summary_add &rArr; yaffs_summary_write &rArr;  yaffs_wr_chunk_tags_nand (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_alloc_chunk
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_chunk_written
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_handle_chunk_wr_error
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_chunk_erased
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_handle_chunk_wr_ok
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_wr_chunk_tags_nand
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_invalidate
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chunk_del
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_skip_rest_of_block
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_wr_data_obj
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_process_chunk
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
</UL>

<P><STRONG><a name="[2fc]"></a>yaffs_calc_name_sum</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, yaffs_guts.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_by_name
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_set_obj_name
</UL>

<P><STRONG><a name="[2f7]"></a>yaffs_fix_null_name</STRONG> (Thumb, 96 bytes, Stack size 64 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = yaffs_fix_null_name &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_obj_name
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_set_obj_name
</UL>

<P><STRONG><a name="[2ff]"></a>yaffs_free_tnode</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = yaffs_free_tnode &rArr; yaffs_free_raw_tnode &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_free_raw_tnode
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_file
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_new_obj
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_prune_tree
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_prune_worker
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_soft_del_file
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_block
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_soft_del_worker
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_retype_obj
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_add_find_tnode_0
</UL>

<P><STRONG><a name="[300]"></a>yaffs_deinit_tnodes_and_objs</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = yaffs_deinit_tnodes_and_objs &rArr; yaffs_deinit_raw_tnodes_and_objs &rArr; yaffs_deinit_raw_objs &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinit_raw_tnodes_and_objs
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_initialise
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinitialise
</UL>

<P><STRONG><a name="[308]"></a>yaffs_load_tnode_0</STRONG> (Thumb, 142 bytes, Stack size 28 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = yaffs_load_tnode_0
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_soft_del_worker
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_del_file_chunk
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_put_chunk_in_file
</UL>

<P><STRONG><a name="[303]"></a>yaffs_tags_match</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, yaffs_guts.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_chunk_in_group
</UL>

<P><STRONG><a name="[302]"></a>yaffs_find_chunk_in_group</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = yaffs_find_chunk_in_group &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_match
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_chunk_bit
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_chunk_tags_nand
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_del_file_chunk
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_chunk_in_file
</UL>

<P><STRONG><a name="[307]"></a>yaffs_find_del_file_chunk</STRONG> (Thumb, 100 bytes, Stack size 112 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = yaffs_find_del_file_chunk &rArr; yaffs_find_chunk_in_group &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_chunk_in_group
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_load_tnode_0
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_tnode_0
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_group_base
</UL>
<BR>[Called By]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_prune_chunks
</UL>

<P><STRONG><a name="[30a]"></a>yaffs_soft_del_chunk</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = yaffs_soft_del_chunk &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_update_oldest_dirty_seq
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_soft_del_worker
</UL>

<P><STRONG><a name="[30b]"></a>yaffs_soft_del_worker</STRONG> (Thumb, 370 bytes, Stack size 40 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = yaffs_soft_del_worker &rArr;  yaffs_soft_del_worker (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_soft_del_worker
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_soft_del_chunk
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_load_tnode_0
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_free_tnode
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_group_base
</UL>
<BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_soft_del_file
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_soft_del_worker
</UL>

<P><STRONG><a name="[30c]"></a>yaffs_remove_obj_from_dir</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = yaffs_remove_obj_from_dir &rArr; yaffs_verify_obj_in_dir &rArr; yaffs_verify_obj &rArr; yaffs_verify_file &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_obj_in_dir
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_generic_obj_del
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_add_obj_to_dir
</UL>

<P><STRONG><a name="[32f]"></a>yaffs_obj_cache_dirty</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = yaffs_obj_cache_dirty
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
</UL>

<P><STRONG><a name="[311]"></a>yaffs_apply_xattrib_mod</STRONG> (Thumb, 106 bytes, Stack size 48 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = yaffs_apply_xattrib_mod &rArr; nval_set &rArr; nval_del &rArr; nval_find &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_set
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_hasvalues
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_del
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
</UL>

<P><STRONG><a name="[315]"></a>yaffs_load_oh_from_name</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = yaffs_load_oh_from_name &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
</UL>

<P><STRONG><a name="[317]"></a>yaffs_check_obj_details_loaded</STRONG> (Thumb, 130 bytes, Stack size 104 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = yaffs_check_obj_details_loaded &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_load_attribs
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_chunk_tags_nand
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_clone_str
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_set_obj_name_from_oh
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_release_temp_buffer
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_temp_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_equivalent_obj
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_initialise
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_by_name
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_obj_name
</UL>

<P><STRONG><a name="[319]"></a>yaffs_unhash_obj</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = yaffs_unhash_obj &rArr; list_del_init
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_hash_fn
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_empty
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_free_obj
</UL>

<P><STRONG><a name="[31c]"></a>yaffs_free_obj</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = yaffs_free_obj &rArr; yaffs_free_raw_obj &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unhash_obj
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_empty
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_free_raw_obj
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_generic_obj_del
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_handle_defered_free
</UL>

<P><STRONG><a name="[31e]"></a>yaffs_invalidate_whole_cache</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = yaffs_invalidate_whole_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_generic_obj_del
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_resize_file
</UL>

<P><STRONG><a name="[31d]"></a>yaffs_generic_obj_del</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1480 + Unknown Stack Size
<LI>Call Chain = yaffs_generic_obj_del &rArr; yaffs_change_obj_name &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_change_obj_name
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_invalidate_whole_cache
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_free_obj
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_remove_obj_from_dir
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chunk_del
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlink_worker
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_file
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_dir
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_symlink
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_link
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_soft_del_file
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_block
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_obj
</UL>

<P><STRONG><a name="[321]"></a>yaffs_gc_process_chunk</STRONG> (Thumb, 492 bytes, Stack size 128 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 840 + Unknown Stack Size
<LI>Call Chain = yaffs_gc_process_chunk &rArr; yaffs_put_chunk_in_file &rArr; yaffs_chunk_del &rArr; yaffs_wr_chunk_tags_nand &rArr; yaffs_summary_add &rArr; yaffs_summary_write &rArr;  yaffs_wr_chunk_tags_nand (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_write_new_chunk
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_oh
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_skip_verification
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_chunk_tags_nand
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_by_number
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_oh_size_load
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_put_chunk_in_file
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_chunk_in_file
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chunk_del
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_block
</UL>

<P><STRONG><a name="[324]"></a>yaffs_gc_block</STRONG> (Thumb, 796 bytes, Stack size 56 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 896 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_process_chunk
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_generic_obj_del
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_free_tnode
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_erased_chunks
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_still_some_chunks
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_chunk_bit
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_collected_blk
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_blk
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_gc
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_by_number
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_block_became_dirty
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_release_temp_buffer
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_temp_buffer
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_gc
</UL>

<P><STRONG><a name="[329]"></a>yaffs_find_gc_block</STRONG> (Thumb, 772 bytes, Stack size 72 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = yaffs_find_gc_block &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_block_ok_for_gc
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_find_oldest_dirty_seq
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_gc
</UL>

<P><STRONG><a name="[32c]"></a>yaffs_check_gc</STRONG> (Thumb, 556 bytes, Stack size 40 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 936 + Unknown Stack Size
<LI>Call Chain = yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_gc_block
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_gc_block
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_calc_checkpt_blocks_required
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_find_refresh_block
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_wr_data_obj
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_resize_file
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bg_gc
</UL>

<P><STRONG><a name="[330]"></a>yaffs_load_name_from_oh</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = yaffs_load_name_from_oh &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_obj_name
</UL>

<P><STRONG><a name="[31f]"></a>yaffs_change_obj_name</STRONG> (Thumb, 220 bytes, Stack size 48 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1464 + Unknown Stack Size
<LI>Call Chain = yaffs_change_obj_name &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_by_name
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_add_obj_to_dir
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_set_obj_name
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlink_worker
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlink_file_if_needed
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_generic_obj_del
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rename_obj
</UL>

<P><STRONG><a name="[335]"></a>yaffs_wr_data_obj</STRONG> (Thumb, 206 bytes, Stack size 184 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120 + Unknown Stack Size
<LI>Call Chain = yaffs_wr_data_obj &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_gc
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_write_new_chunk
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_file_sane
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_put_chunk_in_file
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_chunk_in_file
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chunk_del
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_flush_file_cache
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_file_wr
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_resize_file_down
</UL>

<P><STRONG><a name="[337]"></a>yaffs_flush_file_cache</STRONG> (Thumb, 186 bytes, Stack size 40 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160 + Unknown Stack Size
<LI>Call Chain = yaffs_flush_file_cache &rArr; yaffs_wr_data_obj &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_wr_data_obj
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_grab_chunk_cache
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_resize_file
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_flush_file
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_flush_whole_cache
</UL>

<P><STRONG><a name="[33a]"></a>yaffs_grab_chunk_worker</STRONG> (Thumb, 276 bytes, Stack size 0 bytes, yaffs_guts.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_grab_chunk_cache
</UL>

<P><STRONG><a name="[339]"></a>yaffs_grab_chunk_cache</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1192 + Unknown Stack Size
<LI>Call Chain = yaffs_grab_chunk_cache &rArr; yaffs_flush_file_cache &rArr; yaffs_wr_data_obj &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_grab_chunk_worker
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_flush_file_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_file_wr
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_file_rd
</UL>

<P><STRONG><a name="[33c]"></a>yaffs_find_chunk_cache</STRONG> (Thumb, 102 bytes, Stack size 12 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = yaffs_find_chunk_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_invalidate_chunk_cache
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_file_wr
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_file_rd
</UL>

<P><STRONG><a name="[369]"></a>yaffs_use_cache</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = yaffs_use_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_file_wr
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_file_rd
</UL>

<P><STRONG><a name="[33b]"></a>yaffs_invalidate_chunk_cache</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = yaffs_invalidate_chunk_cache &rArr; yaffs_find_chunk_cache
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_chunk_cache
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_file_wr
</UL>

<P><STRONG><a name="[33e]"></a>yaffs_soft_del_file</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1488 + Unknown Stack Size
<LI>Call Chain = yaffs_soft_del_file &rArr; yaffs_generic_obj_del &rArr; yaffs_change_obj_name &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_generic_obj_del
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_soft_del_worker
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_free_tnode
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_file
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlink_file_if_needed
</UL>

<P><STRONG><a name="[33f]"></a>yaffs_prune_worker</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = yaffs_prune_worker &rArr;  yaffs_prune_worker (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_prune_worker
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_free_tnode
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_prune_tree
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_prune_worker
</UL>

<P><STRONG><a name="[340]"></a>yaffs_prune_tree</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = yaffs_prune_tree &rArr; yaffs_prune_worker &rArr;  yaffs_prune_worker (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_prune_worker
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_free_tnode
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_resize_file_down
</UL>

<P><STRONG><a name="[341]"></a>yaffs_alloc_empty_obj</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = yaffs_alloc_empty_obj &rArr; yaffs_add_obj_to_dir &rArr; yaffs_remove_obj_from_dir &rArr; yaffs_verify_obj_in_dir &rArr; yaffs_verify_obj &rArr; yaffs_verify_file &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_add
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_alloc_raw_obj
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_add_obj_to_dir
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_new_obj
</UL>

<P><STRONG><a name="[343]"></a>yaffs_find_nice_bucket</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = yaffs_find_nice_bucket
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_new_obj_id
</UL>

<P><STRONG><a name="[342]"></a>yaffs_new_obj_id</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = yaffs_new_obj_id &rArr; yaffs_find_nice_bucket
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_nice_bucket
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_new_obj
</UL>

<P><STRONG><a name="[344]"></a>yaffs_hash_obj</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = yaffs_hash_obj
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_hash_fn
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_add
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_new_obj
</UL>

<P><STRONG><a name="[345]"></a>yaffs_new_obj</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = yaffs_new_obj &rArr; yaffs_alloc_empty_obj &rArr; yaffs_add_obj_to_dir &rArr; yaffs_remove_obj_from_dir &rArr; yaffs_verify_obj_in_dir &rArr; yaffs_verify_obj &rArr; yaffs_verify_file &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_hash_obj
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_new_obj_id
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_alloc_empty_obj
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_free_tnode
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_load_current_time
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_tnode
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_max_file_size
</UL>
<BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_obj
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_fake_dir
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_or_create_by_number
</UL>

<P><STRONG><a name="[347]"></a>yaffs_create_fake_dir</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = yaffs_create_fake_dir &rArr; yaffs_new_obj &rArr; yaffs_alloc_empty_obj &rArr; yaffs_add_obj_to_dir &rArr; yaffs_remove_obj_from_dir &rArr; yaffs_verify_obj_in_dir &rArr; yaffs_verify_obj &rArr; yaffs_verify_file &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_new_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_initial_dir
</UL>

<P><STRONG><a name="[348]"></a>yaffs_init_tnodes_and_objs</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = yaffs_init_tnodes_and_objs &rArr; yaffs_init_raw_tnodes_and_objs &rArr; yaffs_init_raw_objs &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_init_raw_tnodes_and_objs
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_initialise
</UL>

<P><STRONG><a name="[34a]"></a>yaffs_update_parent</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1440 + Unknown Stack Size
<LI>Call Chain = yaffs_update_parent &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_empty
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_add
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_load_current_time
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlink_worker
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_obj
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rename_obj
</UL>

<P><STRONG><a name="[34c]"></a>yaffs_del_link</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1488 + Unknown Stack Size
<LI>Call Chain = yaffs_del_link &rArr; yaffs_generic_obj_del &rArr; yaffs_change_obj_name &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_generic_obj_del
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlink_worker
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_obj
</UL>

<P><STRONG><a name="[34d]"></a>yaffs_del_symlink</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1488 + Unknown Stack Size
<LI>Call Chain = yaffs_del_symlink &rArr; yaffs_generic_obj_del &rArr; yaffs_change_obj_name &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_generic_obj_del
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_free
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlink_worker
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_obj
</UL>

<P><STRONG><a name="[34f]"></a>yaffs_del_dir</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1488 + Unknown Stack Size
<LI>Call Chain = yaffs_del_dir &rArr; yaffs_generic_obj_del &rArr; yaffs_change_obj_name &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_generic_obj_del
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_is_non_empty_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlink_worker
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_obj
</UL>

<P><STRONG><a name="[350]"></a>yaffs_rd_data_obj</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = yaffs_rd_data_obj &rArr; yaffs_find_chunk_in_file &rArr; yaffs_find_chunk_in_group &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_chunk_tags_nand
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_chunk_in_file
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_file_wr
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_file_rd
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_resize_file_down
</UL>

<P><STRONG><a name="[351]"></a>yaffs_prune_chunks</STRONG> (Thumb, 236 bytes, Stack size 64 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = yaffs_prune_chunks &rArr; yaffs_chunk_del &rArr; yaffs_wr_chunk_tags_nand &rArr; yaffs_summary_add &rArr; yaffs_summary_write &rArr;  yaffs_wr_chunk_tags_nand (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_del_file_chunk
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chunk_del
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_addr_to_chunk
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_resize_file_down
</UL>

<P><STRONG><a name="[354]"></a>yaffs_unlink_file_if_needed</STRONG> (Thumb, 398 bytes, Stack size 24 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1568 + Unknown Stack Size
<LI>Call Chain = yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_soft_del_file
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_change_obj_name
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_resize_file
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_file
</UL>

<P><STRONG><a name="[355]"></a>yaffs_del_file</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1592 + Unknown Stack Size
<LI>Call Chain = yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlink_file_if_needed
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_soft_del_file
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_generic_obj_del
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_free_tnode
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_resize_file
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlink_worker
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_obj
</UL>

<P><STRONG><a name="[357]"></a>yaffs_create_obj</STRONG> (Thumb, 250 bytes, Stack size 48 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1656 + Unknown Stack Size
<LI>Call Chain = yaffs_create_obj &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_parent
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_new_obj
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_add
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_attribs_init
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_free
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_obj
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_by_name
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_clone_str
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_add_obj_to_dir
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_set_obj_name
</UL>
<BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_link_obj
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_symlink
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_special
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_dir
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_file
</UL>

<P><STRONG><a name="[35d]"></a>yaffs_deinit_blocks</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = yaffs_deinit_blocks &rArr; yaffsfs_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_free
</UL>
<BR>[Called By]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_init_blocks
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_initialise
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinitialise
</UL>

<P><STRONG><a name="[35e]"></a>yaffs_init_blocks</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = yaffs_init_blocks &rArr; yaffsfs_malloc &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_deinit_blocks
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_malloc
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_initialise
</UL>

<P><STRONG><a name="[360]"></a>yaffs_do_xattrib_mod</STRONG> (Thumb, 78 bytes, Stack size 64 bytes, yaffs_guts.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_oh
</UL>
<BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_remove_xattrib
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_set_xattrib
</UL>

<P><STRONG><a name="[361]"></a>yaffs_do_xattrib_fetch</STRONG> (Thumb, 214 bytes, Stack size 128 bytes, yaffs_guts.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_chunk_tags_nand
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_list
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_hasvalues
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_get
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_release_temp_buffer
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_temp_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_list_xattrib
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_xattrib
</UL>

<P><STRONG><a name="[36d]"></a>yaffs_empty_dir_to_dir</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 600 + Unknown Stack Size
<LI>Call Chain = yaffs_empty_dir_to_dir &rArr; yaffs_add_obj_to_dir &rArr; yaffs_remove_obj_from_dir &rArr; yaffs_verify_obj_in_dir &rArr; yaffs_verify_obj &rArr; yaffs_verify_file &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_add_obj_to_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_retype_obj
</UL>

<P><STRONG><a name="[36f]"></a>yaffs_unlink_worker</STRONG> (Thumb, 310 bytes, Stack size 288 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1880 + Unknown Stack Size
<LI>Call Chain = yaffs_unlink_worker &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_file
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_dir
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_symlink
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_link
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_update_parent
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_change_obj_name
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_generic_obj_del
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_empty
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_is_non_empty_dir
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_obj_name
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_add_obj_to_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlink_obj
</UL>

<P><STRONG><a name="[370]"></a>yaffs_unlink_obj</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1888 + Unknown Stack Size
<LI>Call Chain = yaffs_unlink_obj &rArr; yaffs_unlink_worker &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlink_worker
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_dir_contents
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rename_obj
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlinker
</UL>

<P><STRONG><a name="[375]"></a>yaffs_strip_deleted_objs</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1632 + Unknown Stack Size
<LI>Call Chain = yaffs_strip_deleted_objs &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_initialise
</UL>

<P><STRONG><a name="[377]"></a>yaffs_has_null_parent</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, yaffs_guts.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fix_hanging_objs
</UL>

<P><STRONG><a name="[376]"></a>yaffs_fix_hanging_objs</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = yaffs_fix_hanging_objs &rArr; yaffs_add_obj_to_dir &rArr; yaffs_remove_obj_from_dir &rArr; yaffs_verify_obj_in_dir &rArr; yaffs_verify_obj &rArr; yaffs_verify_file &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_has_null_parent
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_add_obj_to_dir
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_initialise
</UL>

<P><STRONG><a name="[378]"></a>yaffs_del_dir_contents</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1912 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = yaffs_del_dir_contents &rArr;  yaffs_del_dir_contents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_dir_contents
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlink_obj
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_empty_l_n_f
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_dir_contents
</UL>

<P><STRONG><a name="[379]"></a>yaffs_empty_l_n_f</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1920 + Unknown Stack Size
<LI>Call Chain = yaffs_empty_l_n_f &rArr; yaffs_del_dir_contents &rArr;  yaffs_del_dir_contents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_dir_contents
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_initialise
</UL>

<P><STRONG><a name="[37e]"></a>yaffs_check_dev_fns</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = yaffs_check_dev_fns
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_marshall_install
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_compat_install
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_ll_init
</UL>

<P><STRONG><a name="[381]"></a>yaffs_create_initial_dir</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, yaffs_guts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 648 + Unknown Stack Size
<LI>Call Chain = yaffs_create_initial_dir &rArr; yaffs_create_fake_dir &rArr; yaffs_new_obj &rArr; yaffs_alloc_empty_obj &rArr; yaffs_add_obj_to_dir &rArr; yaffs_remove_obj_from_dir &rArr; yaffs_verify_obj_in_dir &rArr; yaffs_verify_obj &rArr; yaffs_verify_file &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_create_fake_dir
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_add_obj_to_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_guts_initialise
</UL>

<P><STRONG><a name="[394]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_hweight.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[393]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, yaffs_hweight.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>

<P><STRONG><a name="[396]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_k9f4g08u0b.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[395]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, yaffs_k9f4g08u0b.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>

<P><STRONG><a name="[39d]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_nameval.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[39c]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, yaffs_nameval.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>

<P><STRONG><a name="[39e]"></a>nval_find</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, yaffs_nameval.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = nval_find &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_set
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_get
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_del
</UL>

<P><STRONG><a name="[39f]"></a>nval_used</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, yaffs_nameval.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nval_used
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_set
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nval_hasvalues
</UL>

<P><STRONG><a name="[3a1]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_nand.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[3a0]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, yaffs_nand.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>

<P><STRONG><a name="[3a2]"></a>apply_chunk_offset</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_nand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_wr_chunk_tags_nand
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_chunk_tags_nand
</UL>

<P><STRONG><a name="[3a5]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_nand_drv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[3a4]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, yaffs_nand_drv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>

<P><STRONG><a name="[3a6]"></a>dev_to_chip</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_nand_drv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_nand_drv_Deinitialise
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_nand_drv_Initialise
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_nand_drv_MarkBad
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_nand_drv_ReadChunk
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_nand_drv_WriteChunk
</UL>

<P><STRONG><a name="[3a7]"></a>dev_to_buffer</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_nand_drv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_nand_drv_MarkBad
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_nand_drv_ReadChunk
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_nand_drv_WriteChunk
</UL>

<P><STRONG><a name="[47]"></a>yaffs_nand_drv_WriteChunk</STRONG> (Thumb, 120 bytes, Stack size 56 bytes, yaffs_nand_drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = yaffs_nand_drv_WriteChunk &rArr; NandFlash_PageProgramWithSpare &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_PageProgramWithSpare
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_ecc_calc
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_to_buffer
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_to_chip
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> yaffs_nand_drv.o(.text)
</UL>
<P><STRONG><a name="[48]"></a>yaffs_nand_drv_ReadChunk</STRONG> (Thumb, 164 bytes, Stack size 64 bytes, yaffs_nand_drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = yaffs_nand_drv_ReadChunk &rArr; NandFlash_PageReadWithSpare &rArr; NandFlash_WaitForReady &rArr; TIM_Waitus &rArr; TIM_ConfigMatch
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_PageReadWithSpare
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_ecc_correct
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_ecc_calc
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_to_buffer
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_to_chip
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> yaffs_nand_drv.o(.text)
</UL>
<P><STRONG><a name="[49]"></a>yaffs_nand_drv_EraseBlock</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, yaffs_nand_drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = yaffs_nand_drv_EraseBlock &rArr; NandFlash_BlockErase &rArr; NandFlash_WaitForReady &rArr; TIM_Waitus &rArr; TIM_ConfigMatch
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_BlockErase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> yaffs_nand_drv.o(.text)
</UL>
<P><STRONG><a name="[4a]"></a>yaffs_nand_drv_MarkBad</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, yaffs_nand_drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = yaffs_nand_drv_MarkBad &rArr; yaffs_bug_fn &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_PageReadWithSpare
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_to_buffer
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_to_chip
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> yaffs_nand_drv.o(.text)
</UL>
<P><STRONG><a name="[4b]"></a>yaffs_nand_drv_CheckBad</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, yaffs_nand_drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = yaffs_nand_drv_CheckBad &rArr; NandFlash_ValidBlockCheck &rArr; NandFlash_PageReadFromAddr &rArr; NandFlash_ReadFromAddr &rArr; NandFlash_WaitForReady &rArr; TIM_Waitus &rArr; TIM_ConfigMatch
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_ValidBlockCheck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> yaffs_nand_drv.o(.text)
</UL>
<P><STRONG><a name="[4c]"></a>yaffs_nand_drv_Initialise</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, yaffs_nand_drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = yaffs_nand_drv_Initialise
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_to_chip
</UL>
<BR>[Address Reference Count : 1]<UL><LI> yaffs_nand_drv.o(.text)
</UL>
<P><STRONG><a name="[4d]"></a>yaffs_nand_drv_Deinitialise</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, yaffs_nand_drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = yaffs_nand_drv_Deinitialise
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_to_chip
</UL>
<BR>[Address Reference Count : 1]<UL><LI> yaffs_nand_drv.o(.text)
</UL>
<P><STRONG><a name="[3aa]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_packedtags2.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[3a9]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, yaffs_packedtags2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>

<P><STRONG><a name="[3ab]"></a>yaffs_dump_packed_tags2_tags_only</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, yaffs_packedtags2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = yaffs_dump_packed_tags2_tags_only &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unpack_tags2_tags_only
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_pack_tags2_tags_only
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_dump_packed_tags2
</UL>

<P><STRONG><a name="[3ac]"></a>yaffs_dump_packed_tags2</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, yaffs_packedtags2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = yaffs_dump_packed_tags2 &rArr; yaffs_dump_packed_tags2_tags_only &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_dump_packed_tags2_tags_only
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unpack_tags2
</UL>

<P><STRONG><a name="[3ad]"></a>yaffs_dump_tags2</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, yaffs_packedtags2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = yaffs_dump_tags2 &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unpack_tags2
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unpack_tags2_tags_only
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_pack_tags2_tags_only
</UL>

<P><STRONG><a name="[3af]"></a>yaffs_check_tags_extra_packable</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, yaffs_packedtags2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = yaffs_check_tags_extra_packable
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_pack_tags2_tags_only
</UL>

<P><STRONG><a name="[3b5]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_qsort.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[3b4]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, yaffs_qsort.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>

<P><STRONG><a name="[3b7]"></a>swapfunc</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, yaffs_qsort.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = swapfunc
</UL>
<BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_qsort
</UL>

<P><STRONG><a name="[3b8]"></a>med3</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, yaffs_qsort.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = med3
</UL>
<BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_qsort
</UL>

<P><STRONG><a name="[3ba]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_summary.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[3b9]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, yaffs_summary.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>

<P><STRONG><a name="[3bb]"></a>yaffs_summary_clear</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, yaffs_summary.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = yaffs_summary_clear &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_add
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_init
</UL>

<P><STRONG><a name="[3bd]"></a>yaffs_summary_sum</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, yaffs_summary.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = yaffs_summary_sum
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_read
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_write
</UL>

<P><STRONG><a name="[3bc]"></a>yaffs_summary_write</STRONG> (Thumb, 294 bytes, Stack size 144 bytes, yaffs_summary.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = yaffs_summary_write &rArr;  yaffs_wr_chunk_tags_nand (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_set_chunk_bit
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_sum
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_wr_chunk_tags_nand
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_release_temp_buffer
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_temp_buffer
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_add
</UL>

<P><STRONG><a name="[3c1]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_tagscompat.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[3c0]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, yaffs_tagscompat.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>

<P><STRONG><a name="[3c4]"></a>yaffs_load_tags_to_spare</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, yaffs_tagscompat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = yaffs_load_tags_to_spare &rArr; yaffs_calc_tags_ecc
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_calc_tags_ecc
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_compat_wr
</UL>

<P><STRONG><a name="[3c5]"></a>yaffs_get_tags_from_spare</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, yaffs_tagscompat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = yaffs_get_tags_from_spare &rArr; yaffs_check_tags_ecc &rArr; yaffs_calc_tags_ecc
</UL>
<BR>[Calls]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_check_tags_ecc
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_compat_rd
</UL>

<P><STRONG><a name="[3c6]"></a>yaffs_spare_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, yaffs_tagscompat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = yaffs_spare_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_compat_wr
</UL>

<P><STRONG><a name="[3c9]"></a>yaffs_wr_nand</STRONG> (Thumb, 40 bytes, Stack size 32 bytes, yaffs_tagscompat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = yaffs_wr_nand
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_compat_mark_bad
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_compat_wr
</UL>

<P><STRONG><a name="[3c7]"></a>yaffs_handle_rd_data_error</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, yaffs_tagscompat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = yaffs_handle_rd_data_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_chunk_nand
</UL>

<P><STRONG><a name="[3c8]"></a>yaffs_rd_chunk_nand</STRONG> (Thumb, 364 bytes, Stack size 88 bytes, yaffs_tagscompat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = yaffs_rd_chunk_nand &rArr; yaffs_handle_rd_data_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_ecc_correct
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_ecc_calc
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_handle_rd_data_error
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_compat_query_block
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_compat_rd
</UL>

<P><STRONG><a name="[4e]"></a>yaffs_tags_compat_wr</STRONG> (Thumb, 158 bytes, Stack size 48 bytes, yaffs_tagscompat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84 + Unknown Stack Size
<LI>Call Chain = yaffs_tags_compat_wr &rArr; yaffs_load_tags_to_spare &rArr; yaffs_calc_tags_ecc
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_ecc_calc
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_wr_nand
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_spare_init
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_load_tags_to_spare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> yaffs_tagscompat.o(.text)
</UL>
<P><STRONG><a name="[4f]"></a>yaffs_tags_compat_rd</STRONG> (Thumb, 200 bytes, Stack size 64 bytes, yaffs_tagscompat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = yaffs_tags_compat_rd &rArr; yaffs_rd_chunk_nand &rArr; yaffs_handle_rd_data_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_hweight8
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_chunk_nand
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_tags_from_spare
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> yaffs_tagscompat.o(.text)
</UL>
<P><STRONG><a name="[51]"></a>yaffs_tags_compat_mark_bad</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, yaffs_tagscompat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = yaffs_tags_compat_mark_bad &rArr; yaffs_wr_nand
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_wr_nand
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> yaffs_tagscompat.o(.text)
</UL>
<P><STRONG><a name="[50]"></a>yaffs_tags_compat_query_block</STRONG> (Thumb, 138 bytes, Stack size 64 bytes, yaffs_tagscompat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = yaffs_tags_compat_query_block &rArr; yaffs_rd_chunk_nand &rArr; yaffs_handle_rd_data_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_hweight8
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_chunk_nand
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> yaffs_tagscompat.o(.text)
</UL>
<P><STRONG><a name="[3cb]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_tagsmarshall.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[3ca]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, yaffs_tagsmarshall.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>

<P><STRONG><a name="[52]"></a>yaffs_tags_marshall_write</STRONG> (Thumb, 170 bytes, Stack size 72 bytes, yaffs_tagsmarshall.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = yaffs_tags_marshall_write &rArr; yaffs_pack_tags2 &rArr; yaffs_pack_tags2_tags_only &rArr; yaffs_dump_tags2 &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_pack_tags2
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_pack_tags2_tags_only
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> yaffs_tagsmarshall.o(.text)
</UL>
<P><STRONG><a name="[53]"></a>yaffs_tags_marshall_read</STRONG> (Thumb, 316 bytes, Stack size 184 bytes, yaffs_tagsmarshall.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = yaffs_tags_marshall_read &rArr; yaffs_unpack_tags2 &rArr; yaffs_unpack_tags2_tags_only &rArr; yaffs_dump_tags2 &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_bug_fn
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unpack_tags2
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unpack_tags2_tags_only
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_release_temp_buffer
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_temp_buffer
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_marshall_query_block
</UL>
<BR>[Address Reference Count : 1]<UL><LI> yaffs_tagsmarshall.o(.text)
</UL>
<P><STRONG><a name="[54]"></a>yaffs_tags_marshall_query_block</STRONG> (Thumb, 158 bytes, Stack size 96 bytes, yaffs_tagsmarshall.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = yaffs_tags_marshall_query_block &rArr; yaffs_tags_marshall_read &rArr; yaffs_unpack_tags2 &rArr; yaffs_unpack_tags2_tags_only &rArr; yaffs_dump_tags2 &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_tags_marshall_read
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> yaffs_tagsmarshall.o(.text)
</UL>
<P><STRONG><a name="[55]"></a>yaffs_tags_marshall_mark_bad</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, yaffs_tagsmarshall.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = yaffs_tags_marshall_mark_bad
</UL>
<BR>[Address Reference Count : 1]<UL><LI> yaffs_tagsmarshall.o(.text)
</UL>
<P><STRONG><a name="[3cd]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_ucos_glue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[3cc]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, yaffs_ucos_glue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>

<P><STRONG><a name="[3d5]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_verify.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[3d4]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, yaffs_verify.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>

<P><STRONG><a name="[3dc]"></a>yaffs_skip_full_verification</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, yaffs_verify.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_dir
</UL>

<P><STRONG><a name="[3d7]"></a>yaffs_skip_nand_verification</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, yaffs_verify.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_obj
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_verify_file
</UL>

<P><STRONG><a name="[3e2]"></a>list_add</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, yaffs_yaffs1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs1_scan
</UL>

<P><STRONG><a name="[3e0]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_yaffs1.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[3df]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, yaffs_yaffs1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>

<P><STRONG><a name="[3f4]"></a>list_add</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_chunk
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_objs
</UL>

<P><STRONG><a name="[3e4]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffs_yaffs2.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[3e3]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, yaffs_yaffs2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>

<P><STRONG><a name="[3e7]"></a>yaffs2_wr_checkpt_validity_marker</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = yaffs2_wr_checkpt_validity_marker &rArr; yaffs2_checkpt_wr &rArr; yaffs2_checkpt_flush_buffer &rArr; yaffs2_checkpt_find_erased_block &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_wr
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_wr_checkpt_data
</UL>

<P><STRONG><a name="[3e8]"></a>yaffs2_rd_checkpt_validity_marker</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = yaffs2_rd_checkpt_validity_marker &rArr; yaffs2_checkpt_rd &rArr; yaffs2_checkpt_find_block &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_rd
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_data
</UL>

<P><STRONG><a name="[3ea]"></a>yaffs2_dev_to_checkpt_dev</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_wr_checkpt_dev
</UL>

<P><STRONG><a name="[3ec]"></a>yaffs_checkpt_dev_to_dev</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_dev
</UL>

<P><STRONG><a name="[3e9]"></a>yaffs2_wr_checkpt_dev</STRONG> (Thumb, 130 bytes, Stack size 56 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = yaffs2_wr_checkpt_dev &rArr; yaffs2_checkpt_wr &rArr; yaffs2_checkpt_flush_buffer &rArr; yaffs2_checkpt_find_erased_block &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_wr
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_dev_to_checkpt_dev
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_wr_checkpt_data
</UL>

<P><STRONG><a name="[3eb]"></a>yaffs2_rd_checkpt_dev</STRONG> (Thumb, 136 bytes, Stack size 56 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = yaffs2_rd_checkpt_dev &rArr; yaffs2_checkpt_rd &rArr; yaffs2_checkpt_find_block &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_rd
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_checkpt_dev_to_dev
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_data
</UL>

<P><STRONG><a name="[3f2]"></a>yaffs2_obj_checkpt_obj</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_wr_checkpt_objs
</UL>

<P><STRONG><a name="[3ed]"></a>yaffs2_checkpt_obj_to_obj</STRONG> (Thumb, 314 bytes, Stack size 24 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 664 + Unknown Stack Size
<LI>Call Chain = yaffs2_checkpt_obj_to_obj &rArr; yaffs_find_or_create_by_number &rArr; yaffs_new_obj &rArr; yaffs_alloc_empty_obj &rArr; yaffs_add_obj_to_dir &rArr; yaffs_remove_obj_from_dir &rArr; yaffs_verify_obj_in_dir &rArr; yaffs_verify_obj &rArr; yaffs_verify_file &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_or_create_by_number
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_add_obj_to_dir
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_objs
</UL>

<P><STRONG><a name="[3ee]"></a>yaffs2_checkpt_tnode_worker</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = yaffs2_checkpt_tnode_worker &rArr;  yaffs2_checkpt_tnode_worker (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_wr
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_tnode_worker
</UL>
<BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_wr_checkpt_tnodes
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_tnode_worker
</UL>

<P><STRONG><a name="[3ef]"></a>yaffs2_wr_checkpt_tnodes</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = yaffs2_wr_checkpt_tnodes &rArr; yaffs2_checkpt_tnode_worker &rArr;  yaffs2_checkpt_tnode_worker (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_wr
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_tnode_worker
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_wr_checkpt_objs
</UL>

<P><STRONG><a name="[3f0]"></a>yaffs2_rd_checkpt_tnodes</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = yaffs2_rd_checkpt_tnodes &rArr; yaffs2_checkpt_rd &rArr; yaffs2_checkpt_find_block &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_rd
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_add_find_tnode_0
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_tnode
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_objs
</UL>

<P><STRONG><a name="[3f1]"></a>yaffs2_wr_checkpt_objs</STRONG> (Thumb, 210 bytes, Stack size 64 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = yaffs2_wr_checkpt_objs &rArr; yaffs2_wr_checkpt_tnodes &rArr; yaffs2_checkpt_tnode_worker &rArr;  yaffs2_checkpt_tnode_worker (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_wr
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_wr_checkpt_tnodes
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_obj_checkpt_obj
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_wr_checkpt_data
</UL>

<P><STRONG><a name="[3f3]"></a>yaffs2_rd_checkpt_objs</STRONG> (Thumb, 228 bytes, Stack size 72 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 736 + Unknown Stack Size
<LI>Call Chain = yaffs2_rd_checkpt_objs &rArr; yaffs2_checkpt_obj_to_obj &rArr; yaffs_find_or_create_by_number &rArr; yaffs_new_obj &rArr; yaffs_alloc_empty_obj &rArr; yaffs_add_obj_to_dir &rArr; yaffs_remove_obj_from_dir &rArr; yaffs_verify_obj_in_dir &rArr; yaffs_verify_obj &rArr; yaffs_verify_file &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_rd
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_tnodes
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_obj_to_obj
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_add
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_link_fixup
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_or_create_by_number
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_data
</UL>

<P><STRONG><a name="[3f5]"></a>yaffs2_wr_checkpt_sum</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = yaffs2_wr_checkpt_sum &rArr; yaffs2_checkpt_wr &rArr; yaffs2_checkpt_flush_buffer &rArr; yaffs2_checkpt_find_erased_block &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_wr
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_get_checkpt_sum
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_wr_checkpt_data
</UL>

<P><STRONG><a name="[3f7]"></a>yaffs2_rd_checkpt_sum</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = yaffs2_rd_checkpt_sum &rArr; yaffs2_checkpt_rd &rArr; yaffs2_checkpt_find_block &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_rd
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_get_checkpt_sum
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_data
</UL>

<P><STRONG><a name="[3f8]"></a>yaffs2_wr_checkpt_data</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = yaffs2_wr_checkpt_data &rArr; yaffs2_wr_checkpt_objs &rArr; yaffs2_wr_checkpt_tnodes &rArr; yaffs2_checkpt_tnode_worker &rArr;  yaffs2_checkpt_tnode_worker (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_checkpt_close
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_open
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_required
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_wr_checkpt_sum
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_wr_checkpt_objs
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_wr_checkpt_dev
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_wr_checkpt_validity_marker
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_checkpoint_save
</UL>

<P><STRONG><a name="[3f9]"></a>yaffs2_rd_checkpt_data</STRONG> (Thumb, 738 bytes, Stack size 16 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 752 + Unknown Stack Size
<LI>Call Chain = yaffs2_rd_checkpt_data &rArr; yaffs2_rd_checkpt_objs &rArr; yaffs2_checkpt_obj_to_obj &rArr; yaffs_find_or_create_by_number &rArr; yaffs_new_obj &rArr; yaffs_alloc_empty_obj &rArr; yaffs_add_obj_to_dir &rArr; yaffs_remove_obj_from_dir &rArr; yaffs_verify_obj_in_dir &rArr; yaffs_verify_obj &rArr; yaffs_verify_file &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_checkpt_close
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_open
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_sum
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_objs
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_dev
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_rd_checkpt_validity_marker
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_checkpt_restore
</UL>

<P><STRONG><a name="[56]"></a>yaffs2_ybicmp</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = yaffs2_ybicmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> yaffs_yaffs2.o(.text)
</UL>
<P><STRONG><a name="[3fb]"></a>yaffs2_scan_chunk</STRONG> (Thumb, 1928 bytes, Stack size 176 bytes, yaffs_yaffs2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1736 + Unknown Stack Size
<LI>Call Chain = yaffs2_scan_chunk &rArr; yaffs_retype_obj &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_set_chunk_bit
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_load_attribs
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_add
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_summary_fetch
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rd_chunk_tags_nand
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_oh_to_size
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_handle_shadowed_obj
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_retype_obj
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_or_create_by_number
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_clone_str
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_add_obj_to_dir
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_put_chunk_in_file
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_set_obj_name_from_oh
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chunk_del
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs2_scan_backwards
</UL>

<P><STRONG><a name="[3fd]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffscfg2k.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[3fc]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, yaffscfg2k.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>

<P><STRONG><a name="[423]"></a>list_add</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, yaffsfs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_opendir_reldir_no_lock
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_add_device
</UL>

<P><STRONG><a name="[400]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, yaffsfs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_closedir_no_lock
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[3ff]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>
<BR>[Called By]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_remove_device
</UL>

<P><STRONG><a name="[421]"></a>list_empty</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, yaffsfs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DirAdvance
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetDirRewound
</UL>

<P><STRONG><a name="[401]"></a>yaffsfs_InitHandles</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = yaffsfs_InitHandles &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mount_common
</UL>

<P><STRONG><a name="[403]"></a>yaffsfs_HandleToPointer</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, yaffsfs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_close
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_dup
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_BreakDeviceHandles
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_PutHandle
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_GetHandle
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToFileDes
</UL>

<P><STRONG><a name="[402]"></a>yaffsfs_HandleToFileDes</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = yaffsfs_HandleToFileDes
</UL>
<BR>[Calls]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rewinddir_fd
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_readdir_fd
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_lseek
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_ftruncate
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_close
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open_sharing_reldir
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_dup
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_do_write
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_do_read
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_BreakDeviceHandles
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToInode
</UL>

<P><STRONG><a name="[404]"></a>yaffsfs_HandleToInode</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = yaffsfs_HandleToInode &rArr; yaffsfs_HandleToFileDes
</UL>
<BR>[Calls]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToFileDes
</UL>
<BR>[Called By]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToObject
</UL>

<P><STRONG><a name="[405]"></a>yaffsfs_HandleToObject</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = yaffsfs_HandleToObject &rArr; yaffsfs_HandleToInode &rArr; yaffsfs_HandleToFileDes
</UL>
<BR>[Calls]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToInode
</UL>
<BR>[Called By]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fchmod
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fremovexattr
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_flistxattr
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fgetxattr
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fsetxattr
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_futime
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fstat
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_lseek
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_ftruncate
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_close
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_IsDevBusy
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_do_write
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_do_read
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_Dofsync
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_BreakDeviceHandles
</UL>

<P><STRONG><a name="[406]"></a>yaffsfs_FindInodeIdForObject</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = yaffsfs_FindInodeIdForObject &rArr; yaffs_get_equivalent_obj &rArr; yaffs_check_obj_details_loaded &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_equivalent_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CountHandles
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_GetInodeIdForObject
</UL>

<P><STRONG><a name="[407]"></a>yaffsfs_GetInodeIdForObject</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = yaffsfs_GetInodeIdForObject &rArr; yaffsfs_FindInodeIdForObject &rArr; yaffs_get_equivalent_obj &rArr; yaffs_check_obj_details_loaded &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_equivalent_obj
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindInodeIdForObject
</UL>
<BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open_sharing_reldir
</UL>

<P><STRONG><a name="[408]"></a>yaffsfs_CountHandles</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindInodeIdForObject
</UL>
<BR>[Called By]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_n_handles_reldir
</UL>

<P><STRONG><a name="[409]"></a>yaffsfs_ReleaseInode</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1624 + Unknown Stack Size
<LI>Call Chain = yaffsfs_ReleaseInode &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_del_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_PutInode
</UL>

<P><STRONG><a name="[40a]"></a>yaffsfs_PutInode</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1640 + Unknown Stack Size
<LI>Call Chain = yaffsfs_PutInode &rArr; yaffsfs_ReleaseInode &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_ReleaseInode
</UL>
<BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_BreakDeviceHandles
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_PutFileDes
</UL>

<P><STRONG><a name="[40c]"></a>yaffsfs_NewHandle</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, yaffsfs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_dup
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_NewHandleAndFileDes
</UL>

<P><STRONG><a name="[40b]"></a>yaffsfs_NewHandleAndFileDes</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = yaffsfs_NewHandleAndFileDes
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_NewHandle
</UL>
<BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open_sharing_reldir
</UL>

<P><STRONG><a name="[40d]"></a>yaffsfs_GetHandle</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = yaffsfs_GetHandle
</UL>
<BR>[Calls]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_do_write
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_do_read
</UL>

<P><STRONG><a name="[40e]"></a>yaffsfs_closedir_no_lock</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = yaffsfs_closedir_no_lock &rArr; yaffsfs_SetError
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
</UL>
<BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_closedir
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_PutFileDes
</UL>

<P><STRONG><a name="[410]"></a>yaffsfs_PutFileDes</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1656 + Unknown Stack Size
<LI>Call Chain = yaffsfs_PutFileDes &rArr; yaffsfs_PutInode &rArr; yaffsfs_ReleaseInode &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_closedir_no_lock
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_PutInode
</UL>
<BR>[Called By]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_PutHandle
</UL>

<P><STRONG><a name="[411]"></a>yaffsfs_PutHandle</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1672 + Unknown Stack Size
<LI>Call Chain = yaffsfs_PutHandle &rArr; yaffsfs_PutFileDes &rArr; yaffsfs_PutInode &rArr; yaffsfs_ReleaseInode &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_PutFileDes
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_close
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open_sharing_reldir
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_do_write
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_do_read
</UL>

<P><STRONG><a name="[412]"></a>yaffsfs_BreakDeviceHandles</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1664 + Unknown Stack Size
<LI>Call Chain = yaffsfs_BreakDeviceHandles &rArr; yaffsfs_PutInode &rArr; yaffsfs_ReleaseInode &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_PutInode
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToObject
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToFileDes
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_format_common
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unmount2_common
</UL>

<P><STRONG><a name="[417]"></a>yaffsfs_Match</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, yaffsfs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindDevice
</UL>

<P><STRONG><a name="[415]"></a>yaffsfs_IsPathDivider</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, yaffsfs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FollowLink
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoFindDirectory
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindDevice
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_alt_dir_path
</UL>

<P><STRONG><a name="[413]"></a>yaffsfs_CheckNameLength</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_link_reldir
</UL>

<P><STRONG><a name="[414]"></a>yaffsfs_alt_dir_path</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = yaffsfs_alt_dir_path &rArr; yaffsfs_malloc &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_malloc
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_IsPathDivider
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rmdir_reldir
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mkdir_reldir
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rename_reldir
</UL>

<P><STRONG><a name="[416]"></a>yaffsfs_FindDevice</STRONG> (Thumb, 220 bytes, Stack size 48 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = yaffsfs_FindDevice
</UL>
<BR>[Calls]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_IsPathDivider
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Match
</UL>
<BR>[Called By]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_inodecount_common
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_totalspace_common
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_freespace_common
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_sync_common
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_getdev
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindRoot
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindMountPoint
</UL>

<P><STRONG><a name="[418]"></a>yaffsfs_CheckPath</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = yaffsfs_CheckPath
</UL>
<BR>[Calls]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_IsPathDivider
</UL>
<BR>[Called By]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_n_handles_reldir
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_link_reldir
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_symlink_reldir
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_inodecount_common
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_totalspace_common
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_freespace_common
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_format_common
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unmount2_common
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_remount_common
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_sync_common
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mount_common
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rmdir_reldir
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mkdir_reldir
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chmod_reldir
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_access_reldir
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_utime_reldir
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rename_reldir
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_truncate_reldir
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open_sharing_reldir
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_removexattr_reldir
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_listxattr_reldir
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_getxattr_reldir
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_setxattr_reldir
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoStatOrLStat_reldir
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoUnlink_reldir
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_opendir_reldir_no_lock
</UL>

<P><STRONG><a name="[419]"></a>yaffsfs_FindMountPoint</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = yaffsfs_FindMountPoint &rArr; yaffsfs_FindDevice
</UL>
<BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_format_common
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unmount2_common
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_remount_common
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mount_common
</UL>

<P><STRONG><a name="[41a]"></a>yaffsfs_FindRoot</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = yaffsfs_FindRoot &rArr; yaffsfs_FindDevice
</UL>
<BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoFindDirectory
</UL>

<P><STRONG><a name="[41b]"></a>yaffsfs_DoFindDirectory</STRONG> (Thumb, 232 bytes, Stack size 296 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 976 + Unknown Stack Size
<LI>Call Chain = yaffsfs_DoFindDirectory &rArr; yaffs_find_by_name &rArr; yaffs_get_obj_name &rArr; yaffs_check_obj_details_loaded &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FollowLink
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindRoot
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_IsPathDivider
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_by_name
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindDirectory
</UL>

<P><STRONG><a name="[41d]"></a>yaffsfs_FindDirectory</STRONG> (Thumb, 36 bytes, Stack size 40 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1016 + Unknown Stack Size
<LI>Call Chain = yaffsfs_FindDirectory &rArr; yaffsfs_DoFindDirectory &rArr; yaffs_find_by_name &rArr; yaffs_get_obj_name &rArr; yaffs_check_obj_details_loaded &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoFindDirectory
</UL>
<BR>[Called By]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_link_reldir
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_symlink_reldir
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mkdir_reldir
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rename_reldir
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open_sharing_reldir
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoUnlink_reldir
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindObject
</UL>

<P><STRONG><a name="[41e]"></a>yaffsfs_FindObject</STRONG> (Thumb, 88 bytes, Stack size 64 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1080 + Unknown Stack Size
<LI>Call Chain = yaffsfs_FindObject &rArr; yaffsfs_FindDirectory &rArr; yaffsfs_DoFindDirectory &rArr; yaffs_find_by_name &rArr; yaffs_get_obj_name &rArr; yaffs_check_obj_details_loaded &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_equivalent_obj
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindDirectory
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_find_by_name
</UL>
<BR>[Called By]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_n_handles_reldir
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_link_reldir
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_readlink_reldir
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_symlink_reldir
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chmod_reldir
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_access_reldir
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_utime_reldir
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rename_reldir
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_truncate_reldir
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open_sharing_reldir
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_removexattr_reldir
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_listxattr_reldir
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_getxattr_reldir
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_setxattr_reldir
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoStatOrLStat_reldir
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoUnlink_reldir
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_opendir_reldir_no_lock
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FollowLink
</UL>

<P><STRONG><a name="[41c]"></a>yaffsfs_FollowLink</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = yaffsfs_FollowLink &rArr;  yaffsfs_FindObject (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_equivalent_obj
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindObject
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_IsPathDivider
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chmod_reldir
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_access_reldir
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_truncate_reldir
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open_sharing_reldir
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_removexattr_reldir
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_listxattr_reldir
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_getxattr_reldir
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_do_setxattr_reldir
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoStatOrLStat_reldir
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoFindDirectory
</UL>

<P><STRONG><a name="[425]"></a>yaffsfs_TooManyObjects</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, yaffsfs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_link_reldir
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_symlink_reldir
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_mkdir_reldir
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open_sharing_reldir
</UL>

<P><STRONG><a name="[420]"></a>yaffsfs_SetDirRewound</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = yaffsfs_SetDirRewound
</UL>
<BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_empty
</UL>
<BR>[Called By]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_rewinddir_no_lock
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_opendir_reldir_no_lock
</UL>

<P><STRONG><a name="[422]"></a>yaffsfs_opendir_reldir_no_lock</STRONG> (Thumb, 316 bytes, Stack size 48 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1128 + Unknown Stack Size
<LI>Call Chain = yaffsfs_opendir_reldir_no_lock &rArr; yaffsfs_FindObject &rArr; yaffsfs_FindDirectory &rArr; yaffsfs_DoFindDirectory &rArr; yaffs_find_by_name &rArr; yaffs_get_obj_name &rArr; yaffs_check_obj_details_loaded &rArr; yaffs_rd_chunk_tags_nand &rArr; yaffs_handle_chunk_error &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetDirRewound
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindObject
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_add
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_opendir_reldir
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_open_sharing_reldir
</UL>

<P><STRONG><a name="[42b]"></a>yaffs_Dofsync</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToObject
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_flush_file
</UL>
<BR>[Called By]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fdatasync
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fsync
</UL>

<P><STRONG><a name="[430]"></a>yaffsfs_do_read</STRONG> (Thumb, 510 bytes, Stack size 88 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1760 + Unknown Stack Size
<LI>Call Chain = yaffsfs_do_read &rArr; yaffsfs_PutHandle &rArr; yaffsfs_PutFileDes &rArr; yaffsfs_PutInode &rArr; yaffsfs_ReleaseInode &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_PutHandle
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_GetHandle
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToObject
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToFileDes
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_obj_length
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_file_rd
</UL>
<BR>[Called By]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_pread
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_read
</UL>

<P><STRONG><a name="[433]"></a>yaffsfs_do_write</STRONG> (Thumb, 492 bytes, Stack size 88 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1760 + Unknown Stack Size
<LI>Call Chain = yaffsfs_do_write &rArr; yaffsfs_PutHandle &rArr; yaffsfs_PutFileDes &rArr; yaffsfs_PutInode &rArr; yaffsfs_ReleaseInode &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_PutHandle
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_GetHandle
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToObject
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToFileDes
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_obj_length
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_wr_file
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_pwrite
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_write
</UL>

<P><STRONG><a name="[43b]"></a>yaffsfs_DoUnlink_reldir</STRONG> (Thumb, 330 bytes, Stack size 56 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindObject
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindDirectory
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlinker
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rmdir_reldir
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlink_reldev
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unlink_reldir
</UL>

<P><STRONG><a name="[440]"></a>rename_file_over_dir</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rename_reldir
</UL>

<P><STRONG><a name="[441]"></a>rename_dir_over_file</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rename_reldir
</UL>

<P><STRONG><a name="[444]"></a>yaffsfs_DoStat</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_equivalent_obj
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_obj_link_count
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_obj_length
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fstat
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoStatOrLStat_reldir
</UL>

<P><STRONG><a name="[447]"></a>yaffsfs_DoStatOrLStat_reldir</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DoStat
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FollowLink
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindObject
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_lstat_reldev
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_stat_reldev
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_lstat_reldir
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_stat_reldir
</UL>

<P><STRONG><a name="[44f]"></a>yaffsfs_DoUtime</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CurrentTime
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_equivalent_obj
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_flush_file
</UL>
<BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_futime
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_utime_reldir
</UL>

<P><STRONG><a name="[454]"></a>yaffs_do_setxattr_reldir</STRONG> (Thumb, 252 bytes, Stack size 80 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FollowLink
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindObject
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_set_xattrib
</UL>
<BR>[Called By]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_lsetxattr_reldir
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_setxattr_reldir
</UL>

<P><STRONG><a name="[45c]"></a>yaffs_do_getxattr_reldir</STRONG> (Thumb, 246 bytes, Stack size 64 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FollowLink
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindObject
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_xattrib
</UL>
<BR>[Called By]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_lgetxattr_reldir
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_getxattr_reldir
</UL>

<P><STRONG><a name="[464]"></a>yaffs_do_listxattr_reldir</STRONG> (Thumb, 234 bytes, Stack size 56 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FollowLink
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindObject
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_list_xattrib
</UL>
<BR>[Called By]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_llistxattr_reldir
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_listxattr_reldir
</UL>

<P><STRONG><a name="[46c]"></a>yaffs_do_removexattr_reldir</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FollowLink
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_FindObject
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckPath
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Unlock
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_Lock
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetError
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_remove_xattrib
</UL>
<BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_lremovexattr_reldir
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_removexattr_reldir
</UL>

<P><STRONG><a name="[474]"></a>yaffsfs_DoChMod</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_get_equivalent_obj
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_flush_file
</UL>
<BR>[Called By]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_fchmod
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_chmod_reldir
</UL>

<P><STRONG><a name="[48d]"></a>yaffsfs_IsDevBusy</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = yaffsfs_IsDevBusy &rArr; yaffsfs_HandleToObject &rArr; yaffsfs_HandleToInode &rArr; yaffsfs_HandleToFileDes
</UL>
<BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_HandleToObject
</UL>
<BR>[Called By]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_format_common
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_unmount2_common
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_remount_common
</UL>

<P><STRONG><a name="[4a2]"></a>yaffsfs_DirAdvance</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = yaffsfs_DirAdvance
</UL>
<BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_empty
</UL>
<BR>[Called By]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_readdir_no_lock
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_RemoveObjectCallback
</UL>

<P><STRONG><a name="[57]"></a>yaffsfs_RemoveObjectCallback</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, yaffsfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = yaffsfs_RemoveObjectCallback &rArr; yaffsfs_DirAdvance
</UL>
<BR>[Calls]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_DirAdvance
</UL>
<BR>[Address Reference Count : 1]<UL><LI> yaffsfs.o(.text)
</UL>
<P><STRONG><a name="[4a8]"></a>yaffsfs_rewinddir_no_lock</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, yaffsfs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_SetDirRewound
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffsfs_CheckMemRegion
</UL>
<BR>[Called By]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rewinddir_fd
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_rewinddir
</UL>

<P><STRONG><a name="[4bd]"></a>sys_get_ms</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, sys_arch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = sys_get_ms &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_now
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_jiffies
</UL>

<P><STRONG><a name="[4cf]"></a>free_etharp_q</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, etharp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = free_etharp_q &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_free_entry
</UL>

<P><STRONG><a name="[4d3]"></a>etharp_free_entry</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, etharp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = etharp_free_entry &rArr; snmp_delete_arpidx_tree &rArr; snmp_mib_node_delete &rArr; snmp_mib_ln_free &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_etharp_q
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_delete_arpidx_tree
</UL>
<BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_find_entry
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_cleanup_netif
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_tmr
</UL>

<P><STRONG><a name="[4d6]"></a>etharp_find_entry</STRONG> (Thumb, 520 bytes, Stack size 48 bytes, etharp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = etharp_find_entry &rArr; etharp_free_entry &rArr; snmp_delete_arpidx_tree &rArr; snmp_mib_node_delete &rArr; snmp_mib_ln_free &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_free_entry
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_update_arp_entry
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_find_addr
</UL>

<P><STRONG><a name="[4d7]"></a>etharp_send_ip</STRONG> (Thumb, 366 bytes, Stack size 24 bytes, etharp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = etharp_send_ip &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output_to_arp_index
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_update_arp_entry
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_query
</UL>

<P><STRONG><a name="[4d8]"></a>etharp_update_arp_entry</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, etharp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = etharp_update_arp_entry &rArr; etharp_find_entry &rArr; etharp_free_entry &rArr; snmp_delete_arpidx_tree &rArr; snmp_mib_node_delete &rArr; snmp_mib_ln_free &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_send_ip
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_find_entry
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_insert_arpidx_tree
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip4_addr_isbroadcast
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_arp_input
</UL>

<P><STRONG><a name="[4dd]"></a>etharp_arp_input</STRONG> (Thumb, 416 bytes, Stack size 40 bytes, etharp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = etharp_arp_input &rArr; etharp_update_arp_entry &rArr; etharp_find_entry &rArr; etharp_free_entry &rArr; snmp_delete_arpidx_tree &rArr; snmp_mib_node_delete &rArr; snmp_mib_ln_free &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_update_arp_entry
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
</UL>

<P><STRONG><a name="[4de]"></a>etharp_raw</STRONG> (Thumb, 454 bytes, Stack size 40 bytes, etharp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = etharp_raw &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request
</UL>

<P><STRONG><a name="[4e1]"></a>etharp_output_to_arp_index</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, etharp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = etharp_output_to_arp_index &rArr; etharp_request &rArr; etharp_raw &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_send_ip
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_request
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_output
</UL>

<P><STRONG><a name="[4f4]"></a>netconn_recv_data</STRONG> (Thumb, 934 bytes, Stack size 56 bytes, api_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = netconn_recv_data &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_fetch
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_recv_tcp_pbuf
</UL>

<P><STRONG><a name="[4fb]"></a>netconn_close_shutdown</STRONG> (Thumb, 90 bytes, Stack size 48 bytes, api_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = netconn_close_shutdown &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_apimsg
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_shutdown
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_close
</UL>

<P><STRONG><a name="[69]"></a>recv_raw</STRONG> (Thumb, 212 bytes, Stack size 40 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = recv_raw &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_delete
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_msg.o(.text)
</UL>
<P><STRONG><a name="[6a]"></a>recv_udp</STRONG> (Thumb, 258 bytes, Stack size 40 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = recv_udp &rArr; netbuf_delete &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_delete
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_msg.o(.text)
</UL>
<P><STRONG><a name="[68]"></a>recv_tcp</STRONG> (Thumb, 238 bytes, Stack size 32 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624 + Unknown Stack Size
<LI>Call Chain = recv_tcp &rArr; tcp_recved &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recved
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_msg.o(.text)
</UL>
<P><STRONG><a name="[67]"></a>err_tcp</STRONG> (Thumb, 270 bytes, Stack size 32 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = err_tcp &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_msg.o(.text)
</UL>
<P><STRONG><a name="[503]"></a>do_writemore</STRONG> (Thumb, 872 bytes, Stack size 40 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = do_writemore &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;poll_tcp
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sent_tcp
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_write
</UL>

<P><STRONG><a name="[65]"></a>sent_tcp</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = sent_tcp &rArr; do_close_internal &rArr; tcp_shutdown &rArr; tcp_close_shutdown &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_writemore
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_msg.o(.text)
</UL>
<P><STRONG><a name="[506]"></a>do_close_internal</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 664 + Unknown Stack Size
<LI>Call Chain = do_close_internal &rArr; tcp_shutdown &rArr; tcp_close_shutdown &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_shutdown
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_sent
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_poll
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_err
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_arg
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_accept
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;poll_tcp
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sent_tcp
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_delconn
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close
</UL>

<P><STRONG><a name="[66]"></a>poll_tcp</STRONG> (Thumb, 394 bytes, Stack size 16 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 680 + Unknown Stack Size
<LI>Call Chain = poll_tcp &rArr; do_close_internal &rArr; tcp_shutdown &rArr; tcp_close_shutdown &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close_internal
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_writemore
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_msg.o(.text)
</UL>
<P><STRONG><a name="[50f]"></a>setup_tcp</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = setup_tcp &rArr; tcp_sent &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_sent
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_poll
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_err
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_arg
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_connected
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcb_new
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accept_function
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_connect
</UL>

<P><STRONG><a name="[6c]"></a>accept_function</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = accept_function &rArr; netconn_alloc &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_trypost
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_free
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_sent
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recv
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_poll
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_err
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_arg
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_tcp
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_free
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_alloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_msg.o(.text)
</UL>
<P><STRONG><a name="[510]"></a>pcb_new</STRONG> (Thumb, 196 bytes, Stack size 8 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 696 + Unknown Stack Size
<LI>Call Chain = pcb_new &rArr; tcp_new &rArr; tcp_alloc &rArr; tcp_kill_prio &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_recv
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_new
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_new
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_recv
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;raw_new
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_tcp
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_newconn
</UL>

<P><STRONG><a name="[516]"></a>netconn_drain</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 664 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = netconn_drain &rArr;  netconn_drain (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_mbox_tryfetch
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_mbox_free
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_recved
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_delete
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_free
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_drain
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_delconn
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_close
</UL>

<P><STRONG><a name="[6b]"></a>do_connected</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = do_connected &rArr; setup_tcp &rArr; tcp_sent &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_tcp
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_msg.o(.text)
</UL>
<P><STRONG><a name="[6d]"></a>do_dns_found</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, api_msg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = do_dns_found &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> api_msg.o(.text)
</UL>
<P><STRONG><a name="[532]"></a>get_socket</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, sockets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_socket
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_fcntl
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ioctl
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_setsockopt
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockopt
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_shutdown
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_send
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_sendto
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_recvfrom
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_listen
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_connect
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_bind
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getaddrname
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_callback
</UL>

<P><STRONG><a name="[543]"></a>tryget_socket</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, sockets.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_selscan
</UL>

<P><STRONG><a name="[533]"></a>alloc_socket</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, sockets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = alloc_socket &rArr; sys_arch_unprotect &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
</UL>
<BR>[Called By]<UL><LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_socket
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_accept
</UL>

<P><STRONG><a name="[534]"></a>free_socket</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, sockets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = free_socket &rArr; netbuf_delete &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netbuf_delete
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
</UL>
<BR>[Called By]<UL><LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_close
</UL>

<P><STRONG><a name="[6e]"></a>event_callback</STRONG> (Thumb, 372 bytes, Stack size 40 bytes, sockets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = event_callback &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sockets.o(.text)
</UL>
<P><STRONG><a name="[542]"></a>lwip_selscan</STRONG> (Thumb, 382 bytes, Stack size 64 bytes, sockets.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tryget_socket
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_select
</UL>

<P><STRONG><a name="[546]"></a>lwip_getaddrname</STRONG> (Thumb, 138 bytes, Stack size 48 bytes, sockets.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_socket
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netconn_getaddr
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getsockname
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_getpeername
</UL>

<P><STRONG><a name="[6f]"></a>lwip_getsockopt_internal</STRONG> (Thumb, 782 bytes, Stack size 32 bytes, sockets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = lwip_getsockopt_internal &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sockets.o(.text)
</UL>
<P><STRONG><a name="[70]"></a>lwip_setsockopt_internal</STRONG> (Thumb, 724 bytes, Stack size 48 bytes, sockets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = lwip_setsockopt_internal &rArr; igmp_leavegroup &rArr; igmp_send &rArr; igmp_ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_signal
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_leavegroup
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_joingroup
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sockets.o(.text)
</UL>
<P><STRONG><a name="[71]"></a>tcpip_thread</STRONG> (Thumb, 228 bytes, Stack size 8 bytes, tcpip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 808 + Unknown Stack Size
<LI>Call Chain = tcpip_thread &rArr; ethernet_input &rArr; ip_input &rArr; tcp_input &rArr; tcp_listen_input &rArr; tcp_alloc &rArr; tcp_kill_prio &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_untimeout
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeouts_mbox_fetch
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernet_input
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tcpip.o(.text)
</UL>
<P><STRONG><a name="[72]"></a>pbuf_free_int</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, tcpip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = pbuf_free_int &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tcpip.o(.text)
</UL>
<P><STRONG><a name="[55a]"></a>dns_parse_name</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, dns.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_recv
</UL>

<P><STRONG><a name="[559]"></a>dns_compare_name</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, dns.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dns_compare_name
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_recv
</UL>

<P><STRONG><a name="[74]"></a>dns_recv</STRONG> (Thumb, 380 bytes, Stack size 48 bytes, dns.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = dns_recv &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_compare_name
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_parse_name
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohl
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_copy_partial
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dns.o(.text)
</UL>
<P><STRONG><a name="[55e]"></a>dns_send</STRONG> (Thumb, 320 bytes, Stack size 56 bytes, dns.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = dns_send &rArr; udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_sendto
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_connect
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_check_entry
</UL>

<P><STRONG><a name="[560]"></a>dns_check_entry</STRONG> (Thumb, 524 bytes, Stack size 16 bytes, dns.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = dns_check_entry &rArr; dns_send &rArr; udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_send
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_enqueue
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_check_entries
</UL>

<P><STRONG><a name="[561]"></a>dns_check_entries</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, dns.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = dns_check_entries &rArr; dns_check_entry &rArr; dns_send &rArr; udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_check_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_tmr
</UL>

<P><STRONG><a name="[563]"></a>dns_lookup</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, dns.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dns_lookup
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_gethostbyname
</UL>

<P><STRONG><a name="[564]"></a>dns_enqueue</STRONG> (Thumb, 226 bytes, Stack size 40 bytes, dns.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 672 + Unknown Stack Size
<LI>Call Chain = dns_enqueue &rArr; dns_check_entry &rArr; dns_send &rArr; udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_check_entry
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_gethostbyname
</UL>

<P><STRONG><a name="[570]"></a>plug_holes</STRONG> (Thumb, 226 bytes, Stack size 16 bytes, mem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = plug_holes &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_free
</UL>

<P><STRONG><a name="[76]"></a>netif_loopif_init</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, netif.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> netif.o(.text)
</UL>
<P><STRONG><a name="[590]"></a>pbuf_free_ooseq</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, pbuf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = pbuf_free_ooseq &rArr; tcp_segs_free &rArr; tcp_seg_free &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_segs_free
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free_ooseq_callback
</UL>

<P><STRONG><a name="[77]"></a>pbuf_free_ooseq_callback</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, pbuf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = pbuf_free_ooseq_callback &rArr; pbuf_free_ooseq &rArr; tcp_segs_free &rArr; tcp_seg_free &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free_ooseq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pbuf.o(.text)
</UL>
<P><STRONG><a name="[592]"></a>pbuf_pool_is_empty</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, pbuf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_unprotect
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_protect
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_callback_with_block
</UL>
<BR>[Called By]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
</UL>

<P><STRONG><a name="[5ac]"></a>tcp_close_shutdown</STRONG> (Thumb, 478 bytes, Stack size 24 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = tcp_close_shutdown &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timer_needed
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_fin
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_tcpestabresets
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_tcpattemptfails
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_remove
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_shutdown
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_close
</UL>

<P><STRONG><a name="[5b7]"></a>tcp_new_port</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = tcp_new_port
</UL>
<BR>[Called By]<UL><LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_connect
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_bind
</UL>

<P><STRONG><a name="[78]"></a>tcp_accept_null</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tcp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> tcp.o(.text)
</UL>
<P><STRONG><a name="[5bd]"></a>tcp_kill_prio</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 664 + Unknown Stack Size
<LI>Call Chain = tcp_kill_prio &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
</UL>
<BR>[Called By]<UL><LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
</UL>

<P><STRONG><a name="[5be]"></a>tcp_kill_timewait</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, tcp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 656 + Unknown Stack Size
<LI>Call Chain = tcp_kill_timewait &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
</UL>
<BR>[Called By]<UL><LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
</UL>

<P><STRONG><a name="[5c0]"></a>tcp_oos_insert_segment</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, tcp_in.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = tcp_oos_insert_segment &rArr; tcp_segs_free &rArr; tcp_seg_free &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_segs_free
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
</UL>
<BR>[Called By]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
</UL>

<P><STRONG><a name="[5c1]"></a>tcp_receive</STRONG> (Thumb, 3562 bytes, Stack size 48 bytes, tcp_in.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + Unknown Stack Size
<LI>Call Chain = tcp_receive &rArr; tcp_send_empty_ack &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit_fast
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_oos_insert_segment
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_copy
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_update_rcv_ann_wnd
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_realloc
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohl
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_cat
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
</UL>

<P><STRONG><a name="[5c4]"></a>tcp_parseopt</STRONG> (Thumb, 200 bytes, Stack size 32 bytes, tcp_in.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = tcp_parseopt &rArr; lwip_ntohs
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
</UL>
<BR>[Called By]<UL><LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_listen_input
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_process
</UL>

<P><STRONG><a name="[5c5]"></a>tcp_process</STRONG> (Thumb, 1582 bytes, Stack size 32 bytes, tcp_in.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 672 + Unknown Stack Size
<LI>Call Chain = tcp_process &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rexmit
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_parseopt
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timer_needed
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_eff_send_mss
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_pcb_purge
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohl
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abort
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL>

<P><STRONG><a name="[5c7]"></a>tcp_listen_input</STRONG> (Thumb, 354 bytes, Stack size 24 bytes, tcp_in.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 704 + Unknown Stack Size
<LI>Call Chain = tcp_listen_input &rArr; tcp_alloc &rArr; tcp_kill_prio &rArr; tcp_abort &rArr; tcp_abandon &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_tcppassiveopens
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_parseopt
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_timer_needed
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue_flags
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_alloc
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_eff_send_mss
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_abandon
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>
<BR>[Called By]<UL><LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL>

<P><STRONG><a name="[5c9]"></a>tcp_timewait_input</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, tcp_in.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = tcp_timewait_input &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_rst
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>
<BR>[Called By]<UL><LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_input
</UL>

<P><STRONG><a name="[5ce]"></a>tcp_output_alloc_header</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, tcp_out.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = tcp_output_alloc_header &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send_empty_ack
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_zero_window_probe
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_keepalive
</UL>

<P><STRONG><a name="[5cf]"></a>tcp_create_segment</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, tcp_out.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = tcp_create_segment &rArr; tcp_seg_free &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_seg_free
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_header
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
</UL>
<BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_enqueue_flags
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
</UL>

<P><STRONG><a name="[5d0]"></a>tcp_pbuf_prealloc</STRONG> (Thumb, 446 bytes, Stack size 56 bytes, tcp_out.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = tcp_pbuf_prealloc &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
</UL>

<P><STRONG><a name="[5d1]"></a>tcp_write_checks</STRONG> (Thumb, 218 bytes, Stack size 16 bytes, tcp_out.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = tcp_write_checks &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_write
</UL>

<P><STRONG><a name="[5d3]"></a>tcp_output_segment</STRONG> (Thumb, 490 bytes, Stack size 40 bytes, tcp_out.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_eff_send_mss
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_route
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohl
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htonl
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_tcpoutsegs
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
</UL>
<BR>[Called By]<UL><LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_output
</UL>

<P><STRONG><a name="[79]"></a>tcpip_tcp_timer</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 704 + Unknown Stack Size
<LI>Call Chain = tcpip_tcp_timer &rArr; tcp_tmr &rArr; tcp_fasttmr &rArr; tcp_process_refused_data &rArr; tcp_recv_null &rArr; tcp_close &rArr; tcp_close_shutdown &rArr; tcp_pcb_remove &rArr; tcp_output &rArr; tcp_output_segment &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_tmr
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timers.o(.text)
</UL>
<P><STRONG><a name="[7a]"></a>ip_reass_timer</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = ip_reass_timer &rArr; ip_reass_tmr &rArr; ip_reass_free_complete_datagram &rArr; icmp_time_exceeded &rArr; icmp_send_response &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_tmr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timers.o(.text)
</UL>
<P><STRONG><a name="[7b]"></a>arp_timer</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = arp_timer &rArr; etharp_tmr &rArr; etharp_free_entry &rArr; snmp_delete_arpidx_tree &rArr; snmp_mib_node_delete &rArr; snmp_mib_ln_free &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_tmr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timers.o(.text)
</UL>
<P><STRONG><a name="[7c]"></a>igmp_timer</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = igmp_timer &rArr; igmp_tmr &rArr; igmp_timeout &rArr; igmp_send &rArr; igmp_ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_tmr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timers.o(.text)
</UL>
<P><STRONG><a name="[7d]"></a>dns_timer</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, timers.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 656 + Unknown Stack Size
<LI>Call Chain = dns_timer &rArr; dns_tmr &rArr; dns_check_entries &rArr; dns_check_entry &rArr; dns_send &rArr; udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dns_tmr
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timeout
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timers.o(.text)
</UL>
<P><STRONG><a name="[5df]"></a>udp_new_port</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, udp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = udp_new_port
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udp_bind
</UL>

<P><STRONG><a name="[5eb]"></a>icmp_send_response</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, icmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = icmp_send_response &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_icmpouttimeexcds
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_icmpoutmsgs
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_time_exceeded
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_dest_unreach
</UL>

<P><STRONG><a name="[5ee]"></a>igmp_lookup_group</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, igmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = igmp_lookup_group &rArr; memp_malloc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_lookfor_group
</UL>
<BR>[Called By]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_start
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_joingroup
</UL>

<P><STRONG><a name="[5f0]"></a>igmp_start_timer</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, igmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = igmp_start_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_joingroup
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_delaying_member
</UL>

<P><STRONG><a name="[5f2]"></a>igmp_delaying_member</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, igmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = igmp_delaying_member &rArr; igmp_start_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_start_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_report_groups
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_input
</UL>

<P><STRONG><a name="[5f3]"></a>igmp_remove_group</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, igmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = igmp_remove_group &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
</UL>
<BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_leavegroup
</UL>

<P><STRONG><a name="[5f5]"></a>igmp_ip_output_if</STRONG> (Thumb, 74 bytes, Stack size 48 bytes, igmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = igmp_ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_output_if_opt
</UL>
<BR>[Called By]<UL><LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_send
</UL>

<P><STRONG><a name="[5f7]"></a>igmp_send</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, igmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = igmp_send &rArr; igmp_ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_ip_output_if
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_leavegroup
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_joingroup
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_timeout
</UL>

<P><STRONG><a name="[5f8]"></a>igmp_timeout</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, igmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = igmp_timeout &rArr; igmp_send &rArr; igmp_ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_send
</UL>
<BR>[Called By]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;igmp_tmr
</UL>

<P><STRONG><a name="[5f9]"></a>lwip_standard_chksum</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, inet_chksum.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lwip_standard_chksum
</UL>
<BR>[Called By]<UL><LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pbuf
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inet_chksum_pseudo_partial
</UL>

<P><STRONG><a name="[5fc]"></a>ip_canforward</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, ip.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_forward
</UL>

<P><STRONG><a name="[5fb]"></a>ip_forward</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, ip.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + Unknown Stack Size
<LI>Call Chain = ip_forward &rArr; icmp_time_exceeded &rArr; icmp_send_response &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_route
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_ipoutnoroutes
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_ipinhdrerrors
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_ipforwdatagrams
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_canforward
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_time_exceeded
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_dest_unreach
</UL>
<BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_input
</UL>

<P><STRONG><a name="[60d]"></a>ip_reass_dequeue_datagram</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ip_frag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = ip_reass_dequeue_datagram &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
</UL>

<P><STRONG><a name="[60e]"></a>ip_reass_free_complete_datagram</STRONG> (Thumb, 288 bytes, Stack size 32 bytes, ip_frag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = ip_reass_free_complete_datagram &rArr; icmp_time_exceeded &rArr; icmp_send_response &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_ipreasmfails
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_dequeue_datagram
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;icmp_time_exceeded
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_remove_oldest_datagram
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_tmr
</UL>

<P><STRONG><a name="[610]"></a>ip_reass_remove_oldest_datagram</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, ip_frag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = ip_reass_remove_oldest_datagram &rArr; ip_reass_free_complete_datagram &rArr; icmp_time_exceeded &rArr; icmp_send_response &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_free_complete_datagram
</UL>
<BR>[Called By]<UL><LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_enqueue_new_datagram
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
</UL>

<P><STRONG><a name="[611]"></a>ip_reass_enqueue_new_datagram</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, ip_frag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 648 + Unknown Stack Size
<LI>Call Chain = ip_reass_enqueue_new_datagram &rArr; ip_reass_remove_oldest_datagram &rArr; ip_reass_free_complete_datagram &rArr; icmp_time_exceeded &rArr; icmp_send_response &rArr; ip_output &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass_remove_oldest_datagram
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
</UL>

<P><STRONG><a name="[612]"></a>ip_reass_chain_frag_into_datagram_and_validate</STRONG> (Thumb, 824 bytes, Stack size 48 bytes, ip_frag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = ip_reass_chain_frag_into_datagram_and_validate &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_clen
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_ntohs
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_reass
</UL>

<P><STRONG><a name="[614]"></a>ip_frag_alloc_pbuf_custom_ref</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ip_frag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = ip_frag_alloc_pbuf_custom_ref &rArr; memp_malloc &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
</UL>

<P><STRONG><a name="[615]"></a>ip_frag_free_pbuf_custom_ref</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ip_frag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = ip_frag_free_pbuf_custom_ref &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ipfrag_free_pbuf_custom
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag
</UL>

<P><STRONG><a name="[7e]"></a>ipfrag_free_pbuf_custom</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, ip_frag.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = ipfrag_free_pbuf_custom &rArr; pbuf_free &rArr; mem_free &rArr; plug_holes &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ip_frag_free_pbuf_custom_ref
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ip_frag.o(.text)
</UL>
<P><STRONG><a name="[622]"></a>ocstrncpy</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ocstrncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ifentry_get_value
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_value
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_get_value
</UL>

<P><STRONG><a name="[82]"></a>ip_ntomentry_get_value</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = ip_ntomentry_get_value &rArr; etharp_find_addr &rArr; etharp_find_entry &rArr; etharp_free_entry &rArr; snmp_delete_arpidx_tree &rArr; snmp_mib_node_delete &rArr; snmp_mib_ln_free &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_find_addr
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_oidtoip
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_ifindextonetif
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.text)
</UL>
<P><STRONG><a name="[81]"></a>ip_ntomentry_get_object_def</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = ip_ntomentry_get_object_def &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.text)
</UL>
<P><STRONG><a name="[80]"></a>atentry_get_value</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = atentry_get_value &rArr; etharp_find_addr &rArr; etharp_find_entry &rArr; etharp_free_entry &rArr; snmp_delete_arpidx_tree &rArr; snmp_mib_node_delete &rArr; snmp_mib_ln_free &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;etharp_find_addr
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_oidtoip
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_ifindextonetif
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.text)
</UL>
<P><STRONG><a name="[7f]"></a>atentry_get_object_def</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, mib2.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.text)
</UL>
<P><STRONG><a name="[84]"></a>ip_addrentry_get_value</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = ip_addrentry_get_value &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_oidtoip
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.text)
</UL>
<P><STRONG><a name="[83]"></a>ip_addrentry_get_object_def</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = ip_addrentry_get_object_def &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.text)
</UL>
<P><STRONG><a name="[86]"></a>ip_rteentry_get_value</STRONG> (Thumb, 312 bytes, Stack size 40 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = ip_rteentry_get_value &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_oidtoip
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_netiftoifindex
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;objectidncpy
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.text)
</UL>
<P><STRONG><a name="[85]"></a>ip_rteentry_get_object_def</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = ip_rteentry_get_object_def &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.text)
</UL>
<P><STRONG><a name="[88]"></a>udpentry_get_value</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = udpentry_get_value &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_oidtoip
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.text)
</UL>
<P><STRONG><a name="[87]"></a>udpentry_get_object_def</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, mib2.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.text)
</UL>
<P><STRONG><a name="[c3]"></a>system_get_object_def</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = system_get_object_def &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.constdata)
</UL>
<P><STRONG><a name="[c4]"></a>system_get_value</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = system_get_value &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_get_sysuptime
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;objectidncpy
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ocstrncpy
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.constdata)
</UL>
<P><STRONG><a name="[c5]"></a>system_set_test</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = system_set_test &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.constdata)
</UL>
<P><STRONG><a name="[c6]"></a>system_set_value</STRONG> (Thumb, 358 bytes, Stack size 24 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = system_set_value &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ocstrncpy
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.constdata)
</UL>
<P><STRONG><a name="[c1]"></a>interfaces_get_object_def</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, mib2.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.constdata)
</UL>
<P><STRONG><a name="[c2]"></a>interfaces_get_value</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = interfaces_get_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.constdata)
</UL>
<P><STRONG><a name="[e]"></a>ifentry_get_object_def</STRONG> (Thumb, 312 bytes, Stack size 24 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = ifentry_get_object_def &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_ifindextonetif
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>ifentry_get_value</STRONG> (Thumb, 374 bytes, Stack size 24 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = ifentry_get_value &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_ifindextonetif
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;objectidncpy
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ocstrncpy
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.data)
</UL>
<P><STRONG><a name="[be]"></a>ip_get_object_def</STRONG> (Thumb, 246 bytes, Stack size 24 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = ip_get_object_def &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.constdata)
</UL>
<P><STRONG><a name="[bf]"></a>ip_get_value</STRONG> (Thumb, 290 bytes, Stack size 24 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = ip_get_value &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.constdata)
</UL>
<P><STRONG><a name="[c0]"></a>ip_set_test</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = ip_set_test &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.constdata)
</UL>
<P><STRONG><a name="[bc]"></a>icmp_get_object_def</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, mib2.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.constdata)
</UL>
<P><STRONG><a name="[bd]"></a>icmp_get_value</STRONG> (Thumb, 310 bytes, Stack size 24 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = icmp_get_value &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.constdata)
</UL>
<P><STRONG><a name="[ba]"></a>tcp_get_object_def</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = tcp_get_object_def &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.constdata)
</UL>
<P><STRONG><a name="[bb]"></a>tcp_get_value</STRONG> (Thumb, 412 bytes, Stack size 32 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = tcp_get_value &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.constdata)
</UL>
<P><STRONG><a name="[b8]"></a>udp_get_object_def</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, mib2.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.constdata)
</UL>
<P><STRONG><a name="[b9]"></a>udp_get_value</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = udp_get_value &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.constdata)
</UL>
<P><STRONG><a name="[b4]"></a>snmp_get_object_def</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = snmp_get_object_def &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.constdata)
</UL>
<P><STRONG><a name="[b5]"></a>snmp_get_value</STRONG> (Thumb, 332 bytes, Stack size 24 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = snmp_get_value &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.constdata)
</UL>
<P><STRONG><a name="[b6]"></a>snmp_set_test</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = snmp_set_test &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.constdata)
</UL>
<P><STRONG><a name="[b7]"></a>snmp_set_value</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, mib2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = snmp_set_value &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mib2.o(.constdata)
</UL>
<P><STRONG><a name="[623]"></a>push_node</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, mib_structs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = push_node &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_expand_tree
</UL>

<P><STRONG><a name="[628]"></a>pop_node</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, mib_structs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_expand_tree
</UL>

<P><STRONG><a name="[627]"></a>empty_table</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, mib_structs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = empty_table
</UL>
<BR>[Called By]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_expand_tree
</UL>

<P><STRONG><a name="[62b]"></a>snmp_ok_response</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, msg_in.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = snmp_ok_response &rArr; snmp_send_response &rArr; udp_send &rArr; udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_response
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_list_free
</UL>
<BR>[Called By]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_getnext_event
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_get_event
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_set_event
</UL>

<P><STRONG><a name="[62d]"></a>snmp_error_response</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, msg_in.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = snmp_error_response &rArr; snmp_send_response &rArr; udp_send &rArr; udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_response
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_list_free
</UL>
<BR>[Called By]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_getnext_event
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_get_event
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_set_event
</UL>

<P><STRONG><a name="[62e]"></a>snmp_msg_set_event</STRONG> (Thumb, 890 bytes, Stack size 40 bytes, msg_in.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 680 + Unknown Stack Size
<LI>Call Chain = snmp_msg_set_event &rArr; snmp_error_response &rArr; snmp_send_response &rArr; udp_send &rArr; udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_error_response
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_ok_response
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_iso_prefix_tst
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_search_tree
</UL>
<BR>[Called By]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_event
</UL>

<P><STRONG><a name="[631]"></a>snmp_msg_get_event</STRONG> (Thumb, 1080 bytes, Stack size 40 bytes, msg_in.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 680 + Unknown Stack Size
<LI>Call Chain = snmp_msg_get_event &rArr; snmp_error_response &rArr; snmp_send_response &rArr; udp_send &rArr; udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_malloc
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memp_free
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_tail_add
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_error_response
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_ok_response
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_iso_prefix_tst
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_search_tree
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_event
</UL>

<P><STRONG><a name="[634]"></a>snmp_msg_getnext_event</STRONG> (Thumb, 614 bytes, Stack size 168 bytes, msg_in.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 808 + Unknown Stack Size
<LI>Call Chain = snmp_msg_getnext_event &rArr; snmp_error_response &rArr; snmp_send_response &rArr; udp_send &rArr; udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_alloc
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_tail_add
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_error_response
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_ok_response
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_iso_prefix_expand
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_expand_tree
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_event
</UL>

<P><STRONG><a name="[637]"></a>snmp_pdu_dec_varbindlist</STRONG> (Thumb, 1040 bytes, Stack size 320 bytes, msg_in.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = snmp_pdu_dec_varbindlist &rArr; snmp_varbind_alloc &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_alloc
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_tail_add
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_varbind_list_free
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_add_snmpintotalsetvars
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_add_snmpintotalreqvars
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_snmpinasnparseerrs
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_dec_raw
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_dec_oid
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_dec_s32t
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_dec_u32t
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_dec_length
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_dec_type
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_recv
</UL>

<P><STRONG><a name="[641]"></a>snmp_pdu_header_check</STRONG> (Thumb, 898 bytes, Stack size 56 bytes, msg_in.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 672 + Unknown Stack Size
<LI>Call Chain = snmp_pdu_header_check &rArr; snmp_authfail_trap &rArr; snmp_send_trap &rArr; udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_authfail_trap
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_snmpintraps
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_snmpingetresponses
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_snmpinsetrequests
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_snmpingetnexts
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_snmpingetrequests
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_snmpingenerrs
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_snmpinreadonlys
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_snmpinbadvalues
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_snmpinnosuchnames
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_snmpintoobigs
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_snmpinasnparseerrs
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_snmpinbadcommunitynames
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_snmpinbadversions
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_dec_raw
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_dec_s32t
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_dec_length
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_dec_type
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_recv
</UL>

<P><STRONG><a name="[89]"></a>snmp_recv</STRONG> (Thumb, 210 bytes, Stack size 48 bytes, msg_in.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 872 + Unknown Stack Size
<LI>Call Chain = snmp_recv &rArr; snmp_msg_event &rArr; snmp_msg_getnext_event &rArr; snmp_error_response &rArr; snmp_send_response &rArr; udp_send &rArr; udp_sendto &rArr; udp_sendto_if &rArr; ip_output_if &rArr; ip_output_if_opt &rArr; ip_frag &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_msg_event
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_header_check
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_pdu_dec_varbindlist
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_inc_snmpinpkts
</UL>
<BR>[Address Reference Count : 1]<UL><LI> msg_in.o(.text)
</UL>
<P><STRONG><a name="[651]"></a>snmp_varbind_list_enc</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, msg_out.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = snmp_varbind_list_enc &rArr; snmp_asn1_enc_oid
</UL>
<BR>[Calls]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_enc_raw
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_enc_oid
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_enc_s32t
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_enc_u32t
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_enc_length
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_enc_type
</UL>
<BR>[Called By]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_trap
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_response
</UL>

<P><STRONG><a name="[658]"></a>snmp_resp_header_enc</STRONG> (Thumb, 402 bytes, Stack size 16 bytes, msg_out.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = snmp_resp_header_enc &rArr; snmp_asn1_enc_raw
</UL>
<BR>[Calls]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_enc_raw
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_enc_s32t
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_enc_length
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_enc_type
</UL>
<BR>[Called By]<UL><LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_response
</UL>

<P><STRONG><a name="[659]"></a>snmp_resp_header_sum</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, msg_out.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = snmp_resp_header_sum
</UL>
<BR>[Calls]<UL><LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_enc_s32t_cnt
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_enc_length_cnt
</UL>
<BR>[Called By]<UL><LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_response
</UL>

<P><STRONG><a name="[65c]"></a>snmp_varbind_list_sum</STRONG> (Thumb, 250 bytes, Stack size 24 bytes, msg_out.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = snmp_varbind_list_sum &rArr; snmp_asn1_enc_oid_cnt
</UL>
<BR>[Calls]<UL><LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_enc_oid_cnt
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_enc_s32t_cnt
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_enc_u32t_cnt
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_enc_length_cnt
</UL>
<BR>[Called By]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_trap
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_response
</UL>

<P><STRONG><a name="[665]"></a>snmp_trap_header_enc</STRONG> (Thumb, 432 bytes, Stack size 16 bytes, msg_out.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = snmp_trap_header_enc &rArr; snmp_asn1_enc_oid
</UL>
<BR>[Calls]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_enc_raw
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_enc_oid
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_enc_s32t
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_enc_u32t
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_enc_length
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_enc_type
</UL>
<BR>[Called By]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_trap
</UL>

<P><STRONG><a name="[666]"></a>snmp_trap_header_sum</STRONG> (Thumb, 262 bytes, Stack size 24 bytes, msg_out.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = snmp_trap_header_sum &rArr; snmp_asn1_enc_oid_cnt
</UL>
<BR>[Calls]<UL><LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_enc_oid_cnt
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_enc_s32t_cnt
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_enc_u32t_cnt
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_asn1_enc_length_cnt
</UL>
<BR>[Called By]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;snmp_send_trap
</UL>

<P><STRONG><a name="[66b]"></a>low_level_input</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, ethernetif.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = low_level_input &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_UpdateRxConsumeIndex
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_GetRxBuffer
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_GetRxFrameSize
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_GetBufferSts
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_alloc
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_input
</UL>

<P><STRONG><a name="[8a]"></a>ethernetif_input</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, ethernetif.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = ethernetif_input &rArr; low_level_input &rArr; pbuf_alloc &rArr; pbuf_pool_is_empty &rArr; tcpip_callback_with_block &rArr; memp_free &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EMAC_IntCmd
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_arch_sem_wait
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbuf_free
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lwip_htons
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_level_input
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ethernetif.o(.text)
</UL>
<P><STRONG><a name="[66f]"></a>low_level_init</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, ethernetif.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = low_level_init &rArr; OSTaskCreateExt &rArr; OS_TCBInit &rArr; OSTaskCreateHook
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sem_new
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ethernetif_init
</UL>

<P><STRONG><a name="[8c]"></a>low_level_output</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, ethernetif.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = low_level_output
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ethernetif.o(.text)
</UL>
<P><STRONG><a name="[671]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_hooks.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[670]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app_hooks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>

<P><STRONG><a name="[677]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, user_key.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[676]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, user_key.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>

<P><STRONG><a name="[8d]"></a>task_Key</STRONG> (Thumb, 384 bytes, Stack size 8 bytes, user_key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = task_Key &rArr; OSQPend &rArr; OS_EventTaskWait
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQPend
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKeyMsg (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_key.o(.text)
</UL>
<P><STRONG><a name="[67d]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, user_key.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInit
</UL>

<P><STRONG><a name="[692]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, user_main.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[691]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, user_main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>

<P><STRONG><a name="[92]"></a>TaskStart</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, user_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2152 + Unknown Stack Size
<LI>Call Chain = TaskStart &rArr; File_Init &rArr; File_Create &rArr; File_Set_Config_Analogue &rArr; yaffs_write &rArr; yaffsfs_do_write &rArr; yaffsfs_PutHandle &rArr; yaffsfs_PutFileDes &rArr; yaffsfs_PutInode &rArr; yaffsfs_ReleaseInode &rArr; yaffs_del_obj &rArr; yaffs_del_file &rArr; yaffs_unlink_file_if_needed &rArr; yaffs_resize_file &rArr; yaffs2_handle_hole &rArr; yaffs_update_oh &rArr; yaffs_check_gc &rArr; yaffs_gc_block &rArr;  yaffs_generic_obj_del (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSQCreate
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yaffs_start_up
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcpip_init
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TCPTest
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;File_Init
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eth_netif_init
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_KeyTaskCreate
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyInit
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_main.o(.text)
</UL>
<P><STRONG><a name="[696]"></a>System_Time_Init</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, user_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = System_Time_Init &rArr; RTC_SetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CalibCounterCmd
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Cmd
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ResetClockTickCounter
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[69b]"></a>Board_Init</STRONG> (Thumb, 46 bytes, Stack size 40 bytes, user_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = Board_Init &rArr; EEPROM_ReadStruct &rArr; EEPROM_ReadData &rArr; I2C_MasterTransferData &rArr; I2C_MasterHanleStates
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NandFlash_Init
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NORFLASHInit
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_24c02_Init
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EEPROM_ReadStruct
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6a6]"></a>_AddMenuItem</STRONG> (Thumb, 42 bytes, Stack size 40 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = _AddMenuItem &rArr; MENU_AddItem &rArr; MENU__ResizeMenu &rArr; _CalcWindowSizeY &rArr; _CalcMenuSizeY &rArr; _GetItemHeight &rArr; _GetEffectSize &rArr; _HasEffect &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_AddItem
</UL>
<BR>[Called By]<UL><LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateMenu
</UL>

<P><STRONG><a name="[6a8]"></a>_CreateMenu</STRONG> (Thumb, 524 bytes, Stack size 40 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = _CreateMenu &rArr; FRAMEWIN_AddMenu &rArr; MENU_Attach &rArr; MENU__ResizeMenu &rArr; _CalcWindowSizeY &rArr; _CalcMenuSizeY &rArr; _GetItemHeight &rArr; _GetEffectSize &rArr; _HasEffect &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_SetDefaultFont (via Veneer)
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_CreateEx
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_AddMenu (via Veneer)
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddMenuItem
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StartReversi
</UL>

<P><STRONG><a name="[6ac]"></a>_OnMenu</STRONG> (Thumb, 448 bytes, Stack size 24 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = _OnMenu &rArr; GUI_CreateDialogBox &rArr; WM_ShowWindow &rArr; WM_InvalidateWindowDescs &rArr;  WM_InvalidateWindowDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox (via Veneer)
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus (via Veneer)
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbReversiWin
</UL>

<P><STRONG><a name="[6ae]"></a>MainDisplayStatus</STRONG> (Thumb, 626 bytes, Stack size 72 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = MainDisplayStatus &rArr; GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetFullTime
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode (via Veneer)
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect (via Veneer)
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap (via Veneer)
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont (via Veneer)
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor (via Veneer)
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt (via Veneer)
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[6b1]"></a>_OnPaint</STRONG> (Thumb, 294 bytes, Stack size 232 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = _OnPaint &rArr; LISTVIEW_SetItemText &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText (via Veneer)
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_IncSel
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DecSel
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText (via Veneer)
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainDisplayStatus
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx (via Veneer)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbReversiWin
</UL>

<P><STRONG><a name="[9e]"></a>_cbReversiWin</STRONG> (Thumb, 422 bytes, Stack size 40 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = _cbReversiWin &rArr; _OnPaint &rArr; LISTVIEW_SetItemText &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel (via Veneer)
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetEnterInfo
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox (via Veneer)
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMenu
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus (via Veneer)
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc (via Veneer)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_menu.o(.text)
</UL>
<P><STRONG><a name="[6c1]"></a>_StartReversi</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, user_menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + Unknown Stack Size
<LI>Call Chain = _StartReversi &rArr; InitListview &rArr; LISTVIEW_CreateEx &rArr; HEADER_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow (via Veneer)
<LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetTextAlign (via Veneer)
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetText (via Veneer)
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetFont (via Veneer)
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetClientColor (via Veneer)
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_CreateEx (via Veneer)
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitListview
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Menu_Task
</UL>

<P><STRONG><a name="[6f6]"></a>_GetNumVisibleRows</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, listview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = _GetNumVisibleRows &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar (via Veneer)
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight (via Veneer)
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
</UL>
<BR>[Called By]<UL><LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[6f9]"></a>_Paint</STRONG> (Thumb, 758 bytes, Stack size 112 bytes, listview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar (via Veneer)
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown (via Veneer)
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor (via Veneer)
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor (via Veneer)
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems (via Veneer)
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth (via Veneer)
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight (via Veneer)
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect (via Veneer)
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect (via Veneer)
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine (via Veneer)
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine (via Veneer)
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect (via Veneer)
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect (via Veneer)
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem (via Veneer)
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems (via Veneer)
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p (via Veneer)
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode (via Veneer)
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTVIEW_Callback
</UL>

<P><STRONG><a name="[70b]"></a>_SetSelFromPos</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, listview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = _SetSelFromPos &rArr; LISTVIEW_SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar (via Veneer)
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel (via Veneer)
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight (via Veneer)
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems (via Veneer)
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
</UL>
<BR>[Called By]<UL><LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[70d]"></a>_NotifyOwner</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, listview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = _NotifyOwner &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent (via Veneer)
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p (via Veneer)
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTVIEW_Callback
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[710]"></a>_OnTouch</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, listview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = _OnTouch &rArr; _SetSelFromPos &rArr; LISTVIEW_SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTVIEW_Callback
</UL>

<P><STRONG><a name="[711]"></a>_GetXSize</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, listview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
</UL>

<P><STRONG><a name="[712]"></a>_GetHeaderWidth</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, listview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = _GetHeaderWidth &rArr; HEADER_GetItemWidth &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems (via Veneer)
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
</UL>

<P><STRONG><a name="[718]"></a>_FreeAttached</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, listview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = _FreeAttached &rArr; GUI_ARRAY_Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem (via Veneer)
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems (via Veneer)
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete (via Veneer)
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTVIEW_Callback
</UL>

<P><STRONG><a name="[71b]"></a>_AddKey</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, listview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = _AddKey &rArr; LISTVIEW_IncSel &rArr; LISTVIEW_SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock (via Veneer)
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock (via Veneer)
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_IncSel
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DecSel
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTVIEW_Callback
</UL>

<P><STRONG><a name="[9f]"></a>_LISTVIEW_Callback</STRONG> (Thumb, 300 bytes, Stack size 32 bytes, listview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = _LISTVIEW_Callback &rArr; _Paint &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState (via Veneer)
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive (via Veneer)
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos (via Veneer)
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p (via Veneer)
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc (via Veneer)
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV (via Veneer)
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listview.o(.text)
</UL>
<P><STRONG><a name="[72a]"></a>_IsTopLevelMenu</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__SendMenuMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ForwardPIDMsgToOwner
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubmenu
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseCapture
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HasEffect
</UL>

<P><STRONG><a name="[72b]"></a>_HasEffect</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = _HasEffect &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsTopLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetEffectSize
</UL>

<P><STRONG><a name="[72c]"></a>_GetEffectSize</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = _GetEffectSize &rArr; _HasEffect &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HasEffect
</UL>
<BR>[Called By]<UL><LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubmenu
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPos
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcMenuSizeY
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcMenuSizeX
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemHeight
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemWidth
</UL>

<P><STRONG><a name="[72d]"></a>_CalcTextWidth</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = _CalcTextWidth &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_GetCharDistX &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont (via Veneer)
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__SetItem
</UL>

<P><STRONG><a name="[72f]"></a>_GetItemWidth</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _GetItemWidth &rArr; _GetEffectSize &rArr; _HasEffect &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem (via Veneer)
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetEffectSize
</UL>
<BR>[Called By]<UL><LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPos
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcMenuSizeX
</UL>

<P><STRONG><a name="[730]"></a>_GetItemHeight</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _GetItemHeight &rArr; _GetEffectSize &rArr; _HasEffect &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont (via Veneer)
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem (via Veneer)
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetEffectSize
</UL>
<BR>[Called By]<UL><LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPos
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcMenuSizeY
</UL>

<P><STRONG><a name="[732]"></a>_CalcMenuSizeX</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = _CalcMenuSizeX &rArr; _GetItemWidth &rArr; _GetEffectSize &rArr; _HasEffect &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__GetNumItems
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemWidth
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetEffectSize
</UL>
<BR>[Called By]<UL><LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubmenu
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcWindowSizeX
</UL>

<P><STRONG><a name="[733]"></a>_CalcMenuSizeY</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = _CalcMenuSizeY &rArr; _GetItemHeight &rArr; _GetEffectSize &rArr; _HasEffect &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__GetNumItems
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemHeight
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetEffectSize
</UL>
<BR>[Called By]<UL><LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubmenu
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcWindowSizeY
</UL>

<P><STRONG><a name="[734]"></a>_CalcWindowSizeX</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = _CalcWindowSizeX &rArr; _CalcMenuSizeX &rArr; _GetItemWidth &rArr; _GetEffectSize &rArr; _HasEffect &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcMenuSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__ResizeMenu
</UL>

<P><STRONG><a name="[735]"></a>_CalcWindowSizeY</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = _CalcWindowSizeY &rArr; _CalcMenuSizeY &rArr; _GetItemHeight &rArr; _GetEffectSize &rArr; _HasEffect &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcMenuSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__ResizeMenu
</UL>

<P><STRONG><a name="[736]"></a>_GetItemFromPos</STRONG> (Thumb, 216 bytes, Stack size 64 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = _GetItemFromPos &rArr; _CalcMenuSizeY &rArr; _GetItemHeight &rArr; _GetEffectSize &rArr; _HasEffect &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__GetNumItems
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcMenuSizeY
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcMenuSizeX
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemHeight
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemWidth
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetEffectSize
</UL>
<BR>[Called By]<UL><LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[737]"></a>_GetItemPos</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = _GetItemPos &rArr; _GetItemHeight &rArr; _GetEffectSize &rArr; _HasEffect &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemHeight
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemWidth
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetEffectSize
</UL>
<BR>[Called By]<UL><LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubmenu
</UL>

<P><STRONG><a name="[738]"></a>_SetCapture</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = _SetCapture &rArr; WM_SetCapture &rArr; WM__ReleaseCapture &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture (via Veneer)
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasCaptured (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMenu
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectItem
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CloseSubmenu
</UL>

<P><STRONG><a name="[73b]"></a>_ReleaseCapture</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = _ReleaseCapture &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture (via Veneer)
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasCaptured (via Veneer)
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsTopLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeselectItem
</UL>

<P><STRONG><a name="[73e]"></a>_CloseSubmenu</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = _CloseSubmenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem (via Veneer)
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DetachWindow (via Veneer)
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__InvalidateItem
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__SendMenuMessage
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMenu
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeactivateMenu
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ActivateMenu
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubmenu
</UL>

<P><STRONG><a name="[741]"></a>_OpenSubmenu</STRONG> (Thumb, 310 bytes, Stack size 48 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = _OpenSubmenu &rArr; _GetItemPos &rArr; _GetItemHeight &rArr; _GetEffectSize &rArr; _HasEffect &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem (via Veneer)
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow (via Veneer)
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY (via Veneer)
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX (via Veneer)
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_AttachWindowAt (via Veneer)
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU_SetOwner
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__InvalidateItem
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__SendMenuMessage
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CloseSubmenu
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPos
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcMenuSizeY
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcMenuSizeX
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetEffectSize
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsTopLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ActivateMenu
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectItem
</UL>

<P><STRONG><a name="[745]"></a>_ClosePopup</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = _ClosePopup &rArr; WM_DetachWindow &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture (via Veneer)
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DetachWindow (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMenu
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ActivateItem
</UL>

<P><STRONG><a name="[746]"></a>_SetSelection</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = _SetSelection &rArr; MENU__InvalidateItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__InvalidateItem
</UL>
<BR>[Called By]<UL><LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ActivateMenu
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeselectItem
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectItem
</UL>

<P><STRONG><a name="[747]"></a>_SelectItem</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = _SelectItem &rArr; _OpenSubmenu &rArr; _GetItemPos &rArr; _GetItemHeight &rArr; _GetEffectSize &rArr; _HasEffect &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelection
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubmenu
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MENU_AddKey
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[748]"></a>_DeselectItem</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = _DeselectItem &rArr; _ReleaseCapture &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelection
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MENU_AddKey
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMenu
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[749]"></a>_ActivateItem</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = _ActivateItem &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem (via Veneer)
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__SendMenuMessage
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClosePopup
</UL>
<BR>[Called By]<UL><LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MENU_AddKey
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[74a]"></a>_ActivateMenu</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = _ActivateMenu &rArr; _OpenSubmenu &rArr; _GetItemPos &rArr; _GetItemHeight &rArr; _GetEffectSize &rArr; _HasEffect &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem (via Veneer)
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelection
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OpenSubmenu
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CloseSubmenu
</UL>
<BR>[Called By]<UL><LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MENU_AddKey
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[74b]"></a>_DeactivateMenu</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = _DeactivateMenu &rArr; _CloseSubmenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CloseSubmenu
</UL>
<BR>[Called By]<UL><LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MENU_AddKey
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMenu
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[74f]"></a>_ForwardMouseOverMsg</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ForwardMouseOverMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[74c]"></a>_HandlePID</STRONG> (Thumb, 282 bytes, Stack size 56 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = _HandlePID &rArr; _ActivateMenu &rArr; _OpenSubmenu &rArr; _GetItemPos &rArr; _GetItemHeight &rArr; _GetEffectSize &rArr; _HasEffect &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin (via Veneer)
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_PID__GetPrevState (via Veneer)
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ForwardMouseOverMsg
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeactivateMenu
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ActivateMenu
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ActivateItem
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeselectItem
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectItem
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClosePopup
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
</UL>
<BR>[Called By]<UL><LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[750]"></a>_ForwardPIDMsgToOwner</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = _ForwardPIDMsgToOwner &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent (via Veneer)
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage (via Veneer)
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgY (via Veneer)
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowOrgX (via Veneer)
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsTopLevelMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MENU_Callback
</UL>

<P><STRONG><a name="[753]"></a>_OnMenu</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = _OnMenu &rArr; MENU__ResizeMenu &rArr; _CalcWindowSizeY &rArr; _CalcMenuSizeY &rArr; _GetItemHeight &rArr; _GetEffectSize &rArr; _HasEffect &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent (via Veneer)
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage (via Veneer)
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__ResizeMenu
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeactivateMenu
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeselectItem
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClosePopup
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CloseSubmenu
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MENU_Callback
</UL>

<P><STRONG><a name="[754]"></a>_OnTouch</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = _OnTouch &rArr; _HandlePID &rArr; _ActivateMenu &rArr; _OpenSubmenu &rArr; _GetItemPos &rArr; _GetItemHeight &rArr; _GetEffectSize &rArr; _HasEffect &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MENU_Callback
</UL>

<P><STRONG><a name="[755]"></a>_SetPaintColors</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _SetPaintColors &rArr; GUI_SetColor &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor (via Veneer)
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[757]"></a>_OnPaint</STRONG> (Thumb, 608 bytes, Stack size 80 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = _OnPaint &rArr; _CalcMenuSizeY &rArr; _GetItemHeight &rArr; _GetEffectSize &rArr; _HasEffect &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock (via Veneer)
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock (via Veneer)
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont (via Veneer)
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine (via Veneer)
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine (via Veneer)
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect (via Veneer)
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem (via Veneer)
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont (via Veneer)
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor (via Veneer)
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin (via Veneer)
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect (via Veneer)
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect (via Veneer)
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor (via Veneer)
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx (via Veneer)
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MENU__GetNumItems
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPaintColors
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcMenuSizeY
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcMenuSizeX
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemHeight
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemWidth
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetEffectSize
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HasEffect
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MENU_Callback
</UL>

<P><STRONG><a name="[a0]"></a>_MENU_Callback</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = _MENU_Callback &rArr; _OnTouch &rArr; _HandlePID &rArr; _ActivateMenu &rArr; _OpenSubmenu &rArr; _GetItemPos &rArr; _GetItemHeight &rArr; _GetEffectSize &rArr; _HasEffect &rArr; _IsTopLevelMenu &rArr; MENU__SendMenuMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive (via Veneer)
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete (via Veneer)
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p (via Veneer)
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc (via Veneer)
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MENU_AddKey
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnMenu
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ForwardPIDMsgToOwner
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.text)
</UL>
<P><STRONG><a name="[769]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, user_file.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[768]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, user_file.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>

<P><STRONG><a name="[775]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, equipmentlist.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[774]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, equipmentlist.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>

<P><STRONG><a name="[77d]"></a>list_del</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, task_uartrcv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del_init
</UL>

<P><STRONG><a name="[77c]"></a>list_del_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, task_uartrcv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_del
</UL>

<P><STRONG><a name="[7ff]"></a>_Size2LegalSize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guialloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[806]"></a>_GetSize</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, guialloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
</UL>

<P><STRONG><a name="[807]"></a>_Free</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, guialloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Free
</UL>
<BR>[Called By]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>

<P><STRONG><a name="[800]"></a>_FindFreeHandle</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, guialloc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[801]"></a>_FindHole</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, guialloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _FindHole
</UL>
<BR>[Called By]<UL><LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[7fa]"></a>_CreateHole</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, guialloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _CreateHole
</UL>
<BR>[Calls]<UL><LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[7fc]"></a>_CheckInit</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, guialloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _CheckInit
</UL>
<BR>[Calls]<UL><LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetNumFreeBytes
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[7fe]"></a>_Alloc</STRONG> (Thumb, 244 bytes, Stack size 24 bytes, guialloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Alloc &rArr; _CreateHole
</UL>
<BR>[Calls]<UL><LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CheckInit
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateHole
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindHole
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindFreeHandle
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Size2LegalSize
</UL>
<BR>[Called By]<UL><LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>

<P><STRONG><a name="[809]"></a>_InitContext</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, guicore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _InitContext &rArr; LCD_SetColor &rArr; LCD_Color2Index
</UL>
<BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_L0_GetRect
</UL>
<BR>[Called By]<UL><LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[811]"></a>_GetTaskNo</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, guitask.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetTaskNo
</UL>
<BR>[Calls]<UL><LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTaskId (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[816]"></a>_GetColorIndex</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
<LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
</UL>

<P><STRONG><a name="[db]"></a>_DrawBitmap_RLE4</STRONG> (Thumb, 552 bytes, Stack size 88 bytes, lcdrle4.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _DrawBitmap_RLE4 &rArr; LCD_GetpPalConvTable &rArr; LCD_GetpPalConvTableUncached &rArr; LCD_Color2Index
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTable
<LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelIndex
<LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdrle4.o(.constdata)
</UL>
<P><STRONG><a name="[82c]"></a>_GetNumItems</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dropdown.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_GetNumItems
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectByKey
</UL>

<P><STRONG><a name="[828]"></a>_GethItem</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _GethItem &rArr; GUI_ARRAY_GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetpItem
</UL>

<P><STRONG><a name="[82a]"></a>_DrawTriangleDown</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = _DrawTriangleDown &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[82b]"></a>_GetpItem</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _GetpItem &rArr; _GethItem &rArr; GUI_ARRAY_GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectByKey
</UL>

<P><STRONG><a name="[82f]"></a>_Tolower</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dropdown.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectByKey
</UL>

<P><STRONG><a name="[82e]"></a>_SelectByKey</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = _SelectByKey &rArr; DROPDOWN_SetSel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Tolower
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetpItem
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
</UL>

<P><STRONG><a name="[830]"></a>_FreeAttached</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = _FreeAttached &rArr; WM_DeleteWindow &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DROPDOWN_Callback
</UL>

<P><STRONG><a name="[831]"></a>_Paint</STRONG> (Thumb, 288 bytes, Stack size 48 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
<LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetpItem
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTriangleDown
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DROPDOWN_Callback
</UL>

<P><STRONG><a name="[835]"></a>_OnTouch</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = _OnTouch &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DROPDOWN_Callback
</UL>

<P><STRONG><a name="[cd]"></a>_DROPDOWN_Callback</STRONG> (Thumb, 288 bytes, Stack size 24 bytes, dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 744 + Unknown Stack Size
<LI>Call Chain = _DROPDOWN_Callback &rArr; DROPDOWN_AddKey &rArr; DROPDOWN_Expand &rArr; LISTBOX_CreateAsChild &rArr; LISTBOX_CreateEx &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetSel
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[845]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Collapse
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_AddKey
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_Expand
<LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dropdown.o(.text)
</UL>
<P><STRONG><a name="[84e]"></a>_Paint</STRONG> (Thumb, 418 bytes, Stack size 88 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WIDGET__FillStringInRect &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
<LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__Callback
</UL>

<P><STRONG><a name="[857]"></a>_Delete</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__Callback
</UL>

<P><STRONG><a name="[85b]"></a>_IncrementBuffer</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetMaxLen
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_CreateEx
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
</UL>

<P><STRONG><a name="[85d]"></a>_IsSpaceInBuffer</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = _IsSpaceInBuffer &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetText
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
</UL>

<P><STRONG><a name="[85e]"></a>_IsCharsAvailable</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _IsCharsAvailable &rArr; GUI__GetNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
</UL>

<P><STRONG><a name="[85f]"></a>_DeleteChar</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = _DeleteChar &rArr; WM_NotifyParent &rArr; WM_SendToParent &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
</UL>

<P><STRONG><a name="[861]"></a>_InsertChar</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = _InsertChar &rArr; _IsSpaceInBuffer &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__CalcSizeOfChar
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsCharsAvailable
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove (via Veneer)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
</UL>

<P><STRONG><a name="[865]"></a>_OnTouch</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = _OnTouch &rArr; EDIT_SetCursorAtPixel &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetCursorAtPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT__Callback
</UL>

<P><STRONG><a name="[ce]"></a>EDIT__Callback</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, edit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = EDIT__Callback &rArr; WIDGET_HandleActive &rArr; _UpdateChildPostions &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_AddKey
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[857]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Delete
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> edit.o(.text)
</UL>
<P><STRONG><a name="[86e]"></a>_SetActive</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = _SetActive &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetActive
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnChildHasFocus
</UL>

<P><STRONG><a name="[86f]"></a>_OnTouch</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = _OnTouch &rArr; WM_SetCaptureMove &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCaptureMove
<LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[877]"></a>_Paint</STRONG> (Thumb, 326 bytes, Stack size 72 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WIDGET__FillStringInRect &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetActiveWindow
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_EFFECT_3D_DrawUp
<LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[879]"></a>_OnChildHasFocus</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _OnChildHasFocus &rArr; _SetActive &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestorOrSelf
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetActive
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FRAMEWIN_Callback
</UL>

<P><STRONG><a name="[cf]"></a>_FRAMEWIN_Callback</STRONG> (Thumb, 364 bytes, Stack size 64 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = _FRAMEWIN_Callback &rArr; WIDGET_HandleActive &rArr; _UpdateChildPostions &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetActive
<LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnChildHasFocus
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin.o(.text)
</UL>
<P><STRONG><a name="[d0]"></a>FRAMEWIN__cbClient</STRONG> (Thumb, 246 bytes, Stack size 40 bytes, framewin.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN__cbClient &rArr; WIDGET_HandleActive &rArr; _UpdateChildPostions &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin.o(.text)
</UL>
<P><STRONG><a name="[88c]"></a>_Paint</STRONG> (Thumb, 416 bytes, Stack size 48 bytes, header.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
<LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HEADER_Callback
</UL>

<P><STRONG><a name="[891]"></a>_RestoreOldCursor</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, header.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
</UL>

<P><STRONG><a name="[890]"></a>_FreeAttached</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, header.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = _FreeAttached &rArr; GUI_ARRAY_Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreOldCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HEADER_Callback
</UL>

<P><STRONG><a name="[892]"></a>_GetItemIndex</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, header.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = _GetItemIndex &rArr; WM_GetWindowSizeY &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[895]"></a>_HandlePID</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, header.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = _HandlePID &rArr; HEADER_SetItemWidth &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreOldCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[896]"></a>_OnTouch</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, header.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = _OnTouch &rArr; _HandlePID &rArr; HEADER_SetItemWidth &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HEADER_Callback
</UL>

<P><STRONG><a name="[d1]"></a>_HEADER_Callback</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, header.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = _HEADER_Callback &rArr; WIDGET_HandleActive &rArr; _UpdateChildPostions &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> header.o(.text)
</UL>
<P><STRONG><a name="[8a3]"></a>_FreeText</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, progbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _FreeText &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Delete
</UL>

<P><STRONG><a name="[8a9]"></a>_Value2X</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, progbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Value2X
</UL>
<BR>[Called By]<UL><LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[8a4]"></a>_DrawPart</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, progbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _DrawPart &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>
<BR>[Called By]<UL><LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[8a5]"></a>_GetText</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, progbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _GetText &rArr; GUI_AddDecMin &rArr; GUI_AddDecShift &rArr; _Check_NegLong
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
</UL>
<BR>[Called By]<UL><LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[8a7]"></a>_GetTextRect</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, progbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = _GetTextRect &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI_GetCharDistX &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetText
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[8a8]"></a>_Paint</STRONG> (Thumb, 182 bytes, Stack size 72 bytes, progbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; _DrawPart &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[8a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextRect
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetText
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawPart
<LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Value2X
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PROGBAR_Callback
</UL>

<P><STRONG><a name="[8ab]"></a>_Delete</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, progbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = _Delete &rArr; _FreeText &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeText
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PROGBAR_Callback
</UL>

<P><STRONG><a name="[d2]"></a>_PROGBAR_Callback</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, progbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = _PROGBAR_Callback &rArr; WIDGET_HandleActive &rArr; _UpdateChildPostions &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Delete
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbar.o(.text)
</UL>
<P><STRONG><a name="[8b6]"></a>_UpdateChildPostions</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = _UpdateChildPostions &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
</UL>
<BR>[Called By]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[8b8]"></a>_EffectRequiresRedraw</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, widget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _EffectRequiresRedraw &rArr; WM__Client2Screen
</UL>
<BR>[Calls]<UL><LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
</UL>
<BR>[Called By]<UL><LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
</UL>

<P><STRONG><a name="[de]"></a>_WIDGET_EFFECT_3D1L_DrawUpRect</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, widget_effect_3d1l.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = _WIDGET_EFFECT_3D1L_DrawUpRect &rArr; GUI_DrawVLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D1L_DrawUp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d1l.o(.constdata)
</UL>
<P><STRONG><a name="[dc]"></a>_WIDGET_EFFECT_3D1L_DrawUp</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, widget_effect_3d1l.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = _WIDGET_EFFECT_3D1L_DrawUp &rArr; _WIDGET_EFFECT_3D1L_DrawUpRect &rArr; GUI_DrawVLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D1L_DrawUpRect
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d1l.o(.constdata)
</UL>
<P><STRONG><a name="[df]"></a>_WIDGET_EFFECT_3D1L_DrawDownRect</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, widget_effect_3d1l.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = _WIDGET_EFFECT_3D1L_DrawDownRect &rArr; GUI_DrawVLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D1L_DrawDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d1l.o(.constdata)
</UL>
<P><STRONG><a name="[dd]"></a>_WIDGET_EFFECT_3D1L_DrawDown</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, widget_effect_3d1l.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = _WIDGET_EFFECT_3D1L_DrawDown &rArr; _WIDGET_EFFECT_3D1L_DrawDownRect &rArr; GUI_DrawVLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D1L_DrawDownRect
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d1l.o(.constdata)
</UL>
<P><STRONG><a name="[e0]"></a>_WIDGET_EFFECT_3D1L_GetRect</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, widget_effect_3d1l.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = _WIDGET_EFFECT_3D1L_GetRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d1l.o(.constdata)
</UL>
<P><STRONG><a name="[8d1]"></a>_GetDialogItem</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, wm_getdialogitem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>

<P><STRONG><a name="[8d6]"></a>WM__ReleaseCapture</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm_setcapture.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = WM__ReleaseCapture &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
</UL>

<P><STRONG><a name="[8e6]"></a>_CheckCriticalHandles</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[8de]"></a>_DesktopHandle2Index</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
</UL>

<P><STRONG><a name="[8d8]"></a>_Invalidate1Abs</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _Invalidate1Abs &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[8d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RectIsNZ
</UL>
<BR>[Called By]<UL><LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateArea
</UL>

<P><STRONG><a name="[8e5]"></a>ResetNextDrawWin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[8dc]"></a>_GethDrawWin</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[8da]"></a>_SetClipRectUserIntersect</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GethDrawWin
</UL>
<BR>[Called By]<UL><LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>

<P><STRONG><a name="[8e7]"></a>_DeleteAllChildren</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = _DeleteAllChildren &rArr;  WM_DeleteWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[8e9]"></a>_AddToLinList</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _AddToLinList
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[8ea]"></a>_Findy1</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>
<BR>[Called By]<UL><LI><a href="#[8ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>

<P><STRONG><a name="[8eb]"></a>_Findx0</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + In Cycle
<LI>Call Chain = _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[8ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>

<P><STRONG><a name="[8ec]"></a>_Findx1</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findx1 &rArr;  _Findx1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
</UL>
<BR>[Called By]<UL><LI><a href="#[8ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
</UL>

<P><STRONG><a name="[8f0]"></a>WM__GetInvalidRectAbs</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
</UL>

<P><STRONG><a name="[8ef]"></a>_FindNext_IVR</STRONG> (Thumb, 372 bytes, Stack size 24 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>
<BR>[Called By]<UL><LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[8f3]"></a>_Paint1</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = _Paint1 &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[8f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
</UL>
<BR>[Called By]<UL><LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
</UL>

<P><STRONG><a name="[8f4]"></a>_Paint1Trans</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = _Paint1Trans &rArr; _Paint1 &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
</UL>
<BR>[Called By]<UL><LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransTopSiblings
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
</UL>

<P><STRONG><a name="[8f5]"></a>_PaintTransChildren</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
</UL>
<BR>[Called By]<UL><LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransTopSiblings
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
</UL>

<P><STRONG><a name="[8f6]"></a>_PaintTransTopSiblings</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = _PaintTransTopSiblings &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
</UL>
<BR>[Called By]<UL><LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[d3]"></a>_cbPaintMemDev</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = _cbPaintMemDev &rArr; WM__PaintWinAndOverlays &rArr; _PaintTransTopSiblings &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(.text)
</UL>
<P><STRONG><a name="[8f8]"></a>_Paint</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[8e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[8dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
</UL>
<BR>[Called By]<UL><LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>

<P><STRONG><a name="[8fa]"></a>_DrawNext</STRONG> (Thumb, 82 bytes, Stack size 112 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = _DrawNext &rArr; _Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W_M
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Called By]<UL><LI><a href="#[8fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec1
</UL>

<P><STRONG><a name="[d4]"></a>cbBackWin</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, wm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = cbBackWin &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(.text)
</UL>
<P><STRONG><a name="[907]"></a>_DrawFocusRect</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, gui_drawfocusrect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawFocusRect &rArr; LCD_DrawPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
</UL>

<P><STRONG><a name="[90b]"></a>_GotoY</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_goto.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoY
</UL>

<P><STRONG><a name="[90d]"></a>_GotoX</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_goto.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoX
</UL>

<P><STRONG><a name="[e5]"></a>_GetCharCode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_uc_encodenone.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[e6]"></a>_GetCharSize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_uc_encodenone.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[e7]"></a>_CalcSizeOfChar</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_uc_encodenone.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[e8]"></a>_Encode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_uc_encodenone.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[915]"></a>_DispLine</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, guicharline.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _DispLine &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[916]"></a>GUIPROP_FindChar</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, guicharp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_IsInFont
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_GetCharDistX
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>

<P><STRONG><a name="[919]"></a>DB2SJIS</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guiencjs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine_SJIS
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLineDistX_SJIS
</UL>

<P><STRONG><a name="[e9]"></a>_GetLineDistX_SJIS</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, guiencjs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = _GetLineDistX_SJIS &rArr; GUI_GetCharDistX &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB2SJIS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiencjs.o(.constdata)
</UL>
<P><STRONG><a name="[ea]"></a>_GetLineLen_SJIS</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, guiencjs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetLineLen_SJIS
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiencjs.o(.constdata)
</UL>
<P><STRONG><a name="[eb]"></a>_DispLine_SJIS</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, guiencjs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = _DispLine_SJIS &rArr; GL_DispChar &rArr; GUI_DispNextLine &rArr; GUI_GetFontDistY &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB2SJIS
<LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiencjs.o(.constdata)
</UL>
<P><STRONG><a name="[91f]"></a>_Min</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidev_banding.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[929]"></a>_Paint</STRONG> (Thumb, 282 bytes, Stack size 64 bytes, button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
</UL>

<P><STRONG><a name="[92b]"></a>_Delete</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
</UL>

<P><STRONG><a name="[92c]"></a>_ButtonPressed</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = _ButtonPressed &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
</UL>
<BR>[Called By]<UL><LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[92e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[92d]"></a>_ButtonReleased</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _ButtonReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[92e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[92e]"></a>_OnTouch</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = _OnTouch &rArr; _ButtonReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ButtonReleased
<LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ButtonPressed
</UL>
<BR>[Called By]<UL><LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
</UL>

<P><STRONG><a name="[939]"></a>_CallOwnerDraw</STRONG> (Thumb, 54 bytes, Stack size 48 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeX
</UL>

<P><STRONG><a name="[93b]"></a>_GetYSize</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[941]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsPartiallyVis
</UL>

<P><STRONG><a name="[93c]"></a>_GetItemSizeX</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = _GetItemSizeX &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[93e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
</UL>

<P><STRONG><a name="[93d]"></a>_GetItemSizeY</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[956]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[941]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsPartiallyVis
<LI><a href="#[93f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
</UL>

<P><STRONG><a name="[93e]"></a>_GetContentsSizeX</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = _GetContentsSizeX &rArr; _GetItemSizeX &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[94b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
</UL>

<P><STRONG><a name="[93f]"></a>_GetItemPosY</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[947]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsPartiallyVis
</UL>

<P><STRONG><a name="[940]"></a>_IsPartiallyVis</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[93f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[93b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetYSize
</UL>
<BR>[Called By]<UL><LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[941]"></a>_GetNumVisItems</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = _GetNumVisItems &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[93b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetYSize
</UL>
<BR>[Called By]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[94b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
</UL>

<P><STRONG><a name="[942]"></a>_NotifyOwner</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = _NotifyOwner &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTBOX_Callback
<LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[955]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
</UL>

<P><STRONG><a name="[943]"></a>_UpdateScrollPos</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsPartiallyVis
</UL>
<BR>[Called By]<UL><LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[94b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
</UL>

<P><STRONG><a name="[94b]"></a>_CalcScrollParas</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = _CalcScrollParas &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[941]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[93e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>

<P><STRONG><a name="[94c]"></a>_ManageAutoScroll</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = _ManageAutoScroll &rArr; LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[941]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[93e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>

<P><STRONG><a name="[951]"></a>_Tolower</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, listbox.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectByKey
<LI><a href="#[950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsAlphaNum
</UL>

<P><STRONG><a name="[950]"></a>_IsAlphaNum</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _IsAlphaNum
</UL>
<BR>[Calls]<UL><LI><a href="#[951]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Tolower
</UL>
<BR>[Called By]<UL><LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[952]"></a>_SelectByKey</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = _SelectByKey &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpString
<LI><a href="#[951]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Tolower
</UL>
<BR>[Called By]<UL><LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[953]"></a>_FreeAttached</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = _FreeAttached &rArr; GUI_ARRAY_Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTBOX_Callback
</UL>

<P><STRONG><a name="[954]"></a>_OnPaint</STRONG> (Thumb, 262 bytes, Stack size 72 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = _OnPaint &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTBOX_Callback
</UL>

<P><STRONG><a name="[955]"></a>_ToggleMultiSel</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = _ToggleMultiSel &rArr; LISTBOX__InvalidateItem &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTBOX_Callback
<LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[956]"></a>_GetItemFromPos</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = _GetItemFromPos &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTBOX_Callback
</UL>

<P><STRONG><a name="[957]"></a>_OnTouch</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = _OnTouch &rArr; _NotifyOwner &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LISTBOX_Callback
</UL>

<P><STRONG><a name="[958]"></a>_MoveSel</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = _MoveSel &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[845]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_IncSel
<LI><a href="#[959]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DecSel
</UL>

<P><STRONG><a name="[95b]"></a>_AddKey</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = _AddKey &rArr; LISTBOX_IncSel &rArr; _MoveSel &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
<LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_IncSel
<LI><a href="#[959]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DecSel
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[955]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SelectByKey
<LI><a href="#[950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsAlphaNum
</UL>
<BR>[Called By]<UL><LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddKey
</UL>

<P><STRONG><a name="[d5]"></a>_LISTBOX_Callback</STRONG> (Thumb, 338 bytes, Stack size 40 bytes, listbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = _LISTBOX_Callback &rArr; LISTBOX_AddKey &rArr; _AddKey &rArr; LISTBOX_IncSel &rArr; _MoveSel &rArr; LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; _IsPartiallyVis &rArr; _GetItemPosY &rArr; _GetItemSizeY &rArr; _CallOwnerDraw &rArr; LISTBOX_OwnerDraw &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddKey
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[956]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[955]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listbox.o(.text)
</UL>
<P><STRONG><a name="[967]"></a>_ResizeRect</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, radio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[964]"></a>_OnPaint</STRONG> (Thumb, 456 bytes, Stack size 96 bytes, radio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = _OnPaint &rArr; GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItem
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawFocusRect
<LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[966]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[965]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontInfo
<LI><a href="#[967]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ResizeRect
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RADIO_Callback
</UL>

<P><STRONG><a name="[96a]"></a>_OnTouch</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, radio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = _OnTouch &rArr; RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[96b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
<LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RADIO_Callback
</UL>

<P><STRONG><a name="[96f]"></a>_OnKey</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, radio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = _OnKey &rArr; RADIO_Inc &rArr; RADIO_AddValue &rArr; RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[96e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Inc
<LI><a href="#[96d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Dec
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RADIO_Callback
</UL>

<P><STRONG><a name="[d6]"></a>_RADIO_Callback</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, radio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = _RADIO_Callback &rArr; WIDGET_HandleActive &rArr; _UpdateChildPostions &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[96a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio.o(.text)
</UL>
<P><STRONG><a name="[fa]"></a>_WIDGET_EFFECT_3D_DrawUpRect</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, widget_effect_3d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = _WIDGET_EFFECT_3D_DrawUpRect &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_EFFECT_3D_DrawUp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[fb]"></a>_WIDGET_EFFECT_3D_DrawDownRect</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, widget_effect_3d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = _WIDGET_EFFECT_3D_DrawDownRect &rArr; GUI_DrawVLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D_DrawDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[f9]"></a>_WIDGET_EFFECT_3D_DrawDown</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, widget_effect_3d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = _WIDGET_EFFECT_3D_DrawDown &rArr; _WIDGET_EFFECT_3D_DrawDownRect &rArr; GUI_DrawVLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET_EFFECT_3D_DrawDownRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[fc]"></a>_WIDGET_EFFECT_3D_GetRect</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, widget_effect_3d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = _WIDGET_EFFECT_3D_GetRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[fe]"></a>_WIDGET_EFFECT_None_DrawDown</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[fd]"></a>_WIDGET_EFFECT_None_DrawUp</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[100]"></a>_WIDGET_EFFECT_None_DrawDownRect</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widget_effect_none.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[ff]"></a>_WIDGET_EFFECT_None_DrawUpRect</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, widget_effect_none.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[101]"></a>_WIDGET_EFFECT_None_GetRect</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, widget_effect_none.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = _WIDGET_EFFECT_None_GetRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[d7]"></a>_cbInvalidateOne</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, wm_bringtotop.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = _cbInvalidateOne &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_bringtotop.o(.text)
</UL>
<P><STRONG><a name="[974]"></a>_InvalidateWindowAndDescs</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm_bringtotop.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = _InvalidateWindowAndDescs &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[976]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>

<P><STRONG><a name="[976]"></a>_BringToTop</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, wm_bringtotop.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = _BringToTop &rArr; _InvalidateWindowAndDescs &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateWindowAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
</UL>

<P><STRONG><a name="[978]"></a>_GetDefaultWin</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, wm_getwindowsize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetDefaultWin
</UL>
<BR>[Calls]<UL><LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetActiveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>

<P><STRONG><a name="[979]"></a>_MoveDescendents</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, wm_move.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[979]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>
<BR>[Called By]<UL><LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[979]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>

<P><STRONG><a name="[97d]"></a>_GetNextChild</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, wm_setfocusonnextchild.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetNextChild
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[97e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[97e]"></a>_SetFocusOnNextChild</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, wm_setfocusonnextchild.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM_SendMessage &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[97f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocussedChild
<LI><a href="#[97d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextChild
<LI><a href="#[96b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
</UL>
<BR>[Called By]<UL><LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[98c]"></a>_SwapInt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[98a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1
</UL>

<P><STRONG><a name="[98b]"></a>Abs</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[98a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1
</UL>

<P><STRONG><a name="[985]"></a>_atan0_45</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_atan2
</UL>

<P><STRONG><a name="[984]"></a>_atan2</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[985]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_atan0_45
</UL>
<BR>[Called By]<UL><LI><a href="#[986]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcOrto
</UL>

<P><STRONG><a name="[98d]"></a>_SetLineColor</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[98a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1
</UL>

<P><STRONG><a name="[986]"></a>_CalcOrto</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[982]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_cos
<LI><a href="#[983]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_sin
<LI><a href="#[984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_atan2
</UL>
<BR>[Called By]<UL><LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
</UL>

<P><STRONG><a name="[989]"></a>_DrawLineEnd</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[987]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
</UL>

<P><STRONG><a name="[995]"></a>GL_DrawLineRelNM</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[997]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineRel
</UL>

<P><STRONG><a name="[998]"></a>GL_DrawLineToNM</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui2dlib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[999]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLineTo
</UL>

<P><STRONG><a name="[99b]"></a>_DrawRect</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, gui2dlib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawRect &rArr; LCD_DrawHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>

<P><STRONG><a name="[99e]"></a>_Check_NegLong</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gui_adddecshift.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Check_NegLong
</UL>
<BR>[Called By]<UL><LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>

<P><STRONG><a name="[9af]"></a>_DrawBitLine16BPP_DDB</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawBitLine16BPP_DDB
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[9b0]"></a>_XY2PTR</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[9b4]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 322 bytes, Stack size 56 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[9b5]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 248 bytes, Stack size 56 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[9b6]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 392 bytes, Stack size 56 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[9b3]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawBitLine8BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[9b1]"></a>_DrawBitLine8BPP_DDB</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DrawBitLine8BPP_DDB
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[109]"></a>_DrawBitmap</STRONG> (Thumb, 340 bytes, Stack size 88 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine4BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[9b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[9b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP_DDB
<LI><a href="#[9b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[9b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[9b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[9b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[9af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP_DDB
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[10c]"></a>_FillRect</STRONG> (Thumb, 158 bytes, Stack size 48 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[9b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset16
<LI><a href="#[9b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[10a]"></a>_DrawHLine</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[10b]"></a>_DrawVLine</STRONG> (Thumb, 186 bytes, Stack size 40 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _DrawVLine &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[10f]"></a>_SetPixelIndex</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _SetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[110]"></a>_XorPixel</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _XorPixel &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[10d]"></a>_GetPixelIndex</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, guidev_16.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _GetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[9bd]"></a>_SetScrollbar</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, wm_setscrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; WM_CreateWindowAsChild &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[9bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[9be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
</UL>
<BR>[Called By]<UL><LI><a href="#[9c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarH
<LI><a href="#[9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarV
</UL>

<P><STRONG><a name="[9c7]"></a>_DrawHLine</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gui_fillpolygon.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
</UL>

<P><STRONG><a name="[9c9]"></a>_CheckYInterSect</STRONG> (Thumb, 150 bytes, Stack size 28 bytes, gui_fillpolygon.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
</UL>

<P><STRONG><a name="[9c5]"></a>_Add</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, gui_fillpolygon.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
<LI><a href="#[9c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddPoint
</UL>

<P><STRONG><a name="[9c6]"></a>_Init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_fillpolygon.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
</UL>

<P><STRONG><a name="[9ca]"></a>_Flush</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, gui_fillpolygon.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
</UL>

<P><STRONG><a name="[9c4]"></a>_AddPoint</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, gui_fillpolygon.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Add
</UL>
<BR>[Called By]<UL><LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
</UL>

<P><STRONG><a name="[9c8]"></a>_GetPrevPointDiffy</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gui_fillpolygon.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
</UL>

<P><STRONG><a name="[9cf]"></a>Draw8Point</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, guicirc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[9ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawCircle
</UL>

<P><STRONG><a name="[111]"></a>GUI_USAGE_BM_AddPixel</STRONG> (Thumb, 48 bytes, Stack size 20 bytes, guidev_usagebm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GUI_USAGE_BM_AddPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[112]"></a>GUI_USAGE_BM_AddHLine</STRONG> (Thumb, 150 bytes, Stack size 56 bytes, guidev_usagebm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = GUI_USAGE_BM_AddHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[113]"></a>GUI_USAGE_BM_Clear</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, guidev_usagebm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GUI_USAGE_BM_Clear &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[115]"></a>GUI_USAGE_BM_GetNextDirty</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, guidev_usagebm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_USAGE_BM_GetNextDirty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[114]"></a>_GUI_USAGE_BM_Delete</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, guidev_usagebm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _GUI_USAGE_BM_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[9d7]"></a>_GetArrowSize</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetArrowSize
</UL>
<BR>[Calls]<UL><LI><a href="#[9d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetYSize
<LI><a href="#[9d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetXSize
</UL>
<BR>[Called By]<UL><LI><a href="#[9da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[9db]"></a>_WIDGET__RECT2VRECT</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _WIDGET__RECT2VRECT
</UL>
<BR>[Called By]<UL><LI><a href="#[9da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[9da]"></a>_CalcPositions</STRONG> (Thumb, 312 bytes, Stack size 64 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = _CalcPositions &rArr; WM_GetScrollbarV &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[9dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DivideRound
<LI><a href="#[9db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WIDGET__RECT2VRECT
<LI><a href="#[9d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetArrowSize
</UL>
<BR>[Called By]<UL><LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[9de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[9dd]"></a>_DrawTriangle</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = _DrawTriangle &rArr; GUI_DrawVLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; _FindNext_IVR &rArr; _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[9de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[9de]"></a>_Paint</STRONG> (Thumb, 376 bytes, Stack size 72 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; _CalcPositions &rArr; WM_GetScrollbarV &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillRectEx
<LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
<LI><a href="#[9dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTriangle
<LI><a href="#[9da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[9df]"></a>_ScrollbarPressed</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = _ScrollbarPressed &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
</UL>
<BR>[Called By]<UL><LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[9e0]"></a>_ScrollbarReleased</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _ScrollbarReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[9e2]"></a>_OnTouch</STRONG> (Thumb, 210 bytes, Stack size 72 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = _OnTouch &rArr; _CalcPositions &rArr; WM_GetScrollbarV &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[9dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DivideRound
<LI><a href="#[9e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ScrollbarReleased
<LI><a href="#[9df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ScrollbarPressed
<LI><a href="#[9da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[9e6]"></a>_OnKey</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = _OnKey &rArr; SCROLLBAR_Inc &rArr; SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[9e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Inc
<LI><a href="#[9e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Dec
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[9e7]"></a>_OnSetScrollState</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = _OnSetScrollState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateAreaBelow &rArr; WM_InvalidateArea &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[d8]"></a>_SCROLLBAR_Callback</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, scrollbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = _SCROLLBAR_Callback &rArr; WIDGET_HandleActive &rArr; _UpdateChildPostions &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[9e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnSetScrollState
<LI><a href="#[9e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[9e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[9de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[9b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar.o(.text)
</UL>
<P><STRONG><a name="[7a2]"></a>_fp_digits</STRONG> (Thumb, 426 bytes, Stack size 96 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>
<BR>[Called By]<UL><LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[b0]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[7ad]"></a>_fp_value</STRONG> (Thumb, 504 bytes, Stack size 88 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>
<BR>[Called By]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[b2]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
